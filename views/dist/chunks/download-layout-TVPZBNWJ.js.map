{
  "version": 3,
  "sources": ["../../src/ui/download-layout.mjs"],
  "sourcesContent": ["import { translateElement } from \"../utils.mjs\";\n\n/**\n * <download-layout> - Complete download flow container\n *\n * Responsibilities:\n * - Encapsulates entire download state and UI\n * - Manages file-password, file-overview, file-downloading, file-finished child views\n * - Handles download lifecycle (password \u2192 overview \u2192 downloading \u2192 complete)\n * - Forwards events to parent <go-send> element for controller handling\n *\n * State machine:\n *   password \u2192 overview \u2192 downloading \u2192 finished\n *      \u2193          \u2193\n *    (retry)   (cancel)\n */\nclass DownloadLayoutElement extends HTMLElement {\n  constructor() {\n    super();\n\n    // Current view state\n    this.currentView = null; // 'password', 'overview', 'downloading', 'finished', 'error'\n    this.currentViewElement = null;\n\n    // File info from server + URL\n    this.fileInfo = null;\n\n    // App reference\n    this.app = null;\n\n    // Template mount tracking\n    this._templateMounted = false;\n    this._postMountFrame = null;\n\n    // Bound event handlers\n    this._boundHandlers = {\n      passwordSubmit: this.handlePasswordSubmit.bind(this),\n      downloadStart: this.handleDownloadStart.bind(this),\n    };\n    this._handlersBound = false;\n  }\n\n  connectedCallback() {\n    // Mount template first (synchronous)\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"download-layout\");\n      if (!template) {\n        console.error(\"Template #download-layout not found\");\n        return;\n      }\n\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n    }\n\n    // Schedule async initialization\n    this._postMountFrame = requestAnimationFrame(() => {\n      this._postMountFrame = null;\n      if (!this.isConnected) {\n        return;\n      }\n\n      translateElement(this);\n      this.app = this.closest(\"go-send\");\n\n      // Bind event listeners\n      if (!this._handlersBound) {\n        this.addEventListener(\"password-submit\", this._boundHandlers.passwordSubmit);\n        this.addEventListener(\"download-start\", this._boundHandlers.downloadStart);\n        this._handlersBound = true;\n      }\n\n      // Initialize fileInfo from server data\n      this.initializeFileInfo();\n\n      // Determine initial view\n      if (!this.fileInfo) {\n        this.showErrorView(\"File not found\");\n        return;\n      }\n\n      if (this.fileInfo.requiresPassword && !this.fileInfo.password) {\n        this.showPasswordView();\n      } else {\n        // No password required or password already set \u2192 fetch metadata immediately\n        this.dispatchMetadataRequest();\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n      this._postMountFrame = null;\n    }\n\n    if (this._handlersBound) {\n      this.removeEventListener(\"password-submit\", this._boundHandlers.passwordSubmit);\n      this.removeEventListener(\"download-start\", this._boundHandlers.downloadStart);\n      this._handlersBound = false;\n    }\n  }\n\n  /**\n   * Initialize fileInfo from URL params and downloadMetadata global\n   */\n  initializeFileInfo() {\n    /* global downloadMetadata */\n    const meta = window.downloadMetadata;\n\n    // Check if metadata exists and file wasn't 404\n    if (!meta || meta.status === 404) {\n      this.fileInfo = null;\n      return;\n    }\n\n    // Parse URL to extract file ID and secret key\n    const { id, key } = this.parseURL();\n    if (!id || !key) {\n      console.error(\"[download-layout] Invalid URL: missing file ID or secret key\");\n      this.fileInfo = null;\n      return;\n    }\n\n    // Get full URL (needed for password-based key derivation)\n    // Strip any url parameters between fileId and secretKey\n    const fileInfoUrl = window.location.href.replace(/\\?.+#/, '#');\n\n    // Create fileInfo object\n    this.fileInfo = {\n      id,\n      secretKey: key,\n      nonce: meta.nonce,\n      requiresPassword: meta.pwd || false,\n      password: null,\n      url: fileInfoUrl, // Required for password authentication\n      // These will be filled after metadata fetch:\n      name: null,\n      type: null,\n      size: null,\n      manifest: null,\n      iv: null,\n    };\n\n    console.log(\"[download-layout] Initialized fileInfo:\", {\n      id: this.fileInfo.id,\n      requiresPassword: this.fileInfo.requiresPassword,\n    });\n  }\n\n  /**\n   * Parse URL to extract file ID from pathname and secret key from fragment\n   * Supports both /{fileId} and /download/{fileId} formats\n   */\n  parseURL() {\n    const pathname = window.location.pathname;\n    const hash = window.location.hash;\n\n    // Extract file ID from pathname\n    // Matches: /abc123 or /download/abc123\n    const match = pathname.match(/\\/(?:download\\/)?([0-9a-fA-F]{10,16})/);\n    const id = match ? match[1] : null;\n\n    // Extract secret key from hash (remove leading #)\n    const key = hash ? hash.substring(1) : null;\n\n    return { id, key };\n  }\n\n  /**\n   * Dispatch metadata-request event to controller\n   * Controller will create FileReceiver and fetch metadata\n   */\n  dispatchMetadataRequest() {\n    const event = new CustomEvent(\"metadata-request\", {\n      detail: { fileInfo: this.fileInfo },\n      bubbles: true,\n    });\n    this.dispatchEvent(event);\n  }\n\n  /**\n   * Event Handlers (internal to layout)\n   */\n\n  handlePasswordSubmit(event) {\n    const { password } = event.detail;\n    console.log(\"[download-layout] Password submitted\");\n\n    // Stop event from bubbling (we'll handle it ourselves)\n    event.stopPropagation();\n\n    // Update fileInfo with password\n    this.fileInfo.password = password;\n\n    // Dispatch metadata request with updated fileInfo\n    // Controller will validate password and fetch metadata\n    this.dispatchMetadataRequest();\n  }\n\n  handleDownloadStart(event) {\n    console.log(\"[download-layout] Download start requested\");\n\n    // Show downloading view immediately\n    this.showDownloadingView();\n\n    // Bubble event to controller\n    // Controller will handle actual download via FileReceiver\n  }\n\n  /**\n   * Public Methods (called by controller)\n   */\n\n  /**\n   * Show password entry view\n   */\n  showPasswordView(errorMessage = null) {\n    this._switchView(\"password\", \"file-password-view\", (viewElement) => {\n      if (errorMessage && typeof viewElement.setError === \"function\") {\n        viewElement.setError(errorMessage);\n      }\n    });\n  }\n\n  /**\n   * Show file overview view (after successful metadata fetch)\n   */\n  showOverviewView(fileInfo) {\n    // Update our fileInfo with metadata from controller\n    if (fileInfo) {\n      this.fileInfo = { ...this.fileInfo, ...fileInfo };\n    }\n\n    this._switchView(\"overview\", \"file-overview-view\", (viewElement) => {\n      if (typeof viewElement.setFileInfo === \"function\") {\n        viewElement.setFileInfo(this.fileInfo);\n      }\n    });\n  }\n\n  /**\n   * Show downloading progress view\n   */\n  showDownloadingView() {\n    this._switchView(\"downloading\", \"file-downloading-view\", (viewElement) => {\n      // Set file info if available\n      if (this.fileInfo && typeof viewElement.setFileInfo === \"function\") {\n        viewElement.setFileInfo(this.fileInfo.name || \"File\", this.fileInfo.size || 0);\n      }\n    });\n  }\n\n  /**\n   * Show download complete view\n   */\n  showFinishedView() {\n    this._switchView(\"finished\", \"file-finished-view\");\n  }\n\n  /**\n   * Show error view\n   */\n  showErrorView(errorMessage) {\n    this._switchView(\"error\", \"file-error-view\", (viewElement) => {\n      if (typeof viewElement.setError === \"function\") {\n        viewElement.setError(errorMessage);\n      } else {\n        // Fallback: just show text\n        viewElement.textContent = errorMessage;\n      }\n    });\n  }\n\n  /**\n   * Update download progress (called by controller during download)\n   */\n  updateProgress(ratio, bytesDownloaded, totalBytes) {\n    if (this.currentView === \"downloading\" && this.currentViewElement) {\n      if (typeof this.currentViewElement.updateProgress === \"function\") {\n        this.currentViewElement.updateProgress(ratio, bytesDownloaded, totalBytes);\n      }\n    }\n  }\n\n  /**\n   * Internal: Switch to a different view\n   */\n  _switchView(viewName, customElementTag, configCallback = null) {\n    const container = this.querySelector(\"#download-content\");\n    if (!container) {\n      console.error(\"[download-layout] Container #download-content not found\");\n      return;\n    }\n\n    // Clear existing view\n    container.innerHTML = \"\";\n\n    // Create new view element\n    const viewElement = document.createElement(customElementTag);\n    container.appendChild(viewElement);\n\n    this.currentView = viewName;\n    this.currentViewElement = viewElement;\n\n    // Configure view if callback provided\n    if (configCallback) {\n      configCallback(viewElement);\n    }\n\n    console.log(`[download-layout] Switched to view: ${viewName}`);\n  }\n}\n\n// Register the custom element\ncustomElements.define(\"download-layout\", DownloadLayoutElement);\n"],
  "mappings": "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",
  "names": []
}
