function y(r){let e="";for(let n=0;n<r.length;n+=32768)e+=String.fromCharCode(...r.subarray(n,n+32768));return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function l(r){let e=r.replace(/-/g,"+").replace(/_/g,"/")+"===".slice((r.length+3)%4),t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;s++)n[s]=t.charCodeAt(s);return n}function m(r){let e=r.reduce((s,a)=>s+a.length,0),t=new Uint8Array(e),n=0;for(let s of r)t.set(s,n),n+=s.length;return t}function A(r,e){return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(e,!1)}function E(r,e,t){new DataView(r.buffer,r.byteOffset,r.byteLength).setUint32(e,t,!1)}function H(r,e){return r[e]}function P(r,e,t){r[e]=t}function f(r,e={},t){let n=r.getReader(),s=e||{};return new ReadableStream({async start(a){s.start&&await s.start(a)},async pull(a){for(;;){let{value:o,done:u}=await n.read();if(u){s.flush&&await s.flush(a),n.releaseLock(),a.close();return}if(!s.transform){a.enqueue(o);return}let d=!1,w={enqueue(U){d=!0,a.enqueue(U)}};if(await s.transform(o,w),d)return}},cancel(a){n.cancel(a),s.cancel&&s.cancel(a),t&&t(a)}})}var I=12,D=16,h=16,R="encrypt",q="decrypt",L=1024*64,W=new TextEncoder;function _(r){let e=new Uint8Array(r);return crypto.getRandomValues(e),e.buffer}var g=class{constructor(e,t,n,s){this.mode=e,this.prevChunk,this.seq=0,this.firstchunk=!0,this.rs=n,this.ikm=t.buffer,this.salt=s}async generateKey(){let e=await crypto.subtle.importKey("raw",this.ikm,"HKDF",!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"HKDF",salt:this.salt,info:W.encode("Content-Encoding: aes128gcm\0"),hash:"SHA-256"},e,{name:"AES-GCM",length:128},!0,["encrypt","decrypt"])}async generateNonceBase(){let e=await crypto.subtle.importKey("raw",this.ikm,"HKDF",!1,["deriveKey"]),t=await crypto.subtle.exportKey("raw",await crypto.subtle.deriveKey({name:"HKDF",salt:this.salt,info:W.encode("Content-Encoding: nonce\0"),hash:"SHA-256"},e,{name:"AES-GCM",length:128},!0,["encrypt","decrypt"]));return new Uint8Array(t.slice(0,I))}generateNonce(e){if(e>4294967295)throw new Error("record sequence number exceeds limit");let t=new Uint8Array(this.nonceBase),s=(A(t,t.length-4)^e)>>>0;return E(t,t.length-4,s),t}pad(e,t){let n=e.length;if(n+D>=this.rs)throw new Error("data too large for record size");if(t){let s=new Uint8Array(1);return s[0]=2,m([e,s])}else{let s=new Uint8Array(this.rs-n-D);return s[0]=1,m([e,s])}}unpad(e,t){for(let n=e.length-1;n>=0;n--)if(e[n]){if(t){if(e[n]!==2)throw new Error("delimiter of final record is not 2")}else if(e[n]!==1)throw new Error("delimiter of not final record is not 1");return e.slice(0,n)}throw new Error("no delimiter found")}createHeader(){let e=new Uint8Array(5);return E(e,0,this.rs),P(e,4,0),m([new Uint8Array(this.salt),e])}readHeader(e){if(e.length<21)throw new Error("chunk too small for reading header");let t={};t.salt=e.buffer.slice(0,h),t.rs=A(e,h);let n=H(e,h+4);return t.length=n+h+5,t}async encryptRecord(e,t,n){let s=this.generateNonce(t),a=await crypto.subtle.encrypt({name:"AES-GCM",iv:s},this.key,this.pad(e,n));return new Uint8Array(a)}async decryptRecord(e,t,n){let s=this.generateNonce(t),a=await crypto.subtle.decrypt({name:"AES-GCM",iv:s,tagLength:128},this.key,e);return this.unpad(new Uint8Array(a),n)}async start(e){if(this.mode===R)this.key=await this.generateKey(),this.nonceBase=await this.generateNonceBase(),e.enqueue(this.createHeader());else if(this.mode!==q)throw new Error("mode must be either encrypt or decrypt")}async transformPrevChunk(e,t){if(this.mode===R)t.enqueue(await this.encryptRecord(this.prevChunk,this.seq,e)),this.seq++;else{if(this.seq===0){let n=this.readHeader(this.prevChunk);this.salt=n.salt,this.rs=n.rs,this.key=await this.generateKey(),this.nonceBase=await this.generateNonceBase()}else t.enqueue(await this.decryptRecord(this.prevChunk,this.seq-1,e));this.seq++}}async transform(e,t){this.firstchunk||await this.transformPrevChunk(!1,t),this.firstchunk=!1,this.prevChunk=new Uint8Array(e.buffer)}async flush(e){this.prevChunk&&await this.transformPrevChunk(!0,e)}},S=class{constructor(e,t){this.mode=t,this.rs=e,this.chunkSize=t===R?e-17:21,this.partialChunk=new Uint8Array(this.chunkSize),this.offset=0}send(e,t){t.enqueue(e),this.chunkSize===21&&this.mode===q&&(this.chunkSize=this.rs),this.partialChunk=new Uint8Array(this.chunkSize),this.offset=0}transform(e,t){let n=0;if(this.offset>0){let s=Math.min(e.byteLength,this.chunkSize-this.offset);this.partialChunk.set(e.slice(0,s),this.offset),this.offset+=s,n+=s,this.offset===this.chunkSize&&this.send(this.partialChunk,t)}for(;n<e.byteLength;){let s=e.byteLength-n;if(s>=this.chunkSize){let a=e.slice(n,n+this.chunkSize);n+=this.chunkSize,this.send(a,t)}else{let a=e.slice(n,n+s);n+=a.byteLength,this.partialChunk.set(a),this.offset=a.byteLength}}}flush(e){this.offset>0&&e.enqueue(this.partialChunk.slice(0,this.offset))}};function M(r,e,t=L,n=_(h)){let s="encrypt",a=f(r,new S(t,s));return f(a,new g(s,e,t,n))}function T(r,e,t=L){let n="decrypt",s=f(r,new S(t,n));return f(s,new g(n,e,t))}var x=new TextEncoder,G=new TextDecoder,b=class{constructor(e,t){this._nonce=t||"yRCdyQ1EMSA3mo4rqSkuNQ==",e?this.rawSecret=l(e):this.rawSecret=crypto.getRandomValues(new Uint8Array(16)),this.secretKeyPromise=crypto.subtle.importKey("raw",this.rawSecret,"HKDF",!1,["deriveKey"]),this.metaKeyPromise=this.secretKeyPromise.then(function(n){return crypto.subtle.deriveKey({name:"HKDF",salt:new Uint8Array,info:x.encode("metadata"),hash:"SHA-256"},n,{name:"AES-GCM",length:128},!1,["encrypt","decrypt"])}),this.authKeyPromise=this.secretKeyPromise.then(function(n){return crypto.subtle.deriveKey({name:"HKDF",salt:new Uint8Array,info:x.encode("authentication"),hash:"SHA-256"},n,{name:"HMAC",hash:{name:"SHA-256"}},!0,["sign"])})}get nonce(){return this._nonce}set nonce(e){e&&e!==this._nonce&&(this._nonce=e)}setPassword(e,t){this.authKeyPromise=crypto.subtle.importKey("raw",x.encode(e),{name:"PBKDF2"},!1,["deriveKey"]).then(n=>crypto.subtle.deriveKey({name:"PBKDF2",salt:x.encode(t),iterations:100,hash:"SHA-256"},n,{name:"HMAC",hash:"SHA-256"},!0,["sign"]))}setAuthKey(e){this.authKeyPromise=crypto.subtle.importKey("raw",l(e),{name:"HMAC",hash:"SHA-256"},!0,["sign"])}async authKeyB64(){let e=await this.authKeyPromise,t=await crypto.subtle.exportKey("raw",e);return y(new Uint8Array(t))}async authHeader(){let e=await this.authKeyPromise,t=await crypto.subtle.sign({name:"HMAC"},e,l(this.nonce));return`send-v1 ${y(new Uint8Array(t))}`}async encryptMetadata(e){let t=await this.metaKeyPromise;return await crypto.subtle.encrypt({name:"AES-GCM",iv:new Uint8Array(12),tagLength:128},t,x.encode(JSON.stringify({name:e.name,size:e.size,type:e.type||"application/octet-stream",manifest:e.manifest||{}})))}encryptStream(e){return M(e,this.rawSecret)}decryptStream(e){return T(e,this.rawSecret)}async decryptMetadata(e){let t=await this.metaKeyPromise,n=await crypto.subtle.decrypt({name:"AES-GCM",iv:new Uint8Array(12),tagLength:128},t,e);return JSON.parse(G.decode(n))}};var k=null;try{k=localStorage.getItem("wssURL")}catch{}k||(k="wss://send.firefox.com/api/ws");var j="";function V(r){return j+r}function J(r){return r=r||"",r.split(" ")[1]}async function Y(r,e,t){let n=await e.authHeader(),s=await fetch(V(`/api/download/${r}`),{signal:t,method:"GET",headers:{Authorization:n}}),a=s.headers.get("WWW-Authenticate");if(a&&(e.nonce=J(a)),s.status!==200)throw new Error(s.status);return s.body}async function N(r,e,t,n=2){try{return await Y(r,e,t)}catch(s){if(s.message==="401"&&--n>0)return N(r,e,t,n);throw s.name==="AbortError"?new Error("0"):s}}function F(r,e){let t=new AbortController;function n(){t.abort()}return{cancel:n,result:N(r,e,t.signal)}}var z=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];typeof Int32Array<"u"&&(z=new Int32Array(z));var Q=(r,e)=>{let t=e===0?0:~~e^-1;for(let n=0;n<r.length;n++)t=z[(t^r[n])&255]^t>>>8;return t^-1},B=Q;var X=new TextEncoder;function Z(r=new Date){let e=r.getFullYear()-1980<<9,t=r.getMonth()+1<<5,n=r.getDate(),s=e|t|n,a=r.getHours()<<11,o=r.getMinutes()<<5,u=Math.floor(r.getSeconds()/2),d=a|o|u;return{date:s,time:d}}var K=class{constructor(e){this.name=X.encode(e.name),this.size=e.size,this.bytesRead=0,this.crc=null,this.dateTime=Z()}get header(){let e=new ArrayBuffer(30+this.name.byteLength),t=new DataView(e);t.setUint32(0,67324752,!0),t.setUint16(4,20,!0),t.setUint16(6,2056,!0),t.setUint16(8,0,!0),t.setUint16(10,this.dateTime.time,!0),t.setUint16(12,this.dateTime.date,!0),t.setUint32(14,0,!0),t.setUint32(18,0,!0),t.setUint32(22,0,!0),t.setUint16(26,this.name.byteLength,!0),t.setUint16(28,0,!0);for(let n=0;n<this.name.byteLength;n++)t.setUint8(30+n,this.name[n]);return new Uint8Array(e)}get dataDescriptor(){let e=new ArrayBuffer(16),t=new DataView(e);return t.setUint32(0,134695760,!0),t.setUint32(4,this.crc,!0),t.setUint32(8,this.size,!0),t.setUint32(12,this.size,!0),new Uint8Array(e)}directoryRecord(e){let t=new ArrayBuffer(46+this.name.byteLength),n=new DataView(t);n.setUint32(0,33639248,!0),n.setUint16(4,20,!0),n.setUint16(6,20,!0),n.setUint16(8,2056,!0),n.setUint16(10,0,!0),n.setUint16(12,this.dateTime.time,!0),n.setUint16(14,this.dateTime.date,!0),n.setUint32(16,this.crc,!0),n.setUint32(20,this.size,!0),n.setUint32(24,this.size,!0),n.setUint16(28,this.name.byteLength,!0),n.setUint16(30,0,!0),n.setUint16(32,0,!0),n.setUint16(34,0,!0),n.setUint16(36,0,!0),n.setUint32(38,0,!0),n.setUint32(42,e,!0);for(let s=0;s<this.name.byteLength;s++)n.setUint8(46+s,this.name[s]);return new Uint8Array(t)}get byteLength(){return this.size+this.name.byteLength+30+16}append(e,t){this.bytesRead+=e.byteLength;let n=e.byteLength-Math.max(this.bytesRead-this.size,0),s=e.slice(0,n);if(this.crc=B(s,this.crc),t.enqueue(s),n<e.byteLength)return e.slice(n,e.byteLength)}};function ee(r,e){let t=0,n=0;for(let s=0;s<r.length;s++){let a=r[s],o=a.directoryRecord(t);t+=a.byteLength,e.enqueue(o),n+=o.byteLength}e.enqueue(te(r.length,n,t))}function te(r,e,t){let n=new ArrayBuffer(22),s=new DataView(n);return s.setUint32(0,101010256,!0),s.setUint16(4,0,!0),s.setUint16(6,0,!0),s.setUint16(8,r,!0),s.setUint16(10,r,!0),s.setUint32(12,e,!0),s.setUint32(16,t,!0),s.setUint16(20,0,!0),new Uint8Array(n)}var v=class{constructor(e,t){this.files=e,this.fileIndex=0,this.file=null,this.reader=t.getReader(),this.nextFile(),this.extra=null}nextFile(){this.file=this.files[this.fileIndex++]}async pull(e){if(!this.file)return ee(this.files,e),e.close();if(this.file.bytesRead===0&&(e.enqueue(this.file.header),this.extra&&(this.extra=this.file.append(this.extra,e))),this.file.bytesRead>=this.file.size)return e.enqueue(this.file.dataDescriptor),this.nextFile(),this.pull(e);let t=await this.reader.read();if(t.done)return this.nextFile(),this.pull(e);this.extra=this.file.append(t.value,e)}},p=class{constructor(e,t){this.files=e.files.map(n=>new K(n)),this.source=t}get stream(){return new ReadableStream(new v(this.files,this.source))}get size(){return this.files.reduce((n,s)=>n+s.byteLength*2-s.size,0)+22}};function ne(r){let e=r.replace(/[^\x20-\x7E]/g,"_"),t=encodeURIComponent(r);return`attachment; filename="${e}"; filename*=UTF-8''${t}`}var C=!1,i=new Map;var re=/\/api\/download\/([A-Fa-f0-9]{4,})/;self.addEventListener("install",()=>{self.skipWaiting()});self.addEventListener("activate",r=>{r.waitUntil(self.clients.claim())});async function se(r,e){let t=i.get(r);if(!t)return console.error("[SW] File not found in map for id:",r),new Response(null,{status:400});if(e&&e.aborted)return console.log("[SW] Request already aborted for",r),i.delete(r),new Response(null,{status:499});console.log("[SW] Starting decryptStream for",r,"with nonce:",t.nonce);let n=null;try{let s=t.size,a=t.type,o=new b(t.key,t.nonce);t.requiresPassword&&o.setPassword(t.password,t.url),console.log("[SW] Calling downloadStream..."),t.download=F(r,o),e&&typeof e.addEventListener=="function"&&(n=()=>{console.log("[SW] Request aborted for",r);try{t.download&&typeof t.download.cancel=="function"&&t.download.cancel()}catch(c){console.warn("[SW] Failed to cancel download after abort",c)}i.delete(r)},e.addEventListener("abort",n,{once:!0}));let u=await t.download.result,d=o.decryptStream(u),w=null;if(t.type==="send-archive"){let c=new p(t.manifest,d);w=c.stream,a="application/zip",s=c.size}let U=f(w||d,{transform(c,O){t.progress+=c.length,e&&n&&t.progress>=s&&e.removeEventListener("abort",n),O.enqueue(c)}},function(){t.download.cancel(),i.delete(r)}),$={"Content-Disposition":ne(t.filename),"Content-Type":a,"Content-Length":s};return console.log("[SW] Returning decrypted stream response"),new Response(U,{headers:$})}catch(s){return s&&(s.message==="0"||s.name==="AbortError")?(console.log("[SW] Download aborted for",r),new Response(null,{status:499})):(console.error("[SW] Error in decryptStream:",s,"noSave:",C),C?new Response(null,{status:s.message}):(console.log("[SW] Redirecting to download page"),new Response(null,{status:302,headers:{Location:`/download/${r}/#${t.key}`}})))}finally{e&&n&&e.removeEventListener("abort",n)}}self.addEventListener("fetch",r=>{let e=r.request;if(e.method!=="GET")return;let t=new URL(e.url),n=re.exec(t.pathname);n&&(console.log("[SW] Intercepted download request for:",n[1]),r.respondWith(se(n[1],r.request.signal)))});self.addEventListener("message",r=>{if(r.data.request==="init"){console.log("[SW] Received init message for",r.data.id,"nonce:",r.data.nonce),C=r.data.noSave;let e={key:r.data.key,nonce:r.data.nonce,filename:r.data.filename,requiresPassword:r.data.requiresPassword,password:r.data.password,url:r.data.url,type:r.data.type,manifest:r.data.manifest,size:r.data.size,progress:0};i.set(r.data.id,e),console.log("[SW] File info stored in map"),r.ports[0].postMessage("file info received")}else if(r.data.request==="progress"){let e=i.get(r.data.id);e?(e.progress===e.size&&i.delete(r.data.id),r.ports[0].postMessage({progress:e.progress})):r.ports[0].postMessage({error:"cancelled"})}else if(r.data.request==="cancel"){let e=i.get(r.data.id);e&&(e.download&&e.download.cancel(),i.delete(r.data.id)),r.ports[0].postMessage("download cancelled")}});
