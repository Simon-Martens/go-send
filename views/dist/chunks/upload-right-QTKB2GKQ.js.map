{
  "version": 3,
  "sources": ["../../src/ui/upload-right.mjs"],
  "sourcesContent": ["import {\n  translateElement,\n  bytes,\n  timeLeft,\n  copyToClipboard,\n} from \"../utils.mjs\";\nimport storage from \"../storage.mjs\";\nimport { tooltip } from \"../tooltip.mjs\";\n\n/**\n * <upload-right> - Right column component\n *\n * Responsibilities:\n * - Display intro text (upload-title template)\n * - OR display list of completed uploads\n * - Emit events: delete, copy (from upload list items)\n *\n * Fine-grained rendering:\n * - showIntro() / showUploadList() replace entire template\n * - addUpload(), removeUpload() update specific list items\n */\nclass UploadRightElement extends HTMLElement {\n  constructor() {\n    super();\n    this.currentTemplate = null; // 'intro' or 'list'\n    this.translate = null;\n\n    // Cached element references\n    this.elements = {\n      uploadList: null,\n    };\n\n    this._afterPaintFrame = null;\n  }\n\n  connectedCallback() {\n    // Get translate function from global state if available\n    if (window.initialState && window.initialState.translate) {\n      this.translate = window.initialState.translate;\n    }\n\n    // Show intro by default\n    this.showIntro();\n  }\n\n  disconnectedCallback() {\n    if (this._afterPaintFrame !== null) {\n      cancelAnimationFrame(this._afterPaintFrame);\n      this._afterPaintFrame = null;\n    }\n  }\n\n  _renderTemplate(templateId, onReady) {\n    const template = document.getElementById(templateId);\n    if (!template) {\n      console.error(`Template #${templateId} not found`);\n      return;\n    }\n\n    const content = template.content.cloneNode(true);\n    this.innerHTML = \"\";\n    this.appendChild(content);\n\n    if (this._afterPaintFrame !== null) {\n      cancelAnimationFrame(this._afterPaintFrame);\n    }\n\n    this._afterPaintFrame = requestAnimationFrame(() => {\n      this._afterPaintFrame = null;\n      if (!this.isConnected) {\n        return;\n      }\n\n      translateElement(this);\n\n      if (typeof onReady === \"function\") {\n        onReady();\n      }\n    });\n  }\n\n  /**\n   * Template Switching Methods\n   */\n\n  /**\n   * Show intro/welcome text\n   * Uses template: #upload-title\n   */\n  showIntro() {\n    this._renderTemplate(\"upload-title\", () => {\n      this.currentTemplate = \"intro\";\n    });\n  }\n\n  /**\n   * Show list of completed uploads\n   * Uses template: #upload-list\n   * @param {Array} files - Array of OwnedFile objects from storage\n   */\n  showUploadList(files = []) {\n    this._renderTemplate(\"upload-list\", () => {\n      this.elements.uploadList = this.querySelector(\"#upload-list-container\");\n      this.currentTemplate = \"list\";\n\n      // Populate with files\n      if (files && files.length > 0) {\n        // Filter expired and reverse (newest first)\n        const activeFiles = files.filter((f) => !f.expired).reverse();\n        activeFiles.forEach((file) => this.addUpload(file));\n      }\n    });\n  }\n\n  /**\n   * Fine-Grained Update Methods\n   */\n\n  /**\n   * Add a completed upload to the list (when in 'list' template)\n   */\n  addUpload(ownedFile) {\n    if (this.currentTemplate !== \"list\" || !this.elements.uploadList) {\n      console.warn(\"addUpload called but not in list template\");\n      return;\n    }\n\n    const itemTemplate = document.getElementById(\"upload-tile-item\");\n    if (!itemTemplate) {\n      console.error(\"Template #upload-tile-item not found\");\n      return;\n    }\n\n    const item = itemTemplate.content.cloneNode(true);\n    const li = item.querySelector(\"li\");\n\n    // Set upload ID\n    li.setAttribute(\"data-upload-id\", ownedFile.id);\n\n    // Set file name\n    const nameEl = item.querySelector('[data-role=\"file-name\"]');\n    if (nameEl) {\n      nameEl.textContent = ownedFile.name;\n    }\n\n    // Set file size\n    const sizeEl = item.querySelector('[data-role=\"file-size\"]');\n    if (sizeEl) {\n      sizeEl.textContent = bytes(ownedFile.size);\n    }\n\n    // Set upload date\n    const dateEl = item.querySelector('[data-role=\"upload-date\"]');\n    if (dateEl) {\n      dateEl.textContent = this._formatDate(ownedFile.createdAt);\n    }\n\n    // Set expiry info\n    const expiryEl = item.querySelector('[data-role=\"expiry-info\"]');\n    if (expiryEl) {\n      expiryEl.innerHTML = this._createExpiryHTML(ownedFile);\n    }\n\n    // Set icon based on file type\n    const iconEl = item.querySelector('[data-role=\"file-icon\"]');\n    if (iconEl && ownedFile.name) {\n      const fileName = ownedFile.name.toLowerCase();\n      if (fileName.endsWith(\".zip\")) {\n        iconEl.className =\n          \"ri-folder-6-line h-8 w-8 flex-shrink-0 text-primary text-3xl leading-8\";\n      }\n    }\n\n    // Set file details (for multi-file uploads)\n    const detailsEl = item.querySelector('[data-role=\"file-details\"]');\n    if (\n      detailsEl &&\n      ownedFile.manifest &&\n      ownedFile.manifest.files &&\n      ownedFile.manifest.files.length > 1\n    ) {\n      detailsEl.innerHTML = this._createFileDetailsHTML(\n        ownedFile.manifest.files,\n      );\n    }\n\n    // Set download link\n    const downloadLink = item.querySelector('[data-role=\"download-link\"]');\n    if (downloadLink) {\n      downloadLink.href = ownedFile.url;\n    }\n\n    // Set owner/recipient information\n    const ownershipEl = item.querySelector('[data-role=\"file-ownership\"]');\n    if (ownershipEl) {\n      ownershipEl.innerHTML = this._createOwnershipHTML(ownedFile);\n    }\n\n    // Attach event listeners\n    const deleteBtn = item.querySelector('[data-action=\"delete\"]');\n    if (deleteBtn) {\n      deleteBtn.addEventListener(\"click\", (e) =>\n        this._handleDeleteClick(e, ownedFile),\n      );\n    }\n\n    const copyBtn = item.querySelector('[data-action=\"copy\"]');\n    if (copyBtn) {\n      copyBtn.addEventListener(\"click\", (e) =>\n        this._handleCopyClick(e, ownedFile.url),\n      );\n    }\n\n    // Hide copy button for files with recipients and hide recipient notice (now a tooltip)\n    const recipientNotice = item.querySelector('[data-role=\"recipient-notice\"]');\n    if (ownedFile.recipients && ownedFile.recipients.length > 0) {\n      // File has recipients - hide copy button\n      if (copyBtn) {\n        copyBtn.classList.add(\"hidden\");\n      }\n      // Hide recipient notice div (now displayed as tooltip)\n      if (recipientNotice) {\n        recipientNotice.classList.add(\"hidden\");\n      }\n    } else {\n      // No recipients - keep copy button visible, hide notice\n      if (recipientNotice) {\n        recipientNotice.classList.add(\"hidden\");\n      }\n    }\n\n    console.log(ownedFile);\n\n    // Create Sharing Hints\n    if (ownedFile.recipients && ownedFile.recipients.length > 0) {\n      const secure_notice = item.querySelector('[data-role=\"file-is-secure\"]');\n      if (secure_notice) {\n        secure_notice.classList.remove(\"hidden\");\n        // Add tooltip with recipient login message\n        const tooltipText = this._translateText(\n          \"fileTileRecipientNotice\",\n          \"The recipient must login to download this file\"\n        );\n        tooltip(secure_notice, tooltipText, {\n          position: \"top\",\n          default: \"closed\",\n        });\n      }\n    } else {\n      console.log(\"No recipients\");\n      if (ownedFile._hasPassword) {\n        console.log(\"Has password\");\n        const sharable_notice = item.querySelector(\n          '[data-role=\"file-is-sharable\"]',\n        );\n        if (sharable_notice) {\n          sharable_notice.classList.remove(\"hidden\");\n          // Add tooltip for password sharing recommendation\n          const tooltipText = this._translateText(\n            \"fileTileSharableNotice\",\n            \"Share this link and the password over two different channels (eg. eMail, encrypted Messenger)\"\n          );\n          tooltip(sharable_notice, tooltipText, {\n            position: \"top\",\n            default: \"closed\",\n          });\n        }\n      } else {\n        console.log(\"Has no password\");\n        const unshareable_notice = item.querySelector(\n          '[data-role=\"file-is-unshareable\"]',\n        );\n        if (unshareable_notice) {\n          unshareable_notice.classList.remove(\"hidden\");\n          // Add tooltip for secret link warning\n          const tooltipText = this._translateText(\n            \"fileTileUnshareableNotice\",\n            \"The link is secret. It is inadvisable to share the link over any unencrypted channel (eg. eMail)\"\n          );\n          tooltip(unshareable_notice, tooltipText, {\n            position: \"top\",\n            default: \"closed\",\n          });\n        }\n      }\n    }\n\n    // Create Password Hints\n    const passwort_hint = item.querySelector(\n      '[data-role=\"file-is-pwd-protected\"]',\n    );\n    if (passwort_hint && ownedFile.hasPassword) {\n      passwort_hint.classList.remove(\"hidden\");\n      // Add tooltip for password protected indicator\n      const tooltipText = this._translateText(\n        \"fileTilePwdProtectedNotice\",\n        \"File is password protected\"\n      );\n      tooltip(passwort_hint, tooltipText, {\n        position: \"top\",\n        default: \"closed\",\n      });\n    }\n\n    // Prepend to list (newest first)\n    this.elements.uploadList.prepend(li);\n\n    // Translate any translatable elements\n    requestAnimationFrame(() => {\n      translateElement(li);\n    });\n  }\n\n  /**\n   * Remove an upload from the list (when in 'list' template)\n   */\n  removeUpload(fileId) {\n    if (this.currentTemplate !== \"list\" || !this.elements.uploadList) {\n      console.warn(\"removeUpload called but not in list template\");\n      return;\n    }\n\n    const uploadElement = this.querySelector(`[data-upload-id=\"${fileId}\"]`);\n    if (uploadElement) {\n      uploadElement.remove();\n    }\n\n    // If list is now empty, switch back to intro\n    if (this.elements.uploadList.children.length === 0) {\n      this.showIntro();\n    }\n  }\n\n  /**\n   * Refresh entire list with new files\n   */\n  refreshList(files) {\n    if (this.currentTemplate !== \"list\") {\n      return;\n    }\n\n    // Clear list\n    if (this.elements.uploadList) {\n      this.elements.uploadList.innerHTML = \"\";\n    }\n\n    // Filter expired and reverse\n    const activeFiles = files.filter((f) => !f.expired).reverse();\n\n    if (activeFiles.length === 0) {\n      this.showIntro();\n      return;\n    }\n\n    activeFiles.forEach((file) => this.addUpload(file));\n  }\n\n  /**\n   * Helper Methods\n   */\n\n  _createExpiryHTML(ownedFile) {\n    const downloadsLeft = ownedFile.dlimit - ownedFile.dtotal;\n    const timeLeftMs = ownedFile.expiresAt - Date.now();\n\n    if (timeLeftMs < 0 || downloadsLeft <= 0) {\n      return this._translateText(\"linkExpiredAlt\", \"Link expired\");\n    }\n\n    const timeL10n = timeLeft(timeLeftMs);\n    const downloadCountText = this._translateText(\n      \"downloadCount\",\n      `${downloadsLeft} downloads`,\n      { num: downloadsLeft },\n    );\n    const timespanText = this._translateText(\n      timeL10n.id,\n      this._formatTimeLeft(timeLeftMs),\n      timeL10n,\n    );\n\n    return this._translateText(\n      \"archiveExpiryInfo\",\n      `Expires after ${downloadCountText} or ${timespanText}`,\n      { downloadCount: downloadCountText, timespan: timespanText },\n    );\n  }\n\n  _createFileDetailsHTML(files) {\n    const fileCount = this._translateText(\n      \"fileCount\",\n      `${files.length} files`,\n      { num: files.length },\n    );\n\n    // Clone the details template\n    const detailsTemplate = document.getElementById(\"upload-file-details\");\n    if (!detailsTemplate) {\n      console.error(\"Template #upload-file-details not found\");\n      return \"\";\n    }\n\n    const detailsFragment = detailsTemplate.content.cloneNode(true);\n    const details = detailsFragment.querySelector(\"details\");\n\n    // Set file count\n    const fileCountEl = details.querySelector('[data-role=\"file-count\"]');\n    if (fileCountEl) {\n      fileCountEl.textContent = fileCount;\n    }\n\n    // Get the file list container\n    const fileListEl = details.querySelector('[data-role=\"file-list\"]');\n    if (!fileListEl) {\n      console.error(\"File list container not found\");\n      return details.outerHTML;\n    }\n\n    // Clone file item template for each file\n    const itemTemplate = document.getElementById(\"upload-file-details-item\");\n    if (!itemTemplate) {\n      console.error(\"Template #upload-file-details-item not found\");\n      return details.outerHTML;\n    }\n\n    files.forEach((f) => {\n      const itemFragment = itemTemplate.content.cloneNode(true);\n\n      const nameEl = itemFragment.querySelector('[data-role=\"item-name\"]');\n      if (nameEl) {\n        nameEl.textContent = f.name;\n      }\n\n      const sizeEl = itemFragment.querySelector('[data-role=\"item-size\"]');\n      if (sizeEl) {\n        sizeEl.textContent = bytes(f.size);\n      }\n\n      // Set icon based on file type\n      const iconEl = itemFragment.querySelector('[data-role=\"file-icon\"]');\n      if (iconEl && f.name) {\n        const fileName = f.name.toLowerCase();\n        if (fileName.endsWith(\".zip\")) {\n          iconEl.className =\n            \"ri-folder-6-line h-6 w-6 text-primary flex-shrink-0 text-2xl leading-6\";\n        }\n      }\n\n      fileListEl.appendChild(itemFragment);\n    });\n\n    return details.outerHTML;\n  }\n\n  _formatTimeLeft(milliseconds) {\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n\n    if (days >= 1) {\n      return `${days} day${days !== 1 ? \"s\" : \"\"}`;\n    } else if (hours >= 1) {\n      return `${hours} hour${hours !== 1 ? \"s\" : \"\"}`;\n    } else if (minutes >= 1) {\n      return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"}`;\n    }\n    return \"< 1 minute\";\n  }\n\n  _formatDate(timestamp) {\n    if (!timestamp) {\n      return \"\";\n    }\n\n    const date = new Date(timestamp);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const uploadDate = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n    );\n\n    // Get user's locale from document or default to browser locale\n    const locale = document.documentElement.lang || navigator.language || \"en\";\n\n    // If uploaded today, show time only\n    if (uploadDate.getTime() === today.getTime()) {\n      return new Intl.DateTimeFormat(locale, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }).format(date);\n    }\n\n    // If uploaded this year, show month and day\n    if (date.getFullYear() === now.getFullYear()) {\n      return new Intl.DateTimeFormat(locale, {\n        month: \"short\",\n        day: \"numeric\",\n      }).format(date);\n    }\n\n    // Otherwise, show full date with year\n    return new Intl.DateTimeFormat(locale, {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    }).format(date);\n  }\n\n  _translateText(key, fallback, args = {}) {\n    // Try instance translate function first\n    if (this.translate) {\n      try {\n        return this.translate(key, args);\n      } catch (e) {\n        // Fall through to window.translate\n      }\n    }\n\n    // Fall back to global translate function\n    if (window.translate) {\n      try {\n        return window.translate(key, args);\n      } catch (e) {\n        // Fall through to fallback\n      }\n    }\n\n    return fallback;\n  }\n\n  _getCurrentUserName() {\n    // Get current user's name from storage.user\n    if (storage && storage.user && storage.user.name) {\n      return storage.user.name.toLowerCase();\n    }\n    return null;\n  }\n\n  _createOwnershipHTML(ownedFile) {\n    const parts = [];\n    const currentUserName = this._getCurrentUserName();\n\n    // Show FROM if we have owner information and it's not the current user\n    if (ownedFile.ownerString) {\n      const isCurrentUser =\n        currentUserName &&\n        ownedFile.ownerString.toLowerCase() === currentUserName.toLowerCase();\n\n      if (!isCurrentUser) {\n        const fromLabel = this._translateText(\"fileTileFrom\", \"FROM\");\n        parts.push(\n          `<span class=\"inline-flex items-center px-2 py-1 rounded bg-primary/10 dark:bg-primary/20 text-primary text-xs\">${fromLabel}: ${ownedFile.ownerString}</span>`,\n        );\n      }\n    } else if (ownedFile.authString) {\n      // Guest upload via auth link\n      const fromLabel = this._translateText(\"fileTileFrom\", \"FROM\");\n      const guestLabel = this._translateText(\"fileTileGuest\", \"Guest\");\n      parts.push(\n        `<span class=\"inline-flex items-center px-2 py-1 rounded bg-primary/10 dark:bg-primary/20 text-primary text-xs\">${fromLabel}: ${ownedFile.authString}</span>` +\n          `<span class=\"inline-flex items-center px-2 py-1 rounded bg-grey-20 dark:bg-grey-80 text-xs normal-case\">${guestLabel}</span>`,\n      );\n    }\n\n    // Show TO if recipients exist (filter out current user)\n    if (\n      Array.isArray(ownedFile.recipients) &&\n      ownedFile.recipients.length > 0\n    ) {\n      const toLabel = this._translateText(\"fileTileTo\", \"TO\");\n\n      // Filter out current user from recipients\n      const otherRecipients = ownedFile.recipients.filter((r) => {\n        if (!currentUserName || !r.userName) return true;\n        return r.userName.toLowerCase() !== currentUserName.toLowerCase();\n      });\n\n      // Display each recipient\n      otherRecipients.forEach((recipient) => {\n        const recipientName =\n          recipient.userName ||\n          recipient.userEmail ||\n          `User ${recipient.userId}`;\n        parts.push(\n          `<span class=\"inline-flex items-center px-2 py-1 rounded bg-secondary/10 dark:bg-secondary/20 text-secondary text-xs\">${toLabel}: ${recipientName}</span>`,\n        );\n      });\n    }\n\n    return parts.join(\"\");\n  }\n\n  /**\n   * Event Handlers\n   */\n\n  _handleCopyClick(event, url) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const success = copyToClipboard(url);\n\n    if (success) {\n      // Dispatch copy event to bubble up\n      this.dispatchEvent(\n        new CustomEvent(\"copy\", {\n          bubbles: true,\n          detail: { url },\n        }),\n      );\n\n      // Visual feedback - change icon to check\n      const copyBtn = event.currentTarget;\n      const iconEl = copyBtn.querySelector('[data-role=\"copy-icon\"]');\n      const textSpan = copyBtn.querySelector('[id=\"copyLinkButton\"]');\n\n      if (iconEl) {\n        const originalClass = iconEl.className;\n        iconEl.className = \"ri-check-line h-4 w-4 mr-2 text-base leading-4\";\n        setTimeout(() => {\n          iconEl.className = originalClass;\n        }, 1000);\n      }\n\n      if (textSpan) {\n        const originalText = textSpan.textContent;\n        textSpan.textContent = this._translateText(\"copiedUrl\", \"Copied!\");\n        setTimeout(() => {\n          textSpan.textContent = originalText;\n        }, 1000);\n      }\n    }\n  }\n\n  _handleDeleteClick(event, ownedFile) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Dispatch delete event to bubble up to controller\n    this.dispatchEvent(\n      new CustomEvent(\"delete\", {\n        bubbles: true,\n        detail: { ownedFile },\n      }),\n    );\n  }\n}\n\n// Register the custom element\ncustomElements.define(\"upload-right\", UploadRightElement);\n"],
  "mappings": "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",
  "names": []
}
