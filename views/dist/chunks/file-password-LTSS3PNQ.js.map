{
  "version": 3,
  "sources": ["../../src/ui/file-password.mjs"],
  "sourcesContent": ["import { translateElement } from \"../utils.mjs\";\n\n/**\n * <file-password-view> - Password entry form for protected files\n *\n * Responsibilities:\n * - Display password input field with show/hide toggle\n * - Handle form submission\n * - Show error message if password is incorrect\n * - Dispatch \"password-submit\" event with entered password\n */\nclass FilePasswordElement extends HTMLElement {\n  constructor() {\n    super();\n\n    this._templateMounted = false;\n    this._postMountFrame = null;\n    this._hasError = false;\n\n    // Bound handlers\n    this._boundHandlers = {\n      submit: this.handleSubmit.bind(this),\n      input: this.handleInput.bind(this),\n      toggleVisibility: this.togglePasswordVisibility.bind(this),\n    };\n  }\n\n  connectedCallback() {\n    // Mount template first (synchronous)\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"file-password-view\");\n      if (!template) {\n        console.error(\"Template #file-password-view not found\");\n        return;\n      }\n\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n    }\n\n    // Schedule async initialization\n    this._postMountFrame = requestAnimationFrame(() => {\n      this._postMountFrame = null;\n      if (!this.isConnected) {\n        return;\n      }\n\n      translateElement(this);\n      this.setupHandlers();\n\n      // Auto-focus password input\n      const input = this.querySelector('[data-role=\"password-input\"]');\n      if (input) {\n        input.focus();\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n      this._postMountFrame = null;\n    }\n\n    this.teardownHandlers();\n  }\n\n  setupHandlers() {\n    const form = this.querySelector('[data-role=\"password-form\"]');\n    const input = this.querySelector('[data-role=\"password-input\"]');\n    const toggleBtn = this.querySelector('[data-role=\"toggle-visibility\"]');\n\n    if (form) {\n      form.addEventListener(\"submit\", this._boundHandlers.submit);\n    }\n    if (input) {\n      input.addEventListener(\"input\", this._boundHandlers.input);\n    }\n    if (toggleBtn) {\n      toggleBtn.addEventListener(\"click\", this._boundHandlers.toggleVisibility);\n    }\n  }\n\n  teardownHandlers() {\n    const form = this.querySelector('[data-role=\"password-form\"]');\n    const input = this.querySelector('[data-role=\"password-input\"]');\n    const toggleBtn = this.querySelector('[data-role=\"toggle-visibility\"]');\n\n    if (form) {\n      form.removeEventListener(\"submit\", this._boundHandlers.submit);\n    }\n    if (input) {\n      input.removeEventListener(\"input\", this._boundHandlers.input);\n    }\n    if (toggleBtn) {\n      toggleBtn.removeEventListener(\"click\", this._boundHandlers.toggleVisibility);\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const input = this.querySelector('[data-role=\"password-input\"]');\n    const password = input ? input.value : \"\";\n\n    if (password.length === 0) {\n      return;\n    }\n\n    // Disable submit button while processing\n    const submitBtn = this.querySelector('[data-role=\"submit\"]');\n    if (submitBtn) {\n      submitBtn.disabled = true;\n    }\n\n    // Clear any existing error\n    this.clearError();\n\n    // Dispatch password-submit event\n    const event2 = new CustomEvent(\"password-submit\", {\n      detail: { password },\n      bubbles: true,\n    });\n    this.dispatchEvent(event2);\n\n    console.log(\"[file-password] Password submitted\");\n  }\n\n  handleInput(event) {\n    // Clear error styling when user types\n    if (this._hasError) {\n      this.clearError();\n    }\n  }\n\n  togglePasswordVisibility(event) {\n    event.preventDefault();\n\n    const input = this.querySelector('[data-role=\"password-input\"]');\n    const icon = this.querySelector('[data-role=\"visibility-icon\"]');\n\n    if (!input || !icon) {\n      return;\n    }\n\n    if (input.type === \"password\") {\n      input.type = \"text\";\n      icon.src = \"/eye-off.svg\";\n    } else {\n      input.type = \"password\";\n      icon.src = \"/eye.svg\";\n    }\n\n    input.focus();\n  }\n\n  /**\n   * Public API: Set error message (called by parent when password is wrong)\n   */\n  setError(message) {\n    this._hasError = true;\n\n    const input = this.querySelector('[data-role=\"password-input\"]');\n    const submitBtn = this.querySelector('[data-role=\"submit\"]');\n    const errorLabel = this.querySelector('[data-role=\"error\"]');\n\n    // Re-enable submit button\n    if (submitBtn) {\n      submitBtn.disabled = false;\n    }\n\n    // Add error styling to input\n    if (input) {\n      input.classList.add(\"border-red-600\", \"dark:border-red-400\");\n    }\n\n    // Show error message\n    if (errorLabel) {\n      errorLabel.textContent = message || \"Incorrect password. Please try again.\";\n      errorLabel.classList.remove(\"hidden\");\n    }\n\n    // Add error styling to submit button\n    if (submitBtn) {\n      submitBtn.classList.add(\n        \"bg-red-600\",\n        \"hover:bg-red-700\",\n        \"dark:bg-red-400\",\n        \"dark:hover:bg-red-500\"\n      );\n    }\n\n    // Focus input for retry\n    if (input) {\n      input.select();\n    }\n  }\n\n  /**\n   * Public API: Clear error state\n   */\n  clearError() {\n    this._hasError = false;\n\n    const input = this.querySelector('[data-role=\"password-input\"]');\n    const submitBtn = this.querySelector('[data-role=\"submit\"]');\n    const errorLabel = this.querySelector('[data-role=\"error\"]');\n\n    // Remove error styling from input\n    if (input) {\n      input.classList.remove(\"border-red-600\", \"dark:border-red-400\");\n    }\n\n    // Hide error message\n    if (errorLabel) {\n      errorLabel.classList.add(\"hidden\");\n    }\n\n    // Remove error styling from submit button\n    if (submitBtn) {\n      submitBtn.classList.remove(\n        \"bg-red-600\",\n        \"hover:bg-red-700\",\n        \"dark:bg-red-400\",\n        \"dark:hover:bg-red-500\"\n      );\n    }\n  }\n}\n\n// Register the custom element\ncustomElements.define(\"file-password-view\", FilePasswordElement);\n"],
  "mappings": "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",
  "names": []
}
