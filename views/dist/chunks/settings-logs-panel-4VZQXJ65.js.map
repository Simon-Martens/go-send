{
  "version": 3,
  "sources": ["../../src/ui/settings-logs-panel.mjs"],
  "sourcesContent": ["import { fetchLogs } from \"../api.mjs\";\nimport { translateElement } from \"../utils.mjs\";\nimport storage from \"../storage.mjs\";\n\nclass SettingsLogsPanel extends HTMLElement {\n  constructor() {\n    super();\n    this._templateMounted = false;\n\n    // Element refs\n    this._refreshButton = null;\n    this._statusContainer = null;\n    this._statusIcon = null;\n    this._statusText = null;\n    this._tableBody = null;\n    this._emptyState = null;\n    this._countText = null;\n    this._nextButton = null;\n\n    // State\n    this._currentPage = 1;\n    this._totalCount = 0;\n    this._currentLogCount = 0;\n    this._isLoading = false;\n\n    // Bound handlers\n    this._boundRefresh = this._handleRefresh.bind(this);\n    this._boundNext = this._handleNext.bind(this);\n  }\n\n  connectedCallback() {\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"settings-logs-panel\");\n      if (!template) {\n        console.error(\"Template #settings-logs-panel not found\");\n        return;\n      }\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    this._cacheElements();\n    translateElement(this);\n    this._attachListeners();\n\n    // Schedule initial fetch\n    requestAnimationFrame(() => {\n      this._fetchLogs(1);\n    });\n  }\n\n  disconnectedCallback() {\n    this._detachListeners();\n    // Clear refs\n    this._refreshButton = null;\n    this._statusContainer = null;\n    this._statusIcon = null;\n    this._statusText = null;\n    this._tableBody = null;\n    this._emptyState = null;\n    this._countText = null;\n    this._nextButton = null;\n  }\n\n  _cacheElements() {\n    this._refreshButton = this.querySelector('[data-role=\"logs-refresh\"]');\n    this._statusContainer = this.querySelector('[data-role=\"logs-status\"]');\n    this._statusIcon = this._statusContainer?.querySelector('[data-role=\"logs-status-icon\"]');\n    this._statusText = this._statusContainer?.querySelector('[data-role=\"logs-status-text\"]');\n    this._tableBody = this.querySelector('[data-role=\"logs-body\"]');\n    this._emptyState = this.querySelector('[data-role=\"logs-empty\"]');\n    this._countText = this.querySelector('[data-role=\"logs-count\"]');\n    this._nextButton = this.querySelector('[data-role=\"logs-next\"]');\n  }\n\n  _attachListeners() {\n    if (this._refreshButton) {\n      this._refreshButton.addEventListener(\"click\", this._boundRefresh);\n    }\n    if (this._nextButton) {\n      this._nextButton.addEventListener(\"click\", this._boundNext);\n    }\n  }\n\n  _detachListeners() {\n    if (this._refreshButton) {\n      this._refreshButton.removeEventListener(\"click\", this._boundRefresh);\n    }\n    if (this._nextButton) {\n      this._nextButton.removeEventListener(\"click\", this._boundNext);\n    }\n  }\n\n  async _handleRefresh() {\n    this._fetchLogs(1);\n  }\n\n  async _handleNext() {\n    this._fetchLogs(this._currentPage + 1);\n  }\n\n  async _fetchLogs(page) {\n    if (this._isLoading) return;\n\n    this._isLoading = true;\n    this._setStatus(\"Loading logs...\", \"loading\");\n\n    try {\n      const data = await fetchLogs(page);\n\n      this._currentPage = data.currentPage;\n      this._totalCount = data.totalCount;\n      this._currentLogCount = data.logs.length;\n\n      if (!data.logs || data.logs.length === 0) {\n        this._setStatus(\"No logs available.\", \"empty\");\n        this._showEmptyState();\n      } else {\n        this._setStatus(\"\");\n        this._renderLogs(data.logs);\n      }\n\n      this._updatePaginationUI();\n    } catch (error) {\n      console.error(\"[SettingsLogsPanel] Error fetching logs:\", error);\n      this._setStatus(\"Failed to load logs.\", \"error\");\n    } finally {\n      this._isLoading = false;\n    }\n  }\n\n  _setStatus(message, type) {\n    if (!this._statusContainer) return;\n\n    if (!message) {\n      this._statusContainer.classList.add(\"hidden\");\n      return;\n    }\n\n    this._statusContainer.classList.remove(\"hidden\");\n\n    // Clear previous icon classes\n    if (this._statusIcon) {\n      this._statusIcon.classList.remove(\"ri-loader-4-line\", \"ri-error-warning-line\", \"ri-inbox-line\");\n      this._statusIcon.classList.add(\"hidden\");\n    }\n\n    switch (type) {\n      case \"loading\":\n        if (this._statusIcon) {\n          this._statusIcon.classList.remove(\"hidden\");\n          this._statusIcon.classList.add(\"ri-loader-4-line\", \"animate-spin\");\n        }\n        break;\n      case \"error\":\n        if (this._statusIcon) {\n          this._statusIcon.classList.remove(\"hidden\");\n          this._statusIcon.classList.add(\"ri-error-warning-line\", \"text-red-600\", \"dark:text-red-400\");\n        }\n        break;\n      case \"empty\":\n        if (this._statusIcon) {\n          this._statusIcon.classList.remove(\"hidden\");\n          this._statusIcon.classList.add(\"ri-inbox-line\", \"text-grey-60\", \"dark:text-grey-50\");\n        }\n        break;\n    }\n\n    if (this._statusText) {\n      this._statusText.textContent = message;\n    }\n  }\n\n  _showEmptyState() {\n    if (this._emptyState) {\n      this._emptyState.classList.remove(\"hidden\");\n    }\n    if (this._tableBody) {\n      this._tableBody.innerHTML = \"\";\n    }\n  }\n\n  _renderLogs(logs) {\n    if (!this._tableBody) return;\n\n    if (this._emptyState) {\n      this._emptyState.classList.add(\"hidden\");\n    }\n\n    this._tableBody.innerHTML = \"\";\n\n    logs.forEach((log) => {\n      const row = this._createLogRow(log);\n      this._tableBody.appendChild(row);\n    });\n  }\n\n  _createLogRow(log) {\n    const template = document.getElementById(\"settings-logs-row\");\n    if (!template) {\n      console.error(\"Template #settings-logs-row not found\");\n      return document.createElement(\"tr\");\n    }\n\n    const row = template.content.cloneNode(true);\n\n    // Type and icon\n    const typeIcon = row.querySelector('[data-role=\"log-type-icon\"]');\n    const typeText = row.querySelector('[data-role=\"log-type\"]');\n    if (typeIcon && typeText) {\n      if (log.type === \"upload\") {\n        typeIcon.className = \"ri-upload-cloud-2-line text-lg leading-4\";\n        typeText.textContent = \"Upload\";\n      } else if (log.type === \"download\") {\n        typeIcon.className = \"ri-download-cloud-2-line text-lg leading-4\";\n        typeText.textContent = \"Download\";\n      }\n    }\n\n    // Timestamp (absolute time)\n    const timestampEl = row.querySelector('[data-role=\"log-timestamp\"]');\n    if (timestampEl && log.timestamp) {\n      const date = new Date(log.timestamp);\n      timestampEl.textContent = date.toLocaleString();\n      timestampEl.title = log.timestamp;\n    }\n\n    // Duration (format based on length)\n    const durationEl = row.querySelector('[data-role=\"log-duration\"]');\n    if (durationEl) {\n      const ms = log.duration;\n      let formatted;\n\n      if (ms < 1000) {\n        // Less than 1 second: show milliseconds\n        formatted = `${ms}ms`;\n      } else if (ms < 60000) {\n        // Less than 1 minute: show seconds\n        const seconds = (ms / 1000).toFixed(2);\n        formatted = `${seconds}s`;\n      } else {\n        // 1 minute or more: show minutes + seconds\n        const minutes = Math.floor(ms / 60000);\n        const seconds = Math.floor((ms % 60000) / 1000);\n        formatted = `${minutes}m ${seconds}s`;\n      }\n\n      durationEl.textContent = formatted;\n    }\n\n    // Status Code (color-coded by range)\n    const statusEl = row.querySelector('[data-role=\"log-status\"]');\n    if (statusEl && log.statusCode) {\n      const code = log.statusCode;\n      statusEl.textContent = code;\n\n      // Color code based on status range\n      if (code >= 200 && code < 300) {\n        // 2xx: Success - green\n        statusEl.className = \"text-xs font-mono font-semibold text-green-600 dark:text-green-400\";\n      } else if (code >= 300 && code < 400) {\n        // 3xx: Redirect - blue\n        statusEl.className = \"text-xs font-mono font-semibold text-blue-600 dark:text-blue-400\";\n      } else if (code >= 400 && code < 500) {\n        // 4xx: Client error - orange\n        statusEl.className = \"text-xs font-mono font-semibold text-orange-600 dark:text-orange-400\";\n      } else if (code >= 500) {\n        // 5xx: Server error - red\n        statusEl.className = \"text-xs font-mono font-semibold text-red-600 dark:text-red-400\";\n      } else {\n        // Unknown range - grey\n        statusEl.className = \"text-xs font-mono text-grey-60 dark:text-grey-40\";\n      }\n    }\n\n    // File ID or Name (check storage for metadata)\n    const fileIdEl = row.querySelector('[data-role=\"log-file-id\"]');\n    if (fileIdEl && log.fileId) {\n      // Try to get file metadata from storage\n      const fileMetadata = storage.getFileById(log.fileId);\n\n      if (fileMetadata && fileMetadata.name) {\n        // Show file name if metadata available\n        fileIdEl.textContent = fileMetadata.name;\n        fileIdEl.title = `File: ${fileMetadata.name} (ID: ${log.fileId})`;\n      } else {\n        // Fall back to abbreviated file ID\n        const abbreviated = log.fileId.substring(0, 8) + \"\u2026\";\n        fileIdEl.textContent = abbreviated;\n        fileIdEl.title = log.fileId;\n      }\n    }\n\n    // Owner/Guest name\n    const ownerEl = row.querySelector('[data-role=\"log-owner\"]');\n    if (ownerEl && log.ownerName) {\n      ownerEl.textContent = log.ownerName;\n      ownerEl.title = `${log.ownerType === \"owner\" ? \"Owner\" : \"Guest\"}: ${log.ownerName}`;\n    }\n\n    // IP address\n    const ipEl = row.querySelector('[data-role=\"log-ip\"]');\n    if (ipEl && log.ip) {\n      ipEl.textContent = log.ip;\n    }\n\n    // Request Data (User Agent + Origin combined, truncated)\n    const requestDataEl = row.querySelector('[data-role=\"log-request-data\"]');\n    if (requestDataEl) {\n      const parts = [];\n      if (log.userAgent) parts.push(log.userAgent);\n      if (log.origin) parts.push(`Origin: ${log.origin}`);\n\n      const combined = parts.join(\" \u2022 \") || \"\u2014\";\n      requestDataEl.textContent = combined;\n      requestDataEl.title = combined;\n    }\n\n    // Accessed By (session owner, show [Guest] pill for anonymous)\n    const accessedByEl = row.querySelector('[data-role=\"log-accessed-by\"]');\n    if (accessedByEl) {\n      if (log.sessionUser && log.sessionUser !== \"Anonymous\") {\n        accessedByEl.textContent = log.sessionUser;\n      } else {\n        // Show [Guest] in a pill\n        accessedByEl.innerHTML = '<span class=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-grey-20 dark:bg-grey-80 text-grey-70 dark:text-grey-40\">[Guest]</span>';\n      }\n    }\n\n    return row;\n  }\n\n  _updatePaginationUI() {\n    // Update log count display: \"1-50 of 1,234\"\n    if (this._countText) {\n      const startNum = (this._currentPage - 1) * 50 + 1; // Assuming 50 per page (server-side)\n      const endNum = startNum + this._currentLogCount - 1;\n      const formatted = this._totalCount.toLocaleString();\n\n      if (this._currentLogCount > 0) {\n        this._countText.textContent = `${startNum}-${endNum} of ${formatted}`;\n      } else {\n        this._countText.textContent = `0 of ${formatted}`;\n      }\n    }\n\n    // Show next button only if there are more logs available\n    if (this._nextButton) {\n      const hasMoreLogs = this._totalCount > (this._currentPage - 1) * 50 + this._currentLogCount;\n      this._nextButton.disabled = !hasMoreLogs;\n    }\n  }\n}\n\ncustomElements.define(\"settings-logs-panel\", SettingsLogsPanel);\n"],
  "mappings": "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",
  "names": []
}
