{"version":3,"file":"serviceWorker.js","sources":["../node_modules/base64-js/index.js","../app/utils-worker.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../app/streams.js","../app/ece.js","../app/keychain.js","../app/api.js","../node_modules/crc/node_modules/buffer/index.js","../node_modules/crc/create_buffer.js","../node_modules/crc/define_crc.js","../node_modules/crc/crc32.js","../app/zip.js","../app/serviceWorker.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// Worker-safe utilities (no DOM dependencies)\nconst b64 = require('base64-js');\n\nfunction arrayToB64(array) {\n  return b64\n    .fromByteArray(array)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n}\n\nfunction b64ToArray(str) {\n  return b64.toByteArray(str + '==='.slice((str.length + 3) % 4));\n}\n\nfunction delay(delay = 100) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nasync function streamToArrayBuffer(stream, size) {\n  const reader = stream.getReader();\n  let state = await reader.read();\n\n  if (size) {\n    const result = new Uint8Array(size);\n    let offset = 0;\n    while (!state.done) {\n      result.set(state.value, offset);\n      offset += state.value.length;\n      state = await reader.read();\n    }\n    return result.buffer;\n  }\n\n  const parts = [];\n  let len = 0;\n  while (!state.done) {\n    parts.push(state.value);\n    len += state.value.length;\n    state = await reader.read();\n  }\n  let offset = 0;\n  const result = new Uint8Array(len);\n  for (const part of parts) {\n    result.set(part, offset);\n    offset += part.length;\n  }\n  return result.buffer;\n}\n\nmodule.exports = {\n  arrayToB64,\n  b64ToArray,\n  delay,\n  streamToArrayBuffer\n};\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/* global TransformStream */\n\nexport function transformStream(readable, transformer = {}, oncancel) {\n  const reader = readable.getReader();\n  const wrappedTransformer = transformer || {};\n\n  return new ReadableStream({\n    async start(controller) {\n      if (wrappedTransformer.start) {\n        await wrappedTransformer.start(controller);\n      }\n    },\n\n    async pull(controller) {\n      while (true) {\n        const { value, done } = await reader.read();\n\n        if (done) {\n          if (wrappedTransformer.flush) {\n            await wrappedTransformer.flush(controller);\n          }\n          reader.releaseLock();\n          controller.close();\n          return;\n        }\n\n        if (!wrappedTransformer.transform) {\n          controller.enqueue(value);\n          return;\n        }\n\n        let enqueued = false;\n        const wrappedController = {\n          enqueue(chunk) {\n            enqueued = true;\n            controller.enqueue(chunk);\n          }\n        };\n\n        await wrappedTransformer.transform(value, wrappedController);\n\n        if (enqueued) {\n          return;\n        }\n        // If nothing was enqueued, loop to read the next chunk.\n      }\n    },\n\n    cancel(reason) {\n      reader.cancel(reason);\n      if (wrappedTransformer.cancel) {\n        wrappedTransformer.cancel(reason);\n      }\n      if (oncancel) {\n        oncancel(reason);\n      }\n    }\n  });\n}\n\nclass BlobStreamController {\n  constructor(blob, size) {\n    this.blob = blob;\n    this.index = 0;\n    this.chunkSize = size || 1024 * 64;\n  }\n\n  pull(controller) {\n    return new Promise((resolve, reject) => {\n      const bytesLeft = this.blob.size - this.index;\n      if (bytesLeft <= 0) {\n        controller.close();\n        return resolve();\n      }\n      const size = Math.min(this.chunkSize, bytesLeft);\n      const slice = this.blob.slice(this.index, this.index + size);\n      const reader = new FileReader();\n      reader.onload = () => {\n        controller.enqueue(new Uint8Array(reader.result));\n        resolve();\n      };\n      reader.onerror = reject;\n      reader.readAsArrayBuffer(slice);\n      this.index += size;\n    });\n  }\n}\n\nexport function blobStream(blob, size) {\n  return new ReadableStream(new BlobStreamController(blob, size));\n}\n\nclass ConcatStreamController {\n  constructor(streams) {\n    this.streams = streams;\n    this.index = 0;\n    this.reader = null;\n    this.nextReader();\n  }\n\n  nextReader() {\n    const next = this.streams[this.index++];\n    this.reader = next && next.getReader();\n  }\n\n  async pull(controller) {\n    if (!this.reader) {\n      return controller.close();\n    }\n    const data = await this.reader.read();\n    if (data.done) {\n      this.nextReader();\n      return this.pull(controller);\n    }\n    controller.enqueue(data.value);\n  }\n}\n\nexport function concatStream(streams) {\n  return new ReadableStream(new ConcatStreamController(streams));\n}\n","import { Buffer } from 'buffer';\n// Make Buffer available globally for compatibility\nif (typeof window !== 'undefined') {\n  window.Buffer = Buffer;\n}\nimport { transformStream } from './streams';\n\nconst NONCE_LENGTH = 12;\nconst TAG_LENGTH = 16;\nconst KEY_LENGTH = 16;\nconst MODE_ENCRYPT = 'encrypt';\nconst MODE_DECRYPT = 'decrypt';\nexport const ECE_RECORD_SIZE = 1024 * 64;\n\nconst encoder = new TextEncoder();\n\nfunction generateSalt(len) {\n  const randSalt = new Uint8Array(len);\n  crypto.getRandomValues(randSalt);\n  return randSalt.buffer;\n}\n\nclass ECETransformer {\n  constructor(mode, ikm, rs, salt) {\n    this.mode = mode;\n    this.prevChunk;\n    this.seq = 0;\n    this.firstchunk = true;\n    this.rs = rs;\n    this.ikm = ikm.buffer;\n    this.salt = salt;\n  }\n\n  async generateKey() {\n    const inputKey = await crypto.subtle.importKey(\n      'raw',\n      this.ikm,\n      'HKDF',\n      false,\n      ['deriveKey']\n    );\n\n    return crypto.subtle.deriveKey(\n      {\n        name: 'HKDF',\n        salt: this.salt,\n        info: encoder.encode('Content-Encoding: aes128gcm\\0'),\n        hash: 'SHA-256'\n      },\n      inputKey,\n      {\n        name: 'AES-GCM',\n        length: 128\n      },\n      true, // Edge polyfill requires key to be extractable to encrypt :/\n      ['encrypt', 'decrypt']\n    );\n  }\n\n  async generateNonceBase() {\n    const inputKey = await crypto.subtle.importKey(\n      'raw',\n      this.ikm,\n      'HKDF',\n      false,\n      ['deriveKey']\n    );\n\n    const base = await crypto.subtle.exportKey(\n      'raw',\n      await crypto.subtle.deriveKey(\n        {\n          name: 'HKDF',\n          salt: this.salt,\n          info: encoder.encode('Content-Encoding: nonce\\0'),\n          hash: 'SHA-256'\n        },\n        inputKey,\n        {\n          name: 'AES-GCM',\n          length: 128\n        },\n        true,\n        ['encrypt', 'decrypt']\n      )\n    );\n\n    return Buffer.from(base.slice(0, NONCE_LENGTH));\n  }\n\n  generateNonce(seq) {\n    if (seq > 0xffffffff) {\n      throw new Error('record sequence number exceeds limit');\n    }\n    const nonce = Buffer.from(this.nonceBase);\n    const m = nonce.readUIntBE(nonce.length - 4, 4);\n    const xor = (m ^ seq) >>> 0; //forces unsigned int xor\n    nonce.writeUIntBE(xor, nonce.length - 4, 4);\n\n    return nonce;\n  }\n\n  pad(data, isLast) {\n    const len = data.length;\n    if (len + TAG_LENGTH >= this.rs) {\n      throw new Error('data too large for record size');\n    }\n\n    if (isLast) {\n      const padding = Buffer.alloc(1);\n      padding.writeUInt8(2, 0);\n      return Buffer.concat([data, padding]);\n    } else {\n      const padding = Buffer.alloc(this.rs - len - TAG_LENGTH);\n      padding.fill(0);\n      padding.writeUInt8(1, 0);\n      return Buffer.concat([data, padding]);\n    }\n  }\n\n  unpad(data, isLast) {\n    for (let i = data.length - 1; i >= 0; i--) {\n      if (data[i]) {\n        if (isLast) {\n          if (data[i] !== 2) {\n            throw new Error('delimiter of final record is not 2');\n          }\n        } else {\n          if (data[i] !== 1) {\n            throw new Error('delimiter of not final record is not 1');\n          }\n        }\n        return data.slice(0, i);\n      }\n    }\n    throw new Error('no delimiter found');\n  }\n\n  createHeader() {\n    const nums = Buffer.alloc(5);\n    nums.writeUIntBE(this.rs, 0, 4);\n    nums.writeUIntBE(0, 4, 1);\n    return Buffer.concat([Buffer.from(this.salt), nums]);\n  }\n\n  readHeader(buffer) {\n    if (buffer.length < 21) {\n      throw new Error('chunk too small for reading header');\n    }\n    const header = {};\n    header.salt = buffer.buffer.slice(0, KEY_LENGTH);\n    header.rs = buffer.readUIntBE(KEY_LENGTH, 4);\n    const idlen = buffer.readUInt8(KEY_LENGTH + 4);\n    header.length = idlen + KEY_LENGTH + 5;\n    return header;\n  }\n\n  async encryptRecord(buffer, seq, isLast) {\n    const nonce = this.generateNonce(seq);\n    const encrypted = await crypto.subtle.encrypt(\n      { name: 'AES-GCM', iv: nonce },\n      this.key,\n      this.pad(buffer, isLast)\n    );\n    return Buffer.from(encrypted);\n  }\n\n  async decryptRecord(buffer, seq, isLast) {\n    const nonce = this.generateNonce(seq);\n    const data = await crypto.subtle.decrypt(\n      {\n        name: 'AES-GCM',\n        iv: nonce,\n        tagLength: 128\n      },\n      this.key,\n      buffer\n    );\n\n    return this.unpad(Buffer.from(data), isLast);\n  }\n\n  async start(controller) {\n    if (this.mode === MODE_ENCRYPT) {\n      this.key = await this.generateKey();\n      this.nonceBase = await this.generateNonceBase();\n      controller.enqueue(this.createHeader());\n    } else if (this.mode !== MODE_DECRYPT) {\n      throw new Error('mode must be either encrypt or decrypt');\n    }\n  }\n\n  async transformPrevChunk(isLast, controller) {\n    if (this.mode === MODE_ENCRYPT) {\n      controller.enqueue(\n        await this.encryptRecord(this.prevChunk, this.seq, isLast)\n      );\n      this.seq++;\n    } else {\n      if (this.seq === 0) {\n        //the first chunk during decryption contains only the header\n        const header = this.readHeader(this.prevChunk);\n        this.salt = header.salt;\n        this.rs = header.rs;\n        this.key = await this.generateKey();\n        this.nonceBase = await this.generateNonceBase();\n      } else {\n        controller.enqueue(\n          await this.decryptRecord(this.prevChunk, this.seq - 1, isLast)\n        );\n      }\n      this.seq++;\n    }\n  }\n\n  async transform(chunk, controller) {\n    if (!this.firstchunk) {\n      await this.transformPrevChunk(false, controller);\n    }\n    this.firstchunk = false;\n    this.prevChunk = Buffer.from(chunk.buffer);\n  }\n\n  async flush(controller) {\n    //console.log('ece stream ends')\n    if (this.prevChunk) {\n      await this.transformPrevChunk(true, controller);\n    }\n  }\n}\n\nclass StreamSlicer {\n  constructor(rs, mode) {\n    this.mode = mode;\n    this.rs = rs;\n    this.chunkSize = mode === MODE_ENCRYPT ? rs - 17 : 21;\n    this.partialChunk = new Uint8Array(this.chunkSize); //where partial chunks are saved\n    this.offset = 0;\n  }\n\n  send(buf, controller) {\n    controller.enqueue(buf);\n    if (this.chunkSize === 21 && this.mode === MODE_DECRYPT) {\n      this.chunkSize = this.rs;\n    }\n    this.partialChunk = new Uint8Array(this.chunkSize);\n    this.offset = 0;\n  }\n\n  //reslice input into record sized chunks\n  transform(chunk, controller) {\n    //console.log('Received chunk with %d bytes.', chunk.byteLength)\n    let i = 0;\n\n    if (this.offset > 0) {\n      const len = Math.min(chunk.byteLength, this.chunkSize - this.offset);\n      this.partialChunk.set(chunk.slice(0, len), this.offset);\n      this.offset += len;\n      i += len;\n\n      if (this.offset === this.chunkSize) {\n        this.send(this.partialChunk, controller);\n      }\n    }\n\n    while (i < chunk.byteLength) {\n      const remainingBytes = chunk.byteLength - i;\n      if (remainingBytes >= this.chunkSize) {\n        const record = chunk.slice(i, i + this.chunkSize);\n        i += this.chunkSize;\n        this.send(record, controller);\n      } else {\n        const end = chunk.slice(i, i + remainingBytes);\n        i += end.byteLength;\n        this.partialChunk.set(end);\n        this.offset = end.byteLength;\n      }\n    }\n  }\n\n  flush(controller) {\n    if (this.offset > 0) {\n      controller.enqueue(this.partialChunk.slice(0, this.offset));\n    }\n  }\n}\n\n/*\ninput: a ReadableStream containing data to be transformed\nkey:  Uint8Array containing key of size KEY_LENGTH\nrs:   int containing record size, optional\nsalt: ArrayBuffer containing salt of KEY_LENGTH length, optional\n*/\nexport function encryptStream(\n  input,\n  key,\n  rs = ECE_RECORD_SIZE,\n  salt = generateSalt(KEY_LENGTH)\n) {\n  const mode = 'encrypt';\n  const inputStream = transformStream(input, new StreamSlicer(rs, mode));\n  return transformStream(inputStream, new ECETransformer(mode, key, rs, salt));\n}\n\n/*\ninput: a ReadableStream containing data to be transformed\nkey:  Uint8Array containing key of size KEY_LENGTH\nrs:   int containing record size, optional\n*/\nexport function decryptStream(input, key, rs = ECE_RECORD_SIZE) {\n  const mode = 'decrypt';\n  const inputStream = transformStream(input, new StreamSlicer(rs, mode));\n  return transformStream(inputStream, new ECETransformer(mode, key, rs));\n}\n","import { arrayToB64, b64ToArray } from './utils-worker';\nimport { decryptStream, encryptStream } from './ece.js';\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\n\nexport default class Keychain {\n  constructor(secretKeyB64, nonce) {\n    this._nonce = nonce || 'yRCdyQ1EMSA3mo4rqSkuNQ==';\n    if (secretKeyB64) {\n      this.rawSecret = b64ToArray(secretKeyB64);\n    } else {\n      this.rawSecret = crypto.getRandomValues(new Uint8Array(16));\n    }\n    this.secretKeyPromise = crypto.subtle.importKey(\n      'raw',\n      this.rawSecret,\n      'HKDF',\n      false,\n      ['deriveKey']\n    );\n    this.metaKeyPromise = this.secretKeyPromise.then(function(secretKey) {\n      return crypto.subtle.deriveKey(\n        {\n          name: 'HKDF',\n          salt: new Uint8Array(),\n          info: encoder.encode('metadata'),\n          hash: 'SHA-256'\n        },\n        secretKey,\n        {\n          name: 'AES-GCM',\n          length: 128\n        },\n        false,\n        ['encrypt', 'decrypt']\n      );\n    });\n    this.authKeyPromise = this.secretKeyPromise.then(function(secretKey) {\n      return crypto.subtle.deriveKey(\n        {\n          name: 'HKDF',\n          salt: new Uint8Array(),\n          info: encoder.encode('authentication'),\n          hash: 'SHA-256'\n        },\n        secretKey,\n        {\n          name: 'HMAC',\n          hash: { name: 'SHA-256' }\n        },\n        true,\n        ['sign']\n      );\n    });\n  }\n\n  get nonce() {\n    return this._nonce;\n  }\n\n  set nonce(n) {\n    if (n && n !== this._nonce) {\n      this._nonce = n;\n    }\n  }\n\n  setPassword(password, shareUrl) {\n    this.authKeyPromise = crypto.subtle\n      .importKey('raw', encoder.encode(password), { name: 'PBKDF2' }, false, [\n        'deriveKey'\n      ])\n      .then(passwordKey =>\n        crypto.subtle.deriveKey(\n          {\n            name: 'PBKDF2',\n            salt: encoder.encode(shareUrl),\n            iterations: 100,\n            hash: 'SHA-256'\n          },\n          passwordKey,\n          {\n            name: 'HMAC',\n            hash: 'SHA-256'\n          },\n          true,\n          ['sign']\n        )\n      );\n  }\n\n  setAuthKey(authKeyB64) {\n    this.authKeyPromise = crypto.subtle.importKey(\n      'raw',\n      b64ToArray(authKeyB64),\n      {\n        name: 'HMAC',\n        hash: 'SHA-256'\n      },\n      true,\n      ['sign']\n    );\n  }\n\n  async authKeyB64() {\n    const authKey = await this.authKeyPromise;\n    const rawAuth = await crypto.subtle.exportKey('raw', authKey);\n    return arrayToB64(new Uint8Array(rawAuth));\n  }\n\n  async authHeader() {\n    const authKey = await this.authKeyPromise;\n    const sig = await crypto.subtle.sign(\n      {\n        name: 'HMAC'\n      },\n      authKey,\n      b64ToArray(this.nonce)\n    );\n    return `send-v1 ${arrayToB64(new Uint8Array(sig))}`;\n  }\n\n  async encryptMetadata(metadata) {\n    const metaKey = await this.metaKeyPromise;\n    const ciphertext = await crypto.subtle.encrypt(\n      {\n        name: 'AES-GCM',\n        iv: new Uint8Array(12),\n        tagLength: 128\n      },\n      metaKey,\n      encoder.encode(\n        JSON.stringify({\n          name: metadata.name,\n          size: metadata.size,\n          type: metadata.type || 'application/octet-stream',\n          manifest: metadata.manifest || {}\n        })\n      )\n    );\n    return ciphertext;\n  }\n\n  encryptStream(plainStream) {\n    return encryptStream(plainStream, this.rawSecret);\n  }\n\n  decryptStream(cryptotext) {\n    return decryptStream(cryptotext, this.rawSecret);\n  }\n\n  async decryptMetadata(ciphertext) {\n    const metaKey = await this.metaKeyPromise;\n    const plaintext = await crypto.subtle.decrypt(\n      {\n        name: 'AES-GCM',\n        iv: new Uint8Array(12),\n        tagLength: 128\n      },\n      metaKey,\n      ciphertext\n    );\n    return JSON.parse(decoder.decode(plaintext));\n  }\n}\n","import { arrayToB64, b64ToArray, delay } from \"./utils-worker\";\nimport { ECE_RECORD_SIZE } from \"./ece\";\n\nlet fileProtocolWssUrl = null;\ntry {\n  fileProtocolWssUrl = localStorage.getItem(\"wssURL\");\n} catch (e) {\n  // NOOP\n}\nif (!fileProtocolWssUrl) {\n  fileProtocolWssUrl = \"wss://send.firefox.com/api/ws\";\n}\n\nexport class ConnectionError extends Error {\n  constructor(cancelled, duration, size) {\n    super(cancelled ? \"0\" : \"connection closed\");\n    this.cancelled = cancelled;\n    this.duration = duration;\n    this.size = size;\n  }\n}\n\nexport function setFileProtocolWssUrl(url) {\n  localStorage && localStorage.setItem(\"wssURL\", url);\n  fileProtocolWssUrl = url;\n}\n\nexport function getFileProtocolWssUrl() {\n  return fileProtocolWssUrl;\n}\n\nlet apiUrlPrefix = \"\";\nexport function getApiUrl(path) {\n  return apiUrlPrefix + path;\n}\n\nexport function setApiUrlPrefix(prefix) {\n  apiUrlPrefix = prefix;\n}\n\nfunction post(obj) {\n  const h = {\n    \"Content-Type\": \"application/json\",\n  };\n  return {\n    method: \"POST\",\n    headers: new Headers(h),\n    body: JSON.stringify(obj),\n  };\n}\n\nexport function parseNonce(header) {\n  header = header || \"\";\n  return header.split(\" \")[1];\n}\n\nasync function fetchWithAuth(url, params, keychain) {\n  const result = {};\n  params = params || {};\n  const h = await keychain.authHeader();\n  params.headers = new Headers({\n    Authorization: h,\n    \"Content-Type\": \"application/json\",\n  });\n  const response = await fetch(url, params);\n  result.response = response;\n  result.ok = response.ok;\n  const nonce = parseNonce(response.headers.get(\"WWW-Authenticate\"));\n  result.shouldRetry = response.status === 401 && nonce !== keychain.nonce;\n  keychain.nonce = nonce;\n  return result;\n}\n\nasync function fetchWithAuthAndRetry(url, params, keychain) {\n  const result = await fetchWithAuth(url, params, keychain);\n  if (result.shouldRetry) {\n    return fetchWithAuth(url, params, keychain);\n  }\n  return result;\n}\n\nexport async function del(id, owner_token) {\n  const response = await fetch(\n    getApiUrl(`/api/delete/${id}`),\n    post({ owner_token }),\n  );\n  return response.ok;\n}\n\nexport async function setParams(id, owner_token, params) {\n  const response = await fetch(\n    getApiUrl(`/api/params/${id}`),\n    post({\n      owner_token,\n      dlimit: params.dlimit,\n    }),\n  );\n  return response.ok;\n}\n\nexport async function fileInfo(id, owner_token) {\n  const response = await fetch(\n    getApiUrl(`/api/info/${id}`),\n    post({ owner_token }),\n  );\n\n  if (response.ok) {\n    const obj = await response.json();\n    return obj;\n  }\n\n  throw new Error(response.status);\n}\n\nexport async function metadata(id, keychain) {\n  const result = await fetchWithAuthAndRetry(\n    getApiUrl(`/api/metadata/${id}`),\n    { method: \"GET\" },\n    keychain,\n  );\n  if (result.ok) {\n    const data = await result.response.json();\n    const meta = await keychain.decryptMetadata(b64ToArray(data.metadata));\n    return {\n      size: meta.size,\n      ttl: data.ttl,\n      iv: meta.iv,\n      name: meta.name,\n      type: meta.type,\n      manifest: meta.manifest,\n    };\n  }\n  throw new Error(result.response.status);\n}\n\nexport async function setPassword(id, owner_token, keychain) {\n  const auth = await keychain.authKeyB64();\n  const response = await fetch(\n    getApiUrl(`/api/password/${id}`),\n    post({ owner_token, auth }),\n  );\n  return response.ok;\n}\n\nfunction asyncInitWebSocket(server) {\n  return new Promise((resolve, reject) => {\n    try {\n      const ws = new WebSocket(server);\n      ws.addEventListener(\"open\", () => resolve(ws), { once: true });\n    } catch (e) {\n      reject(new ConnectionError(false));\n    }\n  });\n}\n\nfunction listenForResponse(ws, canceller) {\n  return new Promise((resolve, reject) => {\n    function handleClose(event) {\n      // a 'close' event before a 'message' event means the request failed\n      ws.removeEventListener(\"message\", handleMessage);\n      reject(new ConnectionError(canceller.cancelled));\n    }\n    function handleMessage(msg) {\n      ws.removeEventListener(\"close\", handleClose);\n      try {\n        const response = JSON.parse(msg.data);\n        if (response.error) {\n          throw new Error(response.error);\n        } else {\n          resolve(response);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    }\n    ws.addEventListener(\"message\", handleMessage, { once: true });\n    ws.addEventListener(\"close\", handleClose, { once: true });\n  });\n}\n\nasync function upload(\n  stream,\n  metadata,\n  verifierB64,\n  timeLimit,\n  dlimit,\n  onprogress,\n  canceller,\n) {\n  let size = 0;\n  const start = Date.now();\n  const host = window.location.hostname;\n  const port = window.location.port;\n  const protocol = window.location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n  const endpoint =\n    window.location.protocol === \"file:\"\n      ? fileProtocolWssUrl\n      : `${protocol}//${host}${port ? \":\" : \"\"}${port}/api/ws`;\n\n  const ws = await asyncInitWebSocket(endpoint);\n\n  try {\n    const metadataHeader = arrayToB64(new Uint8Array(metadata));\n    const fileMeta = {\n      fileMetadata: metadataHeader,\n      authorization: `send-v1 ${verifierB64}`,\n      timeLimit,\n      dlimit,\n    };\n    const uploadInfoResponse = listenForResponse(ws, canceller);\n    ws.send(JSON.stringify(fileMeta));\n    const uploadInfo = await uploadInfoResponse;\n\n    const completedResponse = listenForResponse(ws, canceller);\n\n    const reader = stream.getReader();\n    let state = await reader.read();\n    while (!state.done) {\n      if (canceller.cancelled) {\n        ws.close();\n      }\n      if (ws.readyState !== WebSocket.OPEN) {\n        break;\n      }\n      const buf = state.value;\n      ws.send(buf);\n      onprogress(size);\n      size += buf.length;\n      state = await reader.read();\n      while (\n        ws.bufferedAmount > ECE_RECORD_SIZE * 2 &&\n        ws.readyState === WebSocket.OPEN &&\n        !canceller.cancelled\n      ) {\n        await delay();\n      }\n    }\n    if (ws.readyState === WebSocket.OPEN) {\n      ws.send(new Uint8Array([0])); //EOF\n    }\n\n    await completedResponse;\n    uploadInfo.duration = Date.now() - start;\n    return uploadInfo;\n  } catch (e) {\n    e.size = size;\n    e.duration = Date.now() - start;\n    throw e;\n  } finally {\n    if (![WebSocket.CLOSED, WebSocket.CLOSING].includes(ws.readyState)) {\n      ws.close();\n    }\n  }\n}\n\nexport function uploadWs(\n  encrypted,\n  metadata,\n  verifierB64,\n  timeLimit,\n  dlimit,\n  onprogress,\n) {\n  const canceller = { cancelled: false };\n\n  return {\n    cancel: function () {\n      canceller.cancelled = true;\n    },\n\n    result: upload(\n      encrypted,\n      metadata,\n      verifierB64,\n      timeLimit,\n      dlimit,\n      onprogress,\n      canceller,\n    ),\n  };\n}\n\n////////////////////////\n\nasync function downloadS(id, keychain, signal) {\n  const auth = await keychain.authHeader();\n\n  const response = await fetch(getApiUrl(`/api/download/${id}`), {\n    signal: signal,\n    method: \"GET\",\n    headers: { Authorization: auth },\n  });\n\n  const authHeader = response.headers.get(\"WWW-Authenticate\");\n  if (authHeader) {\n    keychain.nonce = parseNonce(authHeader);\n  }\n\n  if (response.status !== 200) {\n    throw new Error(response.status);\n  }\n\n  return response.body;\n}\n\nasync function tryDownloadStream(id, keychain, signal, tries = 2) {\n  try {\n    const result = await downloadS(id, keychain, signal);\n    return result;\n  } catch (e) {\n    if (e.message === \"401\" && --tries > 0) {\n      return tryDownloadStream(id, keychain, signal, tries);\n    }\n    if (e.name === \"AbortError\") {\n      throw new Error(\"0\");\n    }\n    throw e;\n  }\n}\n\nexport function downloadStream(id, keychain) {\n  const controller = new AbortController();\n  function cancel() {\n    controller.abort();\n  }\n  return {\n    cancel,\n    result: tryDownloadStream(id, keychain, controller.signal),\n  };\n}\n\n//////////////////\n\nasync function download(id, keychain, onprogress, canceller) {\n  const auth = await keychain.authHeader();\n  const xhr = new XMLHttpRequest();\n  canceller.oncancel = function () {\n    xhr.abort();\n  };\n  return new Promise(function (resolve, reject) {\n    xhr.addEventListener(\"loadend\", function () {\n      canceller.oncancel = function () {};\n      const authHeader = xhr.getResponseHeader(\"WWW-Authenticate\");\n      if (authHeader) {\n        keychain.nonce = parseNonce(authHeader);\n      }\n      if (xhr.status !== 200) {\n        return reject(new Error(xhr.status));\n      }\n\n      const blob = new Blob([xhr.response]);\n      resolve(blob);\n    });\n\n    xhr.addEventListener(\"progress\", function (event) {\n      if (event.target.status === 200) {\n        onprogress(event.loaded);\n      }\n    });\n    xhr.open(\"get\", getApiUrl(`/api/download/blob/${id}`));\n    xhr.setRequestHeader(\"Authorization\", auth);\n    xhr.responseType = \"blob\";\n    xhr.send();\n    onprogress(0);\n  });\n}\n\nasync function tryDownload(id, keychain, onprogress, canceller, tries = 2) {\n  try {\n    const result = await download(id, keychain, onprogress, canceller);\n    return result;\n  } catch (e) {\n    if (e.message === \"401\" && --tries > 0) {\n      return tryDownload(id, keychain, onprogress, canceller, tries);\n    }\n    throw e;\n  }\n}\n\nexport function downloadFile(id, keychain, onprogress) {\n  const canceller = {\n    oncancel: function () {}, // download() sets this\n  };\n  function cancel() {\n    canceller.oncancel();\n  }\n  return {\n    cancel,\n    result: tryDownload(id, keychain, onprogress, canceller),\n  };\n}\n\nexport async function getFileList(bearerToken, kid) {\n  const headers = new Headers({ Authorization: `Bearer ${bearerToken}` });\n  const response = await fetch(getApiUrl(`/api/filelist/${kid}`), { headers });\n  if (response.ok) {\n    const encrypted = await response.blob();\n    return encrypted;\n  }\n  throw new Error(response.status);\n}\n\nexport async function setFileList(bearerToken, kid, data) {\n  const headers = new Headers({ Authorization: `Bearer ${bearerToken}` });\n  const response = await fetch(getApiUrl(`/api/filelist/${kid}`), {\n    headers,\n    method: \"POST\",\n    body: data,\n  });\n  return response.ok;\n}\n\nexport async function getConstants() {\n  const response = await fetch(getApiUrl(\"/config\"));\n\n  if (response.ok) {\n    const obj = await response.json();\n    return obj;\n  }\n\n  throw new Error(response.status);\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","import { Buffer } from 'buffer';\n\nconst createBuffer =\n  Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow\n    ? Buffer.from\n    : // support for Node < 5.10\n      val => new Buffer(val);\n\nexport default createBuffer;\n","export default function(model, calc) {\n  const fn = (buf, previous) => calc(buf, previous) >>> 0;\n  fn.signed = calc;\n  fn.unsigned = fn;\n  fn.model = model;\n\n  return fn;\n}\n","import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba,\n  0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n  0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n  0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n  0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec,\n  0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n  0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940,\n  0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116,\n  0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n  0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n  0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a,\n  0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818,\n  0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n  0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c,\n  0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n  0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n  0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n  0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086,\n  0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4,\n  0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n  0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n  0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n  0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe,\n  0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n  0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252,\n  0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60,\n  0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n  0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n  0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04,\n  0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a,\n  0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n  0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e,\n  0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n  0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n  0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n  0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0,\n  0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6,\n  0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n  0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc32 = defineCrc('crc-32', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = previous === 0 ? 0 : ~~previous ^ -1;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] ^ (crc >>> 8);\n  }\n\n  return crc ^ -1;\n});\n\nexport default crc32;\n","import crc32 from 'crc/crc32';\n\nconst encoder = new TextEncoder();\n\nfunction dosDateTime(dateTime = new Date()) {\n  const year = (dateTime.getFullYear() - 1980) << 9;\n  const month = (dateTime.getMonth() + 1) << 5;\n  const day = dateTime.getDate();\n  const date = year | month | day;\n  const hour = dateTime.getHours() << 11;\n  const minute = dateTime.getMinutes() << 5;\n  const second = Math.floor(dateTime.getSeconds() / 2);\n  const time = hour | minute | second;\n\n  return { date, time };\n}\n\nclass File {\n  constructor(info) {\n    this.name = encoder.encode(info.name);\n    this.size = info.size;\n    this.bytesRead = 0;\n    this.crc = null;\n    this.dateTime = dosDateTime();\n  }\n\n  get header() {\n    const h = new ArrayBuffer(30 + this.name.byteLength);\n    const v = new DataView(h);\n    v.setUint32(0, 0x04034b50, true); // sig\n    v.setUint16(4, 20, true); // version\n    v.setUint16(6, 0x808, true); // bit flags (use data descriptor(8) + utf8-encoded(8 << 8))\n    v.setUint16(8, 0, true); // compression\n    v.setUint16(10, this.dateTime.time, true); // modified time\n    v.setUint16(12, this.dateTime.date, true); // modified date\n    v.setUint32(14, 0, true); // crc32 (in descriptor)\n    v.setUint32(18, 0, true); // compressed size (in descriptor)\n    v.setUint32(22, 0, true); // uncompressed size (in descriptor)\n    v.setUint16(26, this.name.byteLength, true); // name length\n    v.setUint16(28, 0, true); // extra field length\n    for (let i = 0; i < this.name.byteLength; i++) {\n      v.setUint8(30 + i, this.name[i]);\n    }\n    return new Uint8Array(h);\n  }\n\n  get dataDescriptor() {\n    const dd = new ArrayBuffer(16);\n    const v = new DataView(dd);\n    v.setUint32(0, 0x08074b50, true); // sig\n    v.setUint32(4, this.crc, true); // crc32\n    v.setUint32(8, this.size, true); // compressed size\n    v.setUint32(12, this.size, true); // uncompressed size\n    return new Uint8Array(dd);\n  }\n\n  directoryRecord(offset) {\n    const dr = new ArrayBuffer(46 + this.name.byteLength);\n    const v = new DataView(dr);\n    v.setUint32(0, 0x02014b50, true); // sig\n    v.setUint16(4, 20, true); // version made\n    v.setUint16(6, 20, true); // version required\n    v.setUint16(8, 0x808, true); // bit flags (use data descriptor(8) + utf8-encoded(8 << 8))\n    v.setUint16(10, 0, true); // compression\n    v.setUint16(12, this.dateTime.time, true); // modified time\n    v.setUint16(14, this.dateTime.date, true); // modified date\n    v.setUint32(16, this.crc, true); // crc\n    v.setUint32(20, this.size, true); // compressed size\n    v.setUint32(24, this.size, true); // uncompressed size\n    v.setUint16(28, this.name.byteLength, true); // name length\n    v.setUint16(30, 0, true); // extra length\n    v.setUint16(32, 0, true); // comment length\n    v.setUint16(34, 0, true); // disk number\n    v.setUint16(36, 0, true); // internal file attrs\n    v.setUint32(38, 0, true); // external file attrs\n    v.setUint32(42, offset, true); // file offset\n    for (let i = 0; i < this.name.byteLength; i++) {\n      v.setUint8(46 + i, this.name[i]);\n    }\n    return new Uint8Array(dr);\n  }\n\n  get byteLength() {\n    return this.size + this.name.byteLength + 30 + 16;\n  }\n\n  append(data, controller) {\n    this.bytesRead += data.byteLength;\n    const endIndex = data.byteLength - Math.max(this.bytesRead - this.size, 0);\n    const buf = data.slice(0, endIndex);\n    this.crc = crc32(buf, this.crc);\n    controller.enqueue(buf);\n    if (endIndex < data.byteLength) {\n      return data.slice(endIndex, data.byteLength);\n    }\n  }\n}\n\nfunction centralDirectory(files, controller) {\n  let directoryOffset = 0;\n  let directorySize = 0;\n  for (let i = 0; i < files.length; i++) {\n    const file = files[i];\n    const record = file.directoryRecord(directoryOffset);\n    directoryOffset += file.byteLength;\n    controller.enqueue(record);\n    directorySize += record.byteLength;\n  }\n  controller.enqueue(eod(files.length, directorySize, directoryOffset));\n}\n\nfunction eod(fileCount, directorySize, directoryOffset) {\n  const e = new ArrayBuffer(22);\n  const v = new DataView(e);\n  v.setUint32(0, 0x06054b50, true); // sig\n  v.setUint16(4, 0, true); // disk number\n  v.setUint16(6, 0, true); // directory disk\n  v.setUint16(8, fileCount, true); // number of records\n  v.setUint16(10, fileCount, true); // total records\n  v.setUint32(12, directorySize, true); // size of directory\n  v.setUint32(16, directoryOffset, true); // offset of directory\n  v.setUint16(20, 0, true); // comment length\n  return new Uint8Array(e);\n}\n\nclass ZipStreamController {\n  constructor(files, source) {\n    this.files = files;\n    this.fileIndex = 0;\n    this.file = null;\n    this.reader = source.getReader();\n    this.nextFile();\n    this.extra = null;\n  }\n\n  nextFile() {\n    this.file = this.files[this.fileIndex++];\n  }\n\n  async pull(controller) {\n    if (!this.file) {\n      // end of archive\n      centralDirectory(this.files, controller);\n      return controller.close();\n    }\n    if (this.file.bytesRead === 0) {\n      // beginning of file\n      controller.enqueue(this.file.header);\n      if (this.extra) {\n        this.extra = this.file.append(this.extra, controller);\n      }\n    }\n    if (this.file.bytesRead >= this.file.size) {\n      // end of file\n      controller.enqueue(this.file.dataDescriptor);\n      this.nextFile();\n      return this.pull(controller);\n    }\n    const data = await this.reader.read();\n    if (data.done) {\n      this.nextFile();\n      return this.pull(controller);\n    }\n    this.extra = this.file.append(data.value, controller);\n  }\n}\n\nexport default class Zip {\n  constructor(manifest, source) {\n    this.files = manifest.files.map(info => new File(info));\n    this.source = source;\n  }\n\n  get stream() {\n    return new ReadableStream(new ZipStreamController(this.files, this.source));\n  }\n\n  get size() {\n    const entries = this.files.reduce(\n      (total, file) => total + file.byteLength * 2 - file.size,\n      0\n    );\n    const eod = 22;\n    return entries + eod;\n  }\n}\n","import { version } from \"../package.json\";\nimport Keychain from \"./keychain\";\nimport { downloadStream } from \"./api\";\nimport { transformStream } from \"./streams\";\nimport Zip from \"./zip\";\n\n// Content-Disposition header generator with ASCII fallback\nfunction contentDisposition(filename) {\n  // ASCII fallback for old browsers + modern UTF-8 encoding\n  const asciiName = filename.replace(/[^\\x20-\\x7E]/g, \"_\");\n  const encodedName = encodeURIComponent(filename);\n  return `attachment; filename=\"${asciiName}\"; filename*=UTF-8''${encodedName}`;\n}\n\nlet noSave = false;\nconst map = new Map();\nconst IMAGES = /.*\\.(png|svg|jpg)$/;\nconst VERSIONED_ASSET = /\\.[A-Fa-f0-9]{8}\\.(js|css|png|svg|jpg)(#\\w+)?$/;\nconst DOWNLOAD_URL = /\\/api\\/download\\/([A-Fa-f0-9]{4,})/;\nconst FONT = /\\.woff2?$/;\n\nself.addEventListener(\"install\", () => {\n  self.skipWaiting();\n});\n\nself.addEventListener(\"activate\", (event) => {\n  event.waitUntil(self.clients.claim()).then(precache);\n});\n\nasync function decryptStream(id, signal) {\n  const file = map.get(id);\n  if (!file) {\n    console.error(\"[SW] File not found in map for id:\", id);\n    return new Response(null, { status: 400 });\n  }\n\n  if (signal && signal.aborted) {\n    console.log(\"[SW] Request already aborted for\", id);\n    map.delete(id);\n    return new Response(null, { status: 499 });\n  }\n  console.log(\"[SW] Starting decryptStream for\", id, \"with nonce:\", file.nonce);\n  let abortHandler = null;\n  try {\n    let size = file.size;\n    let type = file.type;\n    const keychain = new Keychain(file.key, file.nonce);\n    if (file.requiresPassword) {\n      keychain.setPassword(file.password, file.url);\n    }\n\n    console.log(\"[SW] Calling downloadStream...\");\n    file.download = downloadStream(id, keychain);\n\n    if (signal && typeof signal.addEventListener === \"function\") {\n      abortHandler = () => {\n        console.log(\"[SW] Request aborted for\", id);\n        try {\n          if (file.download && typeof file.download.cancel === \"function\") {\n            file.download.cancel();\n          }\n        } catch (err) {\n          console.warn(\"[SW] Failed to cancel download after abort\", err);\n        }\n        map.delete(id);\n      };\n      signal.addEventListener(\"abort\", abortHandler, { once: true });\n    }\n\n    const body = await file.download.result;\n\n    const decrypted = keychain.decryptStream(body);\n\n    let zipStream = null;\n    if (file.type === \"send-archive\") {\n      const zip = new Zip(file.manifest, decrypted);\n      zipStream = zip.stream;\n      type = \"application/zip\";\n      size = zip.size;\n    }\n    const responseStream = transformStream(\n      zipStream || decrypted,\n      {\n        transform(chunk, controller) {\n          file.progress += chunk.length;\n          if (signal && abortHandler && file.progress >= size) {\n            signal.removeEventListener(\"abort\", abortHandler);\n          }\n          controller.enqueue(chunk);\n        },\n      },\n      function oncancel() {\n        // NOTE: cancel doesn't currently fire on chrome\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=638494\n        file.download.cancel();\n        map.delete(id);\n      },\n    );\n\n    const headers = {\n      \"Content-Disposition\": contentDisposition(file.filename),\n      \"Content-Type\": type,\n      \"Content-Length\": size,\n    };\n    console.log(\"[SW] Returning decrypted stream response\");\n    return new Response(responseStream, { headers });\n  } catch (e) {\n    if (e && (e.message === \"0\" || e.name === \"AbortError\")) {\n      console.log(\"[SW] Download aborted for\", id);\n      return new Response(null, { status: 499 });\n    }\n    console.error(\"[SW] Error in decryptStream:\", e, \"noSave:\", noSave);\n    if (noSave) {\n      return new Response(null, { status: e.message });\n    }\n\n    console.log(\"[SW] Redirecting to download page\");\n    return new Response(null, {\n      status: 302,\n      headers: {\n        Location: `/download/${id}/#${file.key}`,\n      },\n    });\n  } finally {\n    if (signal && abortHandler) {\n      signal.removeEventListener(\"abort\", abortHandler);\n    }\n  }\n}\n\nasync function precache() {\n  try {\n    await cleanCache();\n    const cache = await caches.open(version);\n    const images = assets.match(IMAGES);\n    await cache.addAll(images);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nasync function cleanCache() {\n  const oldCaches = await caches.keys();\n  for (const c of oldCaches) {\n    if (c !== version) {\n      await caches.delete(c);\n    }\n  }\n}\n\nfunction cacheable(url) {\n  return VERSIONED_ASSET.test(url) || FONT.test(url);\n}\n\nasync function cachedOrFetched(req) {\n  const cache = await caches.open(version);\n  const cached = await cache.match(req);\n  if (cached) {\n    return cached;\n  }\n  const fetched = await fetch(req);\n  if (fetched.ok && cacheable(req.url)) {\n    cache.put(req, fetched.clone());\n  }\n  return fetched;\n}\n\nself.onfetch = (event) => {\n  const req = event.request;\n  if (req.method !== \"GET\") return;\n  const url = new URL(req.url);\n  const dlmatch = DOWNLOAD_URL.exec(url.pathname);\n  if (dlmatch) {\n    console.log(\"[SW] Intercepted download request for:\", dlmatch[1]);\n    event.respondWith(decryptStream(dlmatch[1], event.request.signal));\n  } else if (cacheable(url.pathname)) {\n    event.respondWith(cachedOrFetched(req));\n  }\n};\n\nself.onmessage = (event) => {\n  if (event.data.request === \"init\") {\n    console.log(\n      \"[SW] Received init message for\",\n      event.data.id,\n      \"nonce:\",\n      event.data.nonce,\n    );\n    noSave = event.data.noSave;\n    const info = {\n      key: event.data.key,\n      nonce: event.data.nonce,\n      filename: event.data.filename,\n      requiresPassword: event.data.requiresPassword,\n      password: event.data.password,\n      url: event.data.url,\n      type: event.data.type,\n      manifest: event.data.manifest,\n      size: event.data.size,\n      progress: 0,\n    };\n    map.set(event.data.id, info);\n    console.log(\"[SW] File info stored in map\");\n\n    event.ports[0].postMessage(\"file info received\");\n  } else if (event.data.request === \"progress\") {\n    const file = map.get(event.data.id);\n    if (!file) {\n      event.ports[0].postMessage({ error: \"cancelled\" });\n    } else {\n      if (file.progress === file.size) {\n        map.delete(event.data.id);\n      }\n      event.ports[0].postMessage({ progress: file.progress });\n    }\n  } else if (event.data.request === \"cancel\") {\n    const file = map.get(event.data.id);\n    if (file) {\n      if (file.download) {\n        file.download.cancel();\n      }\n      map.delete(event.data.id);\n    }\n    event.ports[0].postMessage(\"download cancelled\");\n  }\n};\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","code","i","len","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","require$$0","arrayToB64","array","b64ToArray","str","delay","resolve","streamToArrayBuffer","stream","size","reader","state","result","offset","part","utilsWorker","ieee754","buffer","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","value","c","rt","base64","require$$1","customInspectSymbol","exports","Buffer","SlowBuffer","K_MAX_LENGTH","typedArraySupport","proto","createBuffer","length","buf","arg","encodingOrOffset","allocUnsafe","from","fromString","fromArrayView","isInstance","fromArrayBuffer","valueOf","b","fromObject","assertSize","alloc","fill","encoding","checked","string","actual","fromArrayLike","arrayView","copy","byteOffset","obj","numberIsNaN","a","x","y","list","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","max","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","hexSliceLookupTable","bytes","newBuf","checkOffset","ext","noAssert","mul","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","checkInt","min","maxBytes","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","limit","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","errors","E","sym","getMessage","Base","name","range","input","msg","received","addNumericalSeparator","checkBounds","type","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","transformStream","readable","transformer","oncancel","wrappedTransformer","controller","done","enqueued","wrappedController","chunk","reason","NONCE_LENGTH","TAG_LENGTH","KEY_LENGTH","MODE_ENCRYPT","MODE_DECRYPT","ECE_RECORD_SIZE","encoder","generateSalt","randSalt","ECETransformer","mode","ikm","rs","salt","inputKey","base","seq","nonce","xor","data","isLast","padding","nums","header","idlen","encrypted","StreamSlicer","remainingBytes","record","encryptStream","key","inputStream","decryptStream","decoder","Keychain","secretKeyB64","secretKey","password","shareUrl","passwordKey","authKeyB64","authKey","rawAuth","sig","metadata","metaKey","plainStream","cryptotext","ciphertext","plaintext","fileProtocolWssUrl","apiUrlPrefix","getApiUrl","path","parseNonce","downloadS","id","keychain","signal","auth","response","authHeader","tryDownloadStream","tries","downloadStream","cancel","defineCrc","model","calc","previous","TABLE","crc32","crc","index","byte","dosDateTime","dateTime","year","month","day","date","hour","minute","second","time","File","info","h","v","dd","dr","endIndex","centralDirectory","files","directoryOffset","directorySize","file","eod","fileCount","ZipStreamController","source","Zip","manifest","total","contentDisposition","filename","asciiName","encodedName","noSave","map","IMAGES","VERSIONED_ASSET","DOWNLOAD_URL","FONT","event","precache","abortHandler","err","body","decrypted","zipStream","zip","responseStream","headers","cleanCache","cache","version","images","oldCaches","cacheable","url","cachedOrFetched","req","cached","fetched","dlmatch"],"mappings":"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AQ;AAAA,EACV;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EACpC;AAAA,EAAY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","x_google_ignoreList":[0,2,3,8,9,10,11]}