{
  "version": 3,
  "sources": ["../../src/ui/file-overview.mjs"],
  "sourcesContent": ["import { translateElement } from \"../utils.mjs\";\nimport { bytes, timeLeft } from \"../utils.mjs\";\n\n/**\n * <file-overview-view> - Shows file details before download starts\n *\n * Responsibilities:\n * - Display file icon, name, and size\n * - Show archive contents if file is a multi-file archive\n * - Display expiry information (downloads remaining, time left)\n * - Provide download button to start download\n * - Dispatch \"download-start\" event when user clicks download\n */\nclass FileOverviewElement extends HTMLElement {\n  constructor() {\n    super();\n\n    this._templateMounted = false;\n    this._postMountFrame = null;\n    this.fileInfo = null;\n\n    // Bound handlers\n    this._boundHandlers = {\n      download: this.handleDownload.bind(this),\n    };\n  }\n\n  connectedCallback() {\n    // Mount template first (synchronous)\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"file-overview-view\");\n      if (!template) {\n        console.error(\"Template #file-overview-view not found\");\n        return;\n      }\n\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n    }\n\n    // Schedule async initialization\n    this._postMountFrame = requestAnimationFrame(() => {\n      this._postMountFrame = null;\n      if (!this.isConnected) {\n        return;\n      }\n\n      translateElement(this);\n      this.setupHandlers();\n    });\n  }\n\n  disconnectedCallback() {\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n      this._postMountFrame = null;\n    }\n\n    this.teardownHandlers();\n  }\n\n  setupHandlers() {\n    const downloadBtn = this.querySelector('[data-action=\"download\"]');\n    if (downloadBtn) {\n      downloadBtn.addEventListener(\"click\", this._boundHandlers.download);\n    }\n  }\n\n  teardownHandlers() {\n    const downloadBtn = this.querySelector('[data-action=\"download\"]');\n    if (downloadBtn) {\n      downloadBtn.removeEventListener(\"click\", this._boundHandlers.download);\n    }\n  }\n\n  handleDownload(event) {\n    event.preventDefault();\n\n    // Dispatch download-start event\n    const event2 = new CustomEvent(\"download-start\", {\n      detail: { fileInfo: this.fileInfo },\n      bubbles: true,\n    });\n    this.dispatchEvent(event2);\n\n    console.log(\"[file-overview] Download started\");\n  }\n\n  /**\n   * Public API: Set file info and render\n   */\n  setFileInfo(fileInfo) {\n    this.fileInfo = fileInfo;\n    this.render();\n  }\n\n  async render() {\n    if (!this.fileInfo) {\n      return;\n    }\n\n    // Set file name\n    const nameEl = this.querySelector('[data-role=\"file-name\"]');\n    if (nameEl) {\n      nameEl.textContent = this.fileInfo.name || \"Unknown file\";\n    }\n\n    // Set file size\n    const sizeEl = this.querySelector('[data-role=\"file-size\"]');\n    if (sizeEl && this.fileInfo.size) {\n      sizeEl.textContent = bytes(this.fileInfo.size);\n    }\n\n    // Set icon based on file type\n    const iconEl = this.querySelector('[data-role=\"file-icon\"]');\n    if (iconEl && this.fileInfo.name) {\n      const fileName = this.fileInfo.name.toLowerCase();\n      if (fileName.endsWith(\".zip\")) {\n        iconEl.className = \"ri-folder-6-line h-12 w-12 flex-shrink-0 text-primary mr-4 text-5xl leading-[3rem]\";\n      }\n    }\n\n    // Render sender info (for logged-in users)\n    await this.renderSenderInfo();\n\n    // Render expiry info if available\n    this.renderExpiryInfo();\n\n    // Render file list if archive\n    if (this.isArchive()) {\n      this.renderFileList();\n    } else {\n      // Hide file list container\n      const listContainer = this.querySelector('[data-role=\"file-list-container\"]');\n      if (listContainer) {\n        listContainer.classList.add(\"hidden\");\n      }\n    }\n  }\n\n  async renderSenderInfo() {\n    const senderInfoEl = this.querySelector('[data-role=\"sender-info\"]');\n    if (!senderInfoEl) {\n      return;\n    }\n\n    // Try to fetch file info with user details (only works for logged-in users)\n    try {\n      const { fetchFileInfo } = await import(\"../api.mjs\");\n      const fileId = this.fileInfo.id || window.location.pathname.split('/').pop();\n\n      if (!fileId) {\n        return;\n      }\n\n      const fileDetails = await fetchFileInfo(fileId);\n\n      // Display owner name if available\n      if (fileDetails.owner_name) {\n        const senderLabelEl = senderInfoEl.querySelector('[data-role=\"sender-label\"]');\n        const senderNameEl = senderInfoEl.querySelector('[data-role=\"sender-name\"]');\n\n        if (senderLabelEl && senderNameEl) {\n          const translate = window.translate || ((key, params) => key);\n          senderLabelEl.textContent = translate(\"sharedBy\", \"Shared by\");\n          senderNameEl.textContent = fileDetails.owner_name;\n          senderInfoEl.classList.remove(\"hidden\");\n        }\n      }\n    } catch (err) {\n      // Silently fail - sender info is optional and only available for logged-in users\n      console.debug(\"Could not fetch sender info:\", err);\n    }\n  }\n\n  renderExpiryInfo() {\n    const expiryEl = this.querySelector('[data-role=\"expiry-info\"]');\n    if (!expiryEl) {\n      return;\n    }\n\n    // Check if we have expiry data from fileInfo\n    // (After metadata fetch, fileInfo should have dlimit, dtotal, expiresAt)\n    if (!this.fileInfo.dlimit || !this.fileInfo.expiresAt) {\n      expiryEl.classList.add(\"hidden\");\n      return;\n    }\n\n    const downloadsRemaining = this.fileInfo.dlimit - (this.fileInfo.dtotal || 0);\n    const timeLeftData = timeLeft(this.fileInfo.expiresAt - Date.now());\n\n    // Get translator\n    const translate = window.translate || ((key) => key);\n\n    // Build expiry text\n    const downloadCountText = translate(\"downloadCount\", { num: downloadsRemaining });\n    const timeText = translate(timeLeftData.id, timeLeftData);\n    const expiryText = translate(\"archiveExpiryInfo\", {\n      downloadCount: downloadCountText,\n      timespan: timeText,\n    });\n\n    expiryEl.innerHTML = expiryText;\n    expiryEl.classList.remove(\"hidden\");\n  }\n\n  renderFileList() {\n    const listContainer = this.querySelector('[data-role=\"file-list-container\"]');\n    if (!listContainer) {\n      return;\n    }\n\n    const manifest = this.fileInfo.manifest;\n    if (!manifest || !manifest.files || manifest.files.length === 0) {\n      listContainer.classList.add(\"hidden\");\n      return;\n    }\n\n    // Show container\n    listContainer.classList.remove(\"hidden\");\n\n    // Load file list template\n    const fileListTemplate = document.getElementById(\"file-overview-file-list\");\n    if (!fileListTemplate) {\n      console.error(\"Template #file-overview-file-list not found\");\n      return;\n    }\n\n    // Clone template\n    const fileListEl = fileListTemplate.content.cloneNode(true);\n\n    // Set file count in summary\n    const fileCountEl = fileListEl.querySelector('[data-role=\"file-count\"]');\n    if (fileCountEl) {\n      const translate = window.translate || ((key) => key);\n      fileCountEl.textContent = translate(\"fileCount\", { num: manifest.files.length });\n    }\n\n    // Populate file list\n    const fileListInner = fileListEl.querySelector('[data-role=\"file-list\"]');\n    if (fileListInner) {\n      manifest.files.forEach((file) => {\n        const itemEl = this.createFileListItem(file);\n        fileListInner.appendChild(itemEl);\n      });\n    }\n\n    // Append to container\n    listContainer.innerHTML = \"\";\n    listContainer.appendChild(fileListEl);\n  }\n\n  createFileListItem(file) {\n    const itemTemplate = document.getElementById(\"file-overview-file-item\");\n    if (!itemTemplate) {\n      // Fallback: create simple div\n      const div = document.createElement(\"div\");\n      div.textContent = `${file.name} (${bytes(file.size)})`;\n      div.className = \"text-sm text-grey-80 dark:text-grey-30 p-2\";\n      return div;\n    }\n\n    const itemEl = itemTemplate.content.cloneNode(true);\n\n    // Set file name\n    const nameEl = itemEl.querySelector('[data-role=\"item-name\"]');\n    if (nameEl) {\n      nameEl.textContent = file.name;\n    }\n\n    // Set file size\n    const sizeEl = itemEl.querySelector('[data-role=\"item-size\"]');\n    if (sizeEl) {\n      sizeEl.textContent = bytes(file.size);\n    }\n\n    // Set icon based on file type\n    const iconEl = itemEl.querySelector('[data-role=\"file-icon\"]');\n    if (iconEl && file.name) {\n      const fileName = file.name.toLowerCase();\n      if (fileName.endsWith(\".zip\")) {\n        iconEl.className = \"ri-folder-6-line h-6 w-6 text-primary flex-shrink-0 text-2xl leading-6\";\n      }\n    }\n\n    return itemEl;\n  }\n\n  /**\n   * Check if file is an archive (multiple files)\n   */\n  isArchive() {\n    return (\n      this.fileInfo.type === \"send-archive\" &&\n      this.fileInfo.manifest &&\n      this.fileInfo.manifest.files &&\n      this.fileInfo.manifest.files.length > 1\n    );\n  }\n}\n\n// Register the custom element\ncustomElements.define(\"file-overview-view\", FileOverviewElement);\n"],
  "mappings": "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",
  "names": []
}
