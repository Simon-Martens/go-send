{
  "version": 3,
  "sources": ["../../src/ui/settings-account-panel.mjs"],
  "sourcesContent": ["import storage from \"../storage.mjs\";\nimport UserSecrets, { OWNER_SECRET_VERSION } from \"../userSecrets.mjs\";\nimport {\n  arrayToB64,\n  translate,\n  translateElement,\n  copyToClipboard,\n} from \"../utils.mjs\";\nimport {\n  DEFAULT_KDF_SETTINGS,\n  deriveKeyMaterial,\n  generateSalt,\n  normalizeKDFSettings,\n  serializeKDFSettings,\n  encodePublicKey,\n  encodeSalt,\n  getPublicKey,\n} from \"../crypto/credentials.mjs\";\nimport { x25519 } from \"@noble/curves/ed25519\";\n\nclass SettingsAccountPanel extends HTMLElement {\n  constructor() {\n    super();\n    this._templateMounted = false;\n\n    // Element refs\n    this._profileForm = null;\n    this._profileSubmitButton = null;\n    this._profileStatus = null;\n    this._profileStatusIcon = null;\n    this._profileStatusText = null;\n    this._passwordForm = null;\n    this._passwordSubmitButton = null;\n    this._passwordStatus = null;\n    this._passwordStatusIcon = null;\n    this._passwordStatusText = null;\n    this._accountStatus = null;\n    this._accountStatusIcon = null;\n    this._accountStatusText = null;\n    this._clearSessionsButton = null;\n    this._deactivateAccountButton = null;\n    this._accountKeyValue = null;\n    this._accountKeyCopyButton = null;\n    this._accountKeyStatus = null;\n    this._accountKeyStatusIcon = null;\n    this._accountKeyStatusText = null;\n\n    // Bound handlers\n    this._boundPasswordSubmit = this._handlePasswordSubmit.bind(this);\n    this._boundProfileSubmit = this._handleProfileSubmit.bind(this);\n    this._boundClearSessions = this._handleClearSessions.bind(this);\n    this._boundDeactivateAccount = this._handleDeactivateAccount.bind(this);\n    this._boundKeyCopy = this._handleAccountKeyCopy.bind(this);\n  }\n\n  connectedCallback() {\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"settings-account-panel\");\n      if (!template) {\n        console.error(\"Template #settings-account-panel not found\");\n        return;\n      }\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    this._cacheElements();\n    translateElement(this);\n    this._attachListeners();\n    this._populateAccountForms();\n  }\n\n  disconnectedCallback() {\n    this._detachListeners();\n    // Clear refs\n    this._profileForm = null;\n    this._profileSubmitButton = null;\n    this._profileStatus = null;\n    this._profileStatusIcon = null;\n    this._profileStatusText = null;\n    this._passwordForm = null;\n    this._passwordSubmitButton = null;\n    this._passwordStatus = null;\n    this._passwordStatusIcon = null;\n    this._passwordStatusText = null;\n    this._accountStatus = null;\n    this._accountStatusIcon = null;\n    this._accountStatusText = null;\n    this._clearSessionsButton = null;\n    this._deactivateAccountButton = null;\n    this._accountKeyValue = null;\n    this._accountKeyCopyButton = null;\n    this._accountKeyStatus = null;\n    this._accountKeyStatusIcon = null;\n    this._accountKeyStatusText = null;\n  }\n\n  _cacheElements() {\n    this._profileForm = this.querySelector('[data-role=\"profile-form\"]');\n    this._profileSubmitButton = this.querySelector(\n      '[data-role=\"profile-submit\"]',\n    );\n    this._profileStatus = this.querySelector('[data-role=\"profile-status\"]');\n    this._profileStatusIcon = this.querySelector(\n      '[data-role=\"profile-status-icon\"]',\n    );\n    this._profileStatusText = this.querySelector(\n      '[data-role=\"profile-status-text\"]',\n    );\n\n    this._passwordForm = this.querySelector('[data-role=\"password-form\"]');\n    this._passwordSubmitButton = this.querySelector(\n      '[data-role=\"password-submit\"]',\n    );\n    this._passwordStatus = this.querySelector('[data-role=\"password-status\"]');\n    this._passwordStatusIcon = this.querySelector(\n      '[data-role=\"password-status-icon\"]',\n    );\n    this._passwordStatusText = this.querySelector(\n      '[data-role=\"password-status-text\"]',\n    );\n\n    this._accountStatus = this.querySelector('[data-role=\"account-status\"]');\n    this._accountStatusIcon = this.querySelector(\n      '[data-role=\"account-status-icon\"]',\n    );\n    this._accountStatusText = this.querySelector(\n      '[data-role=\"account-status-text\"]',\n    );\n\n    this._clearSessionsButton = this.querySelector(\n      '[data-role=\"account-clear-sessions\"]',\n    );\n    this._deactivateAccountButton = this.querySelector(\n      '[data-role=\"account-deactivate\"]',\n    );\n\n    this._accountKeyValue = this.querySelector('[data-role=\"account-key-value\"]');\n    this._accountKeyCopyButton = this.querySelector(\n      '[data-role=\"account-key-copy\"]',\n    );\n    this._accountKeyStatus = this.querySelector(\n      '[data-role=\"account-key-status\"]',\n    );\n    this._accountKeyStatusIcon = this.querySelector(\n      '[data-role=\"account-key-status-icon\"]',\n    );\n    this._accountKeyStatusText = this.querySelector(\n      '[data-role=\"account-key-status-text\"]',\n    );\n  }\n\n  _attachListeners() {\n    if (this._profileSubmitButton) {\n      this._profileSubmitButton.addEventListener(\n        \"click\",\n        this._boundProfileSubmit,\n      );\n    }\n    if (this._passwordSubmitButton) {\n      this._passwordSubmitButton.addEventListener(\n        \"click\",\n        this._boundPasswordSubmit,\n      );\n    }\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.addEventListener(\n        \"click\",\n        this._boundClearSessions,\n      );\n    }\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.addEventListener(\n        \"click\",\n        this._boundDeactivateAccount,\n      );\n    }\n    if (this._accountKeyCopyButton) {\n      this._accountKeyCopyButton.addEventListener(\"click\", this._boundKeyCopy);\n    }\n  }\n\n  _detachListeners() {\n    if (this._profileSubmitButton) {\n      this._profileSubmitButton.removeEventListener(\n        \"click\",\n        this._boundProfileSubmit,\n      );\n    }\n    if (this._passwordSubmitButton) {\n      this._passwordSubmitButton.removeEventListener(\n        \"click\",\n        this._boundPasswordSubmit,\n      );\n    }\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.removeEventListener(\n        \"click\",\n        this._boundClearSessions,\n      );\n    }\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.removeEventListener(\n        \"click\",\n        this._boundDeactivateAccount,\n      );\n    }\n    if (this._accountKeyCopyButton) {\n      this._accountKeyCopyButton.removeEventListener(\n        \"click\",\n        this._boundKeyCopy,\n      );\n    }\n  }\n\n  _populateAccountForms() {\n    const userSecrets = storage.user;\n    if (!userSecrets) {\n      return;\n    }\n    const nameInput = this._profileForm?.querySelector(\n      \"#settings-account-name\",\n    );\n    if (nameInput) {\n      nameInput.value = userSecrets.name || \"\";\n    }\n    const emailInput = this._profileForm?.querySelector(\n      \"#settings-account-email\",\n    );\n    if (emailInput) {\n      emailInput.value = userSecrets.email || \"\";\n    }\n    this._updateAccountKeySummary(userSecrets);\n  }\n\n  _updateAccountKeySummary(userSecrets) {\n    if (!this._accountKeyValue) {\n      return;\n    }\n    const raw = userSecrets?.x25519PrivateKey || \"\";\n    if (!raw) {\n      this._accountKeyValue.textContent = translate(\n        \"settingsAccountKeyUnavailable\",\n      );\n      if (this._accountKeyCopyButton) {\n        this._accountKeyCopyButton.disabled = true;\n      }\n      this._setKeyStatus(\"\", \"\");\n      return;\n    }\n    const preview =\n      raw.length <= 20 ? raw : `${raw.slice(0, 12)}\u2026${raw.slice(-6)}`;\n    this._accountKeyValue.textContent = preview;\n    if (this._accountKeyCopyButton) {\n      this._accountKeyCopyButton.disabled = false;\n      this._accountKeyCopyButton.setAttribute(\"data-key-value\", raw);\n    }\n    this._setKeyStatus(\"\", \"\");\n  }\n\n  _setProfileStatus(type, message) {\n    if (!this._profileStatus) {\n      return;\n    }\n    if (this._profileStatusText) {\n      this._profileStatusText.textContent = message || \"\";\n    }\n    this._profileStatus.className =\n      \"text-sm flex items-center gap-2 min-h-[1.25rem]\";\n    if (this._profileStatusIcon) {\n      this._profileStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._profileStatus.classList.add(\"text-red-600\", \"dark:text-red-400\");\n      if (this._profileStatusIcon) {\n        this._profileStatusIcon.classList.remove(\"hidden\");\n        this._profileStatusIcon.classList.add(\n          \"ri-close-circle-fill\",\n          \"text-red-600\",\n          \"dark:text-red-400\",\n        );\n      }\n    } else if (type === \"success\") {\n      this._profileStatus.classList.add(\n        \"text-green-600\",\n        \"dark:text-green-400\",\n      );\n      if (this._profileStatusIcon) {\n        this._profileStatusIcon.classList.remove(\"hidden\");\n        this._profileStatusIcon.classList.add(\n          \"ri-check-line\",\n          \"text-green-600\",\n          \"dark:text-green-400\",\n        );\n      }\n    } else {\n      this._profileStatus.classList.add(\"text-grey-70\", \"dark:text-grey-40\");\n      if (this._profileStatusIcon) {\n        this._profileStatusIcon.classList.remove(\"hidden\");\n        this._profileStatusIcon.classList.add(\n          \"ri-information-line\",\n          \"text-grey-60\",\n          \"dark:text-grey-40\",\n        );\n      }\n    }\n  }\n\n  _setKeyStatus(type, message) {\n    if (!this._accountKeyStatus) {\n      return;\n    }\n    if (this._accountKeyStatusText) {\n      this._accountKeyStatusText.textContent = message || \"\";\n    }\n    this._accountKeyStatus.className =\n      \"text-xs flex items-center gap-2 min-h-[1.25rem] text-amber-900/80 dark:text-amber-200/80\";\n    if (this._accountKeyStatusIcon) {\n      this._accountKeyStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._accountKeyStatus.className =\n        \"text-xs flex items-center gap-2 min-h-[1.25rem] text-red-600 dark:text-red-300\";\n      if (this._accountKeyStatusIcon) {\n        this._accountKeyStatusIcon.classList.remove(\"hidden\");\n        this._accountKeyStatusIcon.className =\n          \"ri-close-circle-fill text-red-600 dark:text-red-300\";\n      }\n    } else if (type === \"success\") {\n      this._accountKeyStatus.className =\n        \"text-xs flex items-center gap-2 min-h-[1.25rem] text-green-700 dark:text-green-300\";\n      if (this._accountKeyStatusIcon) {\n        this._accountKeyStatusIcon.classList.remove(\"hidden\");\n        this._accountKeyStatusIcon.className =\n          \"ri-check-line text-green-700 dark:text-green-300\";\n      }\n    } else {\n      if (this._accountKeyStatusIcon) {\n        this._accountKeyStatusIcon.classList.remove(\"hidden\");\n        this._accountKeyStatusIcon.className =\n          \"ri-information-line text-amber-700 dark:text-amber-200\";\n      }\n    }\n  }\n\n  _setAccountStatus(type, message) {\n    if (!this._accountStatus) {\n      return;\n    }\n    if (this._accountStatusText) {\n      this._accountStatusText.textContent = message || \"\";\n    }\n    this._accountStatus.className =\n      \"text-xs flex items-center gap-2 min-h-[1.25rem]\";\n    if (this._accountStatusIcon) {\n      this._accountStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._accountStatus.classList.add(\"text-red-600\", \"dark:text-red-400\");\n      if (this._accountStatusIcon) {\n        this._accountStatusIcon.classList.remove(\"hidden\");\n        this._accountStatusIcon.classList.add(\n          \"ri-close-circle-fill\",\n          \"text-red-600\",\n          \"dark:text-red-400\",\n        );\n      }\n    } else if (type === \"success\") {\n      this._accountStatus.classList.add(\n        \"text-green-600\",\n        \"dark:text-green-400\",\n      );\n      if (this._accountStatusIcon) {\n        this._accountStatusIcon.classList.remove(\"hidden\");\n        this._accountStatusIcon.classList.add(\n          \"ri-check-line\",\n          \"text-green-600\",\n          \"dark:text-green-400\",\n        );\n      }\n    } else {\n      this._accountStatus.classList.add(\"text-grey-70\", \"dark:text-grey-40\");\n      if (this._accountStatusIcon) {\n        this._accountStatusIcon.classList.remove(\"hidden\");\n        this._accountStatusIcon.classList.add(\n          \"ri-information-line\",\n          \"text-grey-60\",\n          \"dark:text-grey-40\",\n        );\n      }\n    }\n  }\n\n  _handleAccountKeyCopy(event) {\n    event.preventDefault();\n    if (!this._accountKeyCopyButton) {\n      return;\n    }\n    const value =\n      this._accountKeyCopyButton.getAttribute(\"data-key-value\") || \"\";\n    if (!value) {\n      this._setKeyStatus(\n        \"error\",\n        translate(\"settingsAccountKeyStatusUnavailable\"),\n      );\n      return;\n    }\n    const success = copyToClipboard(value);\n    if (success) {\n      this._setKeyStatus(\n        \"success\",\n        translate(\"settingsAccountKeyStatusCopied\"),\n      );\n      const icon = this._accountKeyCopyButton.querySelector(\"i\");\n      if (icon) {\n        const original = icon.dataset.originalClass || icon.className;\n        icon.dataset.originalClass = original;\n        icon.className = \"ri-check-line text-base leading-4\";\n        setTimeout(() => {\n          if (icon && icon.dataset.originalClass) {\n            icon.className = icon.dataset.originalClass;\n          }\n        }, 2000);\n      }\n    } else {\n      this._setKeyStatus(\"error\", translate(\"settingsAccountKeyStatusError\"));\n    }\n  }\n\n  _setPasswordStatus(type, message) {\n    if (!this._passwordStatus) {\n      return;\n    }\n    if (this._passwordStatusText) {\n      this._passwordStatusText.textContent = message || \"\";\n    }\n    this._passwordStatus.className = \"text-sm mt-4 flex items-center gap-2\";\n    if (this._passwordStatusIcon) {\n      this._passwordStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._passwordStatus.classList.add(\"text-red-600\", \"dark:text-red-400\");\n      if (this._passwordStatusIcon) {\n        this._passwordStatusIcon.classList.remove(\"hidden\");\n        this._passwordStatusIcon.classList.add(\n          \"ri-close-circle-fill\",\n          \"text-red-600\",\n          \"dark:text-red-400\",\n        );\n      }\n    } else if (type === \"success\") {\n      this._passwordStatus.classList.add(\n        \"text-green-600\",\n        \"dark:text-green-400\",\n      );\n      if (this._passwordStatusIcon) {\n        this._passwordStatusIcon.classList.remove(\"hidden\");\n        this._passwordStatusIcon.classList.add(\n          \"ri-check-line\",\n          \"text-green-600\",\n          \"dark:text-green-400\",\n        );\n      }\n    } else {\n      this._passwordStatus.classList.add(\"text-grey-70\", \"dark:text-grey-40\");\n      if (this._passwordStatusIcon) {\n        this._passwordStatusIcon.classList.remove(\"hidden\");\n        this._passwordStatusIcon.classList.add(\n          \"ri-information-line\",\n          \"text-grey-60\",\n          \"dark:text-grey-40\",\n        );\n      }\n    }\n  }\n\n  _isValidEmail(value) {\n    if (!value) {\n      return false;\n    }\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n  }\n\n  _mapProfileError(code, status) {\n    switch (code) {\n      case \"invalid_name\":\n        return translate(\"settingsAccountProfileStatusNameRequired\");\n      case \"invalid_email\":\n        return translate(\"settingsAccountProfileStatusEmailInvalid\");\n      case \"email_required\":\n        return translate(\"settingsAccountProfileStatusEmailRequired\");\n      case \"name_required\":\n        return translate(\"settingsAccountProfileStatusNameRequired\");\n      case \"email_in_use\":\n        return translate(\"settingsAccountProfileStatusEmailInUse\");\n      case \"not_active\":\n        return translate(\"settingsAccountDangerStatusNotActive\");\n      case \"forbidden\":\n        return translate(\"settingsAccountProfileStatusError\");\n      default:\n        break;\n    }\n    if (status === 409) {\n      return translate(\"settingsAccountProfileStatusEmailInUse\");\n    }\n    return translate(\"settingsAccountProfileStatusError\");\n  }\n\n  _mapAccountActionError(code) {\n    switch (code) {\n      case \"not_active\":\n        return translate(\"settingsAccountDangerStatusNotActive\");\n      case \"forbidden\":\n        return translate(\"settingsAccountDangerStatusError\");\n      default:\n        return translate(\"settingsAccountDangerStatusError\");\n    }\n  }\n\n  async _handleProfileSubmit(event) {\n    event.preventDefault();\n    if (!this._profileForm) {\n      return;\n    }\n\n    const nameInput = this._profileForm.querySelector(\"#settings-account-name\");\n    const emailInput = this._profileForm.querySelector(\n      \"#settings-account-email\",\n    );\n    const name = nameInput?.value.trim() || \"\";\n    const email = emailInput?.value.trim() || \"\";\n\n    if (!name) {\n      this._setProfileStatus(\n        \"error\",\n        translate(\"settingsAccountProfileStatusNameRequired\"),\n      );\n      return;\n    }\n    if (!email) {\n      this._setProfileStatus(\n        \"error\",\n        translate(\"settingsAccountProfileStatusEmailRequired\"),\n      );\n      return;\n    }\n    if (!this._isValidEmail(email)) {\n      this._setProfileStatus(\n        \"error\",\n        translate(\"settingsAccountProfileStatusEmailInvalid\"),\n      );\n      return;\n    }\n\n    this._setProfileStatus(\n      \"info\",\n      translate(\"settingsAccountProfileStatusSaving\"),\n    );\n    if (this._profileSubmitButton) {\n      this._profileSubmitButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/me/profile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name, email }),\n      });\n\n      if (!response.ok) {\n        let errorCode = \"\";\n        try {\n          const payload = await response.json();\n          if (payload && typeof payload.error === \"string\") {\n            errorCode = payload.error;\n          }\n        } catch {\n          // ignore parsing issues\n        }\n        const message = this._mapProfileError(errorCode, response.status);\n        throw new Error(message);\n      }\n\n      let data = null;\n      if (response.status !== 204) {\n        try {\n          data = await response.json();\n        } catch {\n          data = null;\n        }\n      }\n\n      const userSecrets = storage.user;\n      if (userSecrets) {\n        userSecrets.name = data?.name ?? name;\n        userSecrets.email = data?.email ?? email;\n        storage.setUser(userSecrets);\n      }\n      this._populateAccountForms();\n      this._setProfileStatus(\n        \"success\",\n        translate(\"settingsAccountProfileStatusSuccess\"),\n      );\n    } catch (error) {\n      const message =\n        error?.message || translate(\"settingsAccountProfileStatusError\");\n      this._setProfileStatus(\"error\", message);\n    } finally {\n      if (this._profileSubmitButton) {\n        this._profileSubmitButton.disabled = false;\n      }\n    }\n  }\n\n  async _handleClearSessions(event) {\n    event.preventDefault();\n    this._setAccountStatus(\n      \"info\",\n      translate(\"settingsAccountDangerStatusClearing\"),\n    );\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.disabled = true;\n    }\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/me/clear-sessions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        let errorCode = \"\";\n        try {\n          const payload = await response.json();\n          if (payload && typeof payload.error === \"string\") {\n            errorCode = payload.error;\n          }\n        } catch {\n          // ignore\n        }\n        const message = this._mapAccountActionError(errorCode);\n        throw new Error(message);\n      }\n\n      this._redirectToLogout();\n    } catch (error) {\n      const message =\n        error?.message || translate(\"settingsAccountDangerStatusError\");\n      this._setAccountStatus(\"error\", message);\n      if (this._clearSessionsButton) {\n        this._clearSessionsButton.disabled = false;\n      }\n      if (this._deactivateAccountButton) {\n        this._deactivateAccountButton.disabled = false;\n      }\n    }\n  }\n\n  async _handleDeactivateAccount(event) {\n    event.preventDefault();\n    const confirmed = window.confirm(\n      translate(\"settingsAccountDeactivateConfirm\"),\n    );\n    if (!confirmed) {\n      return;\n    }\n    this._setAccountStatus(\n      \"info\",\n      translate(\"settingsAccountDangerStatusDeactivating\"),\n    );\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.disabled = true;\n    }\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/me/deactivate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        let errorCode = \"\";\n        try {\n          const payload = await response.json();\n          if (payload && typeof payload.error === \"string\") {\n            errorCode = payload.error;\n          }\n        } catch {\n          // ignore\n        }\n        const message = this._mapAccountActionError(errorCode);\n        throw new Error(message);\n      }\n\n      this._redirectToLogout();\n    } catch (error) {\n      const message =\n        error?.message || translate(\"settingsAccountDangerStatusError\");\n      this._setAccountStatus(\"error\", message);\n      if (this._deactivateAccountButton) {\n        this._deactivateAccountButton.disabled = false;\n      }\n      if (this._clearSessionsButton) {\n        this._clearSessionsButton.disabled = false;\n      }\n    }\n  }\n\n  _redirectToLogout() {\n    try {\n      storage.clearUser();\n      storage.clearLocalFiles();\n    } catch (err) {\n      console.warn(\n        \"[SettingsAccountPanel] Failed to clear local storage on logout\",\n        err,\n      );\n    }\n    window.location.href = \"/logout\";\n  }\n\n  async _handlePasswordSubmit(event) {\n    event.preventDefault();\n    if (!this._passwordForm) {\n      return;\n    }\n\n    const currentInput = this._passwordForm.querySelector(\n      \"#settings-current-password\",\n    );\n    const newInput = this._passwordForm.querySelector(\"#settings-new-password\");\n    const confirmInput = this._passwordForm.querySelector(\n      \"#settings-confirm-password\",\n    );\n\n    const currentPassword = currentInput?.value || \"\";\n    const newPassword = newInput?.value || \"\";\n    const confirmPassword = confirmInput?.value || \"\";\n\n    if (currentPassword.length < 10) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorCurrent\"),\n      );\n      return;\n    }\n    if (newPassword.length < 10) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorNewLength\"),\n      );\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorMismatch\"),\n      );\n      return;\n    }\n\n    const userSecrets = storage.user;\n    if (!userSecrets) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorNoSession\"),\n      );\n      return;\n    }\n\n    const saltBytes = userSecrets.getSaltBytes();\n    if (!saltBytes || !saltBytes.length) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorMissingKeys\"),\n      );\n      return;\n    }\n\n    const storedSettings = userSecrets.settings || {};\n    const kdfInput =\n      storedSettings.kdf || storedSettings || DEFAULT_KDF_SETTINGS;\n    const kdfSettings = normalizeKDFSettings(kdfInput);\n\n    let derivedCurrent = null;\n    let newMaterial = null;\n    const newSaltBytes = generateSalt(\n      kdfSettings.saltLength || DEFAULT_KDF_SETTINGS.saltLength,\n    );\n\n    try {\n      this._setPasswordStatus(\n        \"info\",\n        translate(\"settingsPasswordStatusInfoDeriving\"),\n      );\n      derivedCurrent = await deriveKeyMaterial(\n        currentPassword,\n        saltBytes,\n        kdfSettings,\n      );\n\n      const derivedCurrentPublic = x25519.scalarMultBase(\n        derivedCurrent.x25519Seed,\n      );\n      const storedPublic = userSecrets.getX25519PublicKey();\n      if (\n        storedPublic &&\n        arrayToB64(derivedCurrentPublic) !== arrayToB64(storedPublic)\n      ) {\n        this._setPasswordStatus(\n          \"error\",\n          translate(\"settingsPasswordStatusErrorIncorrect\"),\n        );\n        derivedCurrent.edSeed.fill(0);\n        derivedCurrent.x25519Seed.fill(0);\n        return;\n      }\n\n      this._setPasswordStatus(\n        \"info\",\n        translate(\"settingsPasswordStatusInfoPreparing\"),\n      );\n      newMaterial = await deriveKeyMaterial(\n        newPassword,\n        newSaltBytes,\n        kdfSettings,\n      );\n    } catch (err) {\n      console.error(\"[SettingsAccountPanel] Failed to derive key material\", err);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorDerive\"),\n      );\n      return;\n    } finally {\n      if (derivedCurrent?.edSeed) derivedCurrent.edSeed.fill(0);\n      if (derivedCurrent?.x25519Seed) derivedCurrent.x25519Seed.fill(0);\n    }\n\n    let newEdPublic;\n    let newXPublic;\n    try {\n      newEdPublic = await getPublicKey(newMaterial.edSeed);\n      newXPublic = x25519.scalarMultBase(newMaterial.x25519Seed);\n    } catch (err) {\n      console.error(\"[SettingsAccountPanel] Failed to compute public keys\", err);\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorPublicKeys\"),\n      );\n      return;\n    }\n\n    let newUserSecrets;\n    try {\n      newUserSecrets = UserSecrets.fromKeyMaterial({\n        email: userSecrets.email,\n        name: userSecrets.name,\n        role: userSecrets.role,\n        settings: storedSettings,\n        salt: encodeSalt(newSaltBytes),\n        x25519Seed: newMaterial.x25519Seed,\n        x25519PublicKey: newXPublic,\n        version: userSecrets.version,\n      });\n    } catch (err) {\n      console.error(\"[SettingsAccountPanel] Failed to prepare new user secrets\", err);\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorUserSecrets\"),\n      );\n      return;\n    }\n\n    const fileUpdates = [];\n    try {\n      const files = storage.files || [];\n      for (const ownedFile of files) {\n        if (!ownedFile?.id || !ownedFile.keychain?.rawSecret) {\n          continue;\n        }\n        const wrap = await newUserSecrets.wrapSecret(\n          ownedFile.keychain.rawSecret,\n        );\n        fileUpdates.push({\n          id: ownedFile.id,\n          ciphertext: wrap.ciphertext,\n          nonce: wrap.nonce,\n          ephemeral_pub: wrap.ephemeralPublicKey,\n          version: wrap.version || OWNER_SECRET_VERSION,\n        });\n      }\n    } catch (err) {\n      console.error(\"[SettingsAccountPanel] Failed to re-wrap secrets\", err);\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorWrap\"),\n      );\n      return;\n    }\n\n    const payload = {\n      current_password: currentPassword,\n      new_salt: encodeSalt(newSaltBytes),\n      new_public_key: encodePublicKey(newEdPublic),\n      new_encryption_public_key: arrayToB64(newXPublic),\n      files: fileUpdates,\n      kdf: serializeKDFSettings(kdfSettings),\n    };\n\n    this._setPasswordStatus(\n      \"info\",\n      translate(\"settingsPasswordStatusInfoUpdating\"),\n    );\n    if (this._passwordSubmitButton) {\n      this._passwordSubmitButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/passwordreset\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        let serverError = \"\";\n        try {\n          serverError = await response.text();\n        } catch {\n          // ignore parsing errors\n        }\n        console.error(\n          \"[SettingsAccountPanel] Password reset failed\",\n          response.status,\n          serverError,\n        );\n        const message =\n          serverError || translate(\"settingsPasswordStatusErrorRequest\");\n        throw new Error(message);\n      }\n\n      storage.setUser(newUserSecrets);\n      this._setPasswordStatus(\n        \"success\",\n        translate(\"settingsPasswordStatusSuccess\"),\n      );\n      if (currentInput) currentInput.value = \"\";\n      if (newInput) newInput.value = \"\";\n      if (confirmInput) confirmInput.value = \"\";\n    } catch (err) {\n      const fallback = translate(\"settingsPasswordStatusErrorGeneric\");\n      const message = err?.message || fallback;\n      this._setPasswordStatus(\"error\", message);\n    } finally {\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      if (this._passwordSubmitButton) {\n        this._passwordSubmitButton.disabled = false;\n      }\n    }\n  }\n}\n\ncustomElements.define(\"settings-account-panel\", SettingsAccountPanel);\n"],
  "mappings": "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",
  "names": []
}
