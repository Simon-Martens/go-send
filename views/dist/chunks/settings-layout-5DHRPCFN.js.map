{
  "version": 3,
  "sources": ["../../src/ui/settings-layout.mjs"],
  "sourcesContent": ["import storage from \"../storage.mjs\";\nimport UserSecrets, {\n  OWNER_SECRET_VERSION,\n  USER_ROLES,\n} from \"../userSecrets.mjs\";\nimport {\n  arrayToB64,\n  translate,\n  translateElement,\n  copyToClipboard,\n} from \"../utils.mjs\";\nimport {\n  DEFAULT_KDF_SETTINGS,\n  deriveKeyMaterial,\n  generateSalt,\n  normalizeKDFSettings,\n  serializeKDFSettings,\n  encodePublicKey,\n  encodeSalt,\n  getPublicKey,\n} from \"../crypto/credentials.mjs\";\nimport { x25519 } from \"@noble/curves/ed25519\";\nimport qrcode from \"../qrcode.mjs\";\n\nclass SettingsLayout extends HTMLElement {\n  constructor() {\n    super();\n    this._templateMounted = false;\n    this._categoryButtons = [];\n    this._panels = new Map();\n    this._activeCategory = \"account\";\n    this._boundCategoryClick = this._handleCategoryClick.bind(this);\n    this._boundPasswordSubmit = this._handlePasswordSubmit.bind(this);\n    this._boundProfileSubmit = this._handleProfileSubmit.bind(this);\n    this._boundClearSessions = this._handleClearSessions.bind(this);\n    this._boundDeactivateAccount = this._handleDeactivateAccount.bind(this);\n    this._boundKeyCopy = this._handleAccountKeyCopy.bind(this);\n    this._passwordSubmitButton = null;\n    this._passwordStatus = null;\n    this._passwordForm = null;\n    this._passwordStatusIcon = null;\n    this._passwordStatusText = null;\n    this._profileForm = null;\n    this._profileSubmitButton = null;\n    this._profileStatus = null;\n    this._profileStatusIcon = null;\n    this._profileStatusText = null;\n    this._accountStatus = null;\n    this._accountStatusIcon = null;\n    this._accountStatusText = null;\n    this._clearSessionsButton = null;\n    this._deactivateAccountButton = null;\n    this._accountKeyValue = null;\n    this._accountKeyCopyButton = null;\n    this._accountKeyStatus = null;\n    this._accountKeyStatusIcon = null;\n    this._accountKeyStatusText = null;\n\n    this._usersNavItem = null;\n    this._usersPanel = null;\n    this._usersHeader = null;\n    this._usersHeader = null;\n    this._isAdmin = false;\n    this._signupSections = new Map();\n    this._signupOverview = null;\n    this._signupDetail = null;\n    this._detailHeading = null;\n    this._detailDescription = null;\n    this._detailActiveCount = null;\n    this._detailStatusEl = null;\n    this._detailQrContainer = null;\n    this._detailLinkInput = null;\n    this._detailCopyButton = null;\n    this._detailCopyIcon = null;\n    this._detailBackButton = null;\n    this._detailFootnote = null;\n    this._activeDetailType = null;\n    this._activeDetailExpiresAt = null;\n    this._usersListSection = null;\n    this._usersListStatus = null;\n    this._usersListEmpty = null;\n    this._usersTableBody = null;\n    this._usersData = [];\n    this._usersLoading = false;\n    this._detailStatusIcon = null;\n    this._detailStatusText = null;\n    this._usersStatusIcon = null;\n    this._usersStatusText = null;\n    this._usersLoading = false;\n    this._boundGenerateClick = this._handleGenerateClick.bind(this);\n    this._boundRevokeClick = this._handleRevokeClick.bind(this);\n    this._boundDetailBack = this._handleDetailBack.bind(this);\n    this._boundDetailCopy = this._handleDetailCopy.bind(this);\n    this._boundDetailLinkFocus = this._handleDetailLinkFocus.bind(this);\n    this._boundUserAction = this._handleUserAction.bind(this);\n    this._uploadLinksNavItem = null;\n    this._uploadLinksPanel = null;\n    this._uploadLinksAdminSection = null;\n    this._uploadLinksPlaceholder = null;\n    this._uploadLinksForm = null;\n    this._uploadLinksLabelInput = null;\n    this._uploadLinksDescriptionInput = null;\n    this._uploadLinksSubmitButton = null;\n    this._uploadLinksStatusEl = null;\n    this._uploadLinksStatusIcon = null;\n    this._uploadLinksStatusText = null;\n    this._uploadLinksDetail = null;\n    this._uploadLinksDetailLabel = null;\n    this._uploadLinksDetailInput = null;\n    this._uploadLinksDetailCopyButton = null;\n    this._uploadLinksDetailCopyIcon = null;\n    this._uploadLinksDetailStatus = null;\n    this._uploadLinksTableBody = null;\n    this._uploadLinksEmpty = null;\n    this._uploadLinks = [];\n    this._uploadLinksLoading = false;\n    this._uploadLinksSubmitting = false;\n    this._uploadLinksCopyResetTimeout = null;\n    this._uploadLinksDetailLinkId = null;\n    this._boundUploadLinksSubmit = this._handleUploadLinksSubmit.bind(this);\n    this._boundUploadLinksAction = this._handleUploadLinksAction.bind(this);\n    this._boundUploadLinksCopy = this._handleUploadLinksCopy.bind(this);\n  }\n\n  connectedCallback() {\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"settings-layout\");\n      if (!template) {\n        console.error(\"Template #settings-layout not found\");\n        return;\n      }\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    this._isAdmin = this._checkIsAdmin();\n    this._cacheElements();\n    this._configureAccess();\n    translateElement(this);\n    this._attachListeners();\n    this._populateAccountForms();\n    if (!this._isAdmin && this._activeCategory === \"users\") {\n      this._activeCategory = \"account\";\n    }\n    this._selectCategory(this._activeCategory);\n\n    if (this._isAdmin) {\n      this._loadSignupOverview();\n      this._loadUploadLinks();\n    }\n  }\n\n  disconnectedCallback() {\n    this._detachListeners();\n    this._categoryButtons = [];\n    this._panels.clear();\n    this._signupSections.clear();\n    this._usersNavItem = null;\n    this._usersPanel = null;\n    this._isAdmin = false;\n    this._signupOverview = null;\n    this._signupDetail = null;\n    this._detailHeading = null;\n    this._detailDescription = null;\n    this._detailActiveCount = null;\n    this._detailStatusEl = null;\n    this._detailStatusIcon = null;\n    this._detailStatusText = null;\n    this._detailQrContainer = null;\n    this._detailLinkInput = null;\n    this._detailCopyButton = null;\n    this._detailCopyIcon = null;\n    this._detailBackButton = null;\n    this._detailFootnote = null;\n    this._activeDetailType = null;\n    this._activeDetailExpiresAt = null;\n    this._profileForm = null;\n    this._profileSubmitButton = null;\n    this._profileStatus = null;\n    this._profileStatusIcon = null;\n    this._profileStatusText = null;\n    this._passwordForm = null;\n    this._passwordSubmitButton = null;\n    this._passwordStatus = null;\n    this._passwordStatusIcon = null;\n    this._passwordStatusText = null;\n    this._accountStatus = null;\n    this._accountStatusIcon = null;\n    this._accountStatusText = null;\n    this._clearSessionsButton = null;\n    this._deactivateAccountButton = null;\n    this._accountKeyValue = null;\n    this._accountKeyCopyButton = null;\n    this._accountKeyStatus = null;\n    this._accountKeyStatusIcon = null;\n    this._accountKeyStatusText = null;\n    this._usersListSection = null;\n    this._usersListStatus = null;\n    this._usersStatusIcon = null;\n    this._usersStatusText = null;\n    this._usersListEmpty = null;\n    this._usersTableBody = null;\n    this._usersData = [];\n    this._usersLoading = false;\n    if (this._uploadLinksCopyResetTimeout) {\n      clearTimeout(this._uploadLinksCopyResetTimeout);\n    }\n    this._uploadLinksCopyResetTimeout = null;\n    this._uploadLinksNavItem = null;\n    this._uploadLinksPanel = null;\n    this._uploadLinksAdminSection = null;\n    this._uploadLinksPlaceholder = null;\n    this._uploadLinksForm = null;\n    this._uploadLinksLabelInput = null;\n    this._uploadLinksDescriptionInput = null;\n    this._uploadLinksSubmitButton = null;\n    this._uploadLinksStatusEl = null;\n    this._uploadLinksStatusIcon = null;\n    this._uploadLinksStatusText = null;\n    this._uploadLinksDetail = null;\n    this._uploadLinksDetailInput = null;\n    this._uploadLinksDetailCopyButton = null;\n    this._uploadLinksDetailCopyIcon = null;\n    this._uploadLinksDetailStatus = null;\n    this._uploadLinksTableBody = null;\n    this._uploadLinksEmpty = null;\n    this._uploadLinks = [];\n    this._uploadLinksLoading = false;\n    this._uploadLinksSubmitting = false;\n  }\n\n  _cacheElements() {\n    const categoryList = this.querySelector('[data-role=\"category-list\"]');\n    if (categoryList) {\n      this._categoryButtons = Array.from(\n        categoryList.querySelectorAll(\"[data-category]\"),\n      );\n    }\n\n    const panels = this.querySelectorAll(\"[data-panel]\");\n    this._panels = new Map();\n    panels.forEach((panel) => {\n      this._panels.set(panel.getAttribute(\"data-panel\"), panel);\n    });\n\n    this._usersNavItem = this.querySelector('[data-role=\"users-nav\"]');\n    this._uploadLinksNavItem = this.querySelector(\n      '[data-role=\"upload-links-nav\"]',\n    );\n    this._uploadLinksPanel = this._panels.get(\"upload-links\") || null;\n    if (this._uploadLinksPanel) {\n      this._uploadLinksAdminSection = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-admin\"]',\n      );\n      this._uploadLinksPlaceholder = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-placeholder\"]',\n      );\n      this._uploadLinksForm = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-form\"]',\n      );\n      this._uploadLinksLabelInput = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-label\"]',\n      );\n      this._uploadLinksDescriptionInput = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-description\"]',\n      );\n      this._uploadLinksSubmitButton = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-submit\"]',\n      );\n      this._uploadLinksStatusEl = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-status\"]',\n      );\n      this._uploadLinksStatusIcon = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-status-icon\"]',\n      );\n      this._uploadLinksStatusText = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-status-text\"]',\n      );\n      this._uploadLinksDetail = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-detail\"]',\n      );\n      this._uploadLinksDetailLabel = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-detail-label\"]',\n      );\n      this._uploadLinksDetailInput = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-detail-input\"]',\n      );\n      this._uploadLinksDetailCopyButton = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-copy\"]',\n      );\n      this._uploadLinksDetailCopyIcon = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-copy-icon\"]',\n      );\n      this._uploadLinksDetailStatus = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-detail-status\"]',\n      );\n      this._uploadLinksTableBody = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-table\"]',\n      );\n      this._uploadLinksEmpty = this._uploadLinksPanel.querySelector(\n        '[data-role=\"upload-links-empty\"]',\n      );\n    }\n    this._usersPanel = this._panels.get(\"users\") || null;\n    this._usersHeader = this.querySelector('[data-role=\"users-header\"]');\n\n    this._profileForm = this.querySelector('[data-role=\"profile-form\"]');\n    this._profileSubmitButton = this.querySelector(\n      '[data-role=\"profile-submit\"]',\n    );\n    this._profileStatus = this.querySelector('[data-role=\"profile-status\"]');\n    this._profileStatusIcon = this.querySelector(\n      '[data-role=\"profile-status-icon\"]',\n    );\n    this._profileStatusText = this.querySelector(\n      '[data-role=\"profile-status-text\"]',\n    );\n\n    this._passwordForm = this.querySelector('[data-role=\"password-form\"]');\n    this._passwordSubmitButton = this.querySelector(\n      '[data-role=\"password-submit\"]',\n    );\n    this._passwordStatus = this.querySelector('[data-role=\"password-status\"]');\n    this._passwordStatusIcon = this.querySelector(\n      '[data-role=\"password-status-icon\"]',\n    );\n    this._passwordStatusText = this.querySelector(\n      '[data-role=\"password-status-text\"]',\n    );\n\n    this._accountStatus = this.querySelector('[data-role=\"account-status\"]');\n    this._accountStatusIcon = this.querySelector(\n      '[data-role=\"account-status-icon\"]',\n    );\n    this._accountStatusText = this.querySelector(\n      '[data-role=\"account-status-text\"]',\n    );\n    this._clearSessionsButton = this.querySelector(\n      '[data-role=\"account-clear-sessions\"]',\n    );\n    this._deactivateAccountButton = this.querySelector(\n      '[data-role=\"account-deactivate\"]',\n    );\n    this._accountKeyValue = this.querySelector(\n      '[data-role=\"account-key-value\"]',\n    );\n    this._accountKeyCopyButton = this.querySelector(\n      '[data-role=\"account-key-copy\"]',\n    );\n    this._accountKeyStatus = this.querySelector(\n      '[data-role=\"account-key-status\"]',\n    );\n    this._accountKeyStatusIcon = this.querySelector(\n      '[data-role=\"account-key-status-icon\"]',\n    );\n    this._accountKeyStatusText = this.querySelector(\n      '[data-role=\"account-key-status-text\"]',\n    );\n\n    this._signupOverview = this.querySelector('[data-role=\"signup-overview\"]');\n    this._signupDetail = this.querySelector('[data-role=\"signup-detail\"]');\n    this._detailHeading = this.querySelector('[data-role=\"detail-heading\"]');\n    this._detailDescription = this.querySelector(\n      '[data-role=\"detail-description\"]',\n    );\n    this._detailActiveCount = this.querySelector(\n      '[data-role=\"detail-active-count\"]',\n    );\n    this._detailStatusEl = this.querySelector('[data-role=\"detail-status\"]');\n    this._detailStatusIcon = this.querySelector(\n      '[data-role=\"detail-status-icon\"]',\n    );\n    this._detailStatusText = this.querySelector(\n      '[data-role=\"detail-status-text\"]',\n    );\n    this._detailQrContainer = this.querySelector('[data-role=\"detail-qr\"]');\n    this._detailLinkInput = this.querySelector('[data-role=\"detail-link\"]');\n    this._detailCopyButton = this.querySelector('[data-role=\"detail-copy\"]');\n    this._detailCopyIcon = this.querySelector('[data-role=\"detail-copy-icon\"]');\n    this._detailBackButton = this.querySelector('[data-role=\"detail-back\"]');\n    this._detailFootnote = this.querySelector('[data-role=\"detail-footnote\"]');\n    this._usersListSection = this.querySelector('[data-role=\"users-list\"]');\n    this._usersListStatus =\n      this._usersListSection?.querySelector(\n        '[data-role=\"users-list-status\"]',\n      ) || null;\n    this._usersStatusIcon =\n      this._usersListSection?.querySelector(\n        '[data-role=\"users-list-status-icon\"]',\n      ) || null;\n    this._usersStatusText =\n      this._usersListSection?.querySelector(\n        '[data-role=\"users-list-status-text\"]',\n      ) || null;\n    this._usersListEmpty =\n      this._usersListSection?.querySelector('[data-role=\"users-list-empty\"]') ||\n      null;\n    this._usersTableBody =\n      this._usersListSection?.querySelector('[data-role=\"users-table-body\"]') ||\n      null;\n  }\n\n  _attachListeners() {\n    this._categoryButtons.forEach((button) => {\n      button.addEventListener(\"click\", this._boundCategoryClick);\n    });\n    if (this._profileSubmitButton) {\n      this._profileSubmitButton.addEventListener(\n        \"click\",\n        this._boundProfileSubmit,\n      );\n    }\n    if (this._passwordSubmitButton) {\n      this._passwordSubmitButton.addEventListener(\n        \"click\",\n        this._boundPasswordSubmit,\n      );\n    }\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.addEventListener(\n        \"click\",\n        this._boundClearSessions,\n      );\n    }\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.addEventListener(\n        \"click\",\n        this._boundDeactivateAccount,\n      );\n    }\n    if (this._accountKeyCopyButton) {\n      this._accountKeyCopyButton.addEventListener(\"click\", this._boundKeyCopy);\n    }\n    if (this._isAdmin) {\n      this._signupSections.forEach((section) => {\n        if (section.generateButton) {\n          section.generateButton.addEventListener(\n            \"click\",\n            this._boundGenerateClick,\n          );\n        }\n        if (section.revokeButton) {\n          section.revokeButton.addEventListener(\n            \"click\",\n            this._boundRevokeClick,\n          );\n        }\n      });\n      if (this._detailCopyButton) {\n        this._detailCopyButton.addEventListener(\"click\", this._boundDetailCopy);\n      }\n      if (this._detailLinkInput) {\n        this._detailLinkInput.addEventListener(\n          \"focus\",\n          this._boundDetailLinkFocus,\n        );\n        this._detailLinkInput.addEventListener(\n          \"click\",\n          this._boundDetailLinkFocus,\n        );\n      }\n      if (this._detailBackButton) {\n        this._detailBackButton.addEventListener(\"click\", this._boundDetailBack);\n      }\n      if (this._usersTableBody) {\n        this._usersTableBody.addEventListener(\"click\", this._boundUserAction);\n      }\n      if (this._uploadLinksForm) {\n        this._uploadLinksForm.addEventListener(\n          \"submit\",\n          this._boundUploadLinksSubmit,\n        );\n      }\n      if (this._uploadLinksTableBody) {\n        this._uploadLinksTableBody.addEventListener(\n          \"click\",\n          this._boundUploadLinksAction,\n        );\n      }\n      if (this._uploadLinksDetailCopyButton) {\n        this._uploadLinksDetailCopyButton.addEventListener(\n          \"click\",\n          this._boundUploadLinksCopy,\n        );\n      }\n    }\n  }\n\n  _detachListeners() {\n    this._categoryButtons.forEach((button) => {\n      button.removeEventListener(\"click\", this._boundCategoryClick);\n    });\n    if (this._profileSubmitButton) {\n      this._profileSubmitButton.removeEventListener(\n        \"click\",\n        this._boundProfileSubmit,\n      );\n    }\n    if (this._passwordSubmitButton) {\n      this._passwordSubmitButton.removeEventListener(\n        \"click\",\n        this._boundPasswordSubmit,\n      );\n    }\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.removeEventListener(\n        \"click\",\n        this._boundClearSessions,\n      );\n    }\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.removeEventListener(\n        \"click\",\n        this._boundDeactivateAccount,\n      );\n    }\n    if (this._accountKeyCopyButton) {\n      this._accountKeyCopyButton.removeEventListener(\n        \"click\",\n        this._boundKeyCopy,\n      );\n    }\n    if (this._isAdmin) {\n      this._signupSections.forEach((section) => {\n        if (section.generateButton) {\n          section.generateButton.removeEventListener(\n            \"click\",\n            this._boundGenerateClick,\n          );\n        }\n        if (section.revokeButton) {\n          section.revokeButton.removeEventListener(\n            \"click\",\n            this._boundRevokeClick,\n          );\n        }\n      });\n      if (this._detailCopyButton) {\n        this._detailCopyButton.removeEventListener(\n          \"click\",\n          this._boundDetailCopy,\n        );\n      }\n      if (this._detailLinkInput) {\n        this._detailLinkInput.removeEventListener(\n          \"focus\",\n          this._boundDetailLinkFocus,\n        );\n        this._detailLinkInput.removeEventListener(\n          \"click\",\n          this._boundDetailLinkFocus,\n        );\n      }\n      if (this._detailBackButton) {\n        this._detailBackButton.removeEventListener(\n          \"click\",\n          this._boundDetailBack,\n        );\n      }\n      if (this._usersTableBody) {\n        this._usersTableBody.removeEventListener(\n          \"click\",\n          this._boundUserAction,\n        );\n      }\n      if (this._uploadLinksForm) {\n        this._uploadLinksForm.removeEventListener(\n          \"submit\",\n          this._boundUploadLinksSubmit,\n        );\n      }\n      if (this._uploadLinksTableBody) {\n        this._uploadLinksTableBody.removeEventListener(\n          \"click\",\n          this._boundUploadLinksAction,\n        );\n      }\n      if (this._uploadLinksDetailCopyButton) {\n        this._uploadLinksDetailCopyButton.removeEventListener(\n          \"click\",\n          this._boundUploadLinksCopy,\n        );\n      }\n    }\n  }\n\n  _checkIsAdmin() {\n    const user = storage.user;\n    if (!user || user.role === undefined || user.role === null) {\n      return false;\n    }\n    const role = user.role;\n    if (typeof role === \"number\") {\n      return role === USER_ROLES.ADMIN;\n    }\n    if (typeof role === \"string\") {\n      const trimmed = role.trim();\n      if (!trimmed) {\n        return false;\n      }\n      const asNumber = Number.parseInt(trimmed, 10);\n      if (!Number.isNaN(asNumber)) {\n        return asNumber === USER_ROLES.ADMIN;\n      }\n      return trimmed.toLowerCase() === \"admin\";\n    }\n    return false;\n  }\n\n  _configureAccess() {\n    if (this._uploadLinksNavItem) {\n      this._uploadLinksNavItem.classList.toggle(\"hidden\", !this._isAdmin);\n    }\n    if (this._uploadLinksAdminSection) {\n      if (this._isAdmin) {\n        this._uploadLinksAdminSection.classList.remove(\"hidden\");\n        if (this._uploadLinksPlaceholder) {\n          this._uploadLinksPlaceholder.classList.add(\"hidden\");\n        }\n      } else {\n        this._uploadLinksAdminSection.classList.add(\"hidden\");\n        if (this._uploadLinksPlaceholder) {\n          this._uploadLinksPlaceholder.classList.remove(\"hidden\");\n        }\n      }\n    }\n    if (this._isAdmin) {\n      if (this._usersNavItem) {\n        this._usersNavItem.classList.remove(\"hidden\");\n      }\n      this._initSignupSections();\n      if (this._usersListSection) {\n        this._usersListSection.classList.remove(\"hidden\");\n      }\n      this._loadUsers();\n    } else {\n      if (this._usersNavItem) {\n        this._usersNavItem.classList.add(\"hidden\");\n      }\n      if (this._usersPanel) {\n        this._usersPanel.classList.add(\"hidden\");\n      }\n      this._signupSections.clear();\n      if (this._usersListSection) {\n        this._usersListSection.classList.add(\"hidden\");\n      }\n      this._usersData = [];\n      this._renderUsers();\n    }\n  }\n\n  _populateAccountForms() {\n    const userSecrets = storage.user;\n    if (!userSecrets) {\n      return;\n    }\n    const nameInput = this._profileForm?.querySelector(\n      \"#settings-account-name\",\n    );\n    if (nameInput) {\n      nameInput.value = userSecrets.name || \"\";\n    }\n    const emailInput = this._profileForm?.querySelector(\n      \"#settings-account-email\",\n    );\n    if (emailInput) {\n      emailInput.value = userSecrets.email || \"\";\n    }\n    this._updateAccountKeySummary(userSecrets);\n  }\n\n  _updateAccountKeySummary(userSecrets) {\n    if (!this._accountKeyValue) {\n      return;\n    }\n    const raw = userSecrets?.x25519PrivateKey || \"\";\n    if (!raw) {\n      this._accountKeyValue.textContent = translate(\n        \"settingsAccountKeyUnavailable\",\n      );\n      if (this._accountKeyCopyButton) {\n        this._accountKeyCopyButton.disabled = true;\n      }\n      this._setKeyStatus(\"\", \"\");\n      return;\n    }\n    const preview =\n      raw.length <= 20 ? raw : `${raw.slice(0, 12)}\u2026${raw.slice(-6)}`;\n    this._accountKeyValue.textContent = preview;\n    if (this._accountKeyCopyButton) {\n      this._accountKeyCopyButton.disabled = false;\n      this._accountKeyCopyButton.setAttribute(\"data-key-value\", raw);\n    }\n    this._setKeyStatus(\"\", \"\");\n  }\n\n  _initSignupSections() {\n    this._signupSections.clear();\n    const cards = this.querySelectorAll('[data-role=\"signup-card\"]');\n    cards.forEach((card) => {\n      const type = card.getAttribute(\"data-token-type\");\n      if (!type) {\n        return;\n      }\n      const normalized = type.toLowerCase();\n      const section = {\n        container: card,\n        countEl: card.querySelector('[data-role=\"active-count\"]'),\n        generateButton: card.querySelector('[data-role=\"generate\"]'),\n        revokeButton: card.querySelector('[data-role=\"revoke\"]'),\n        statusEl: card.querySelector('[data-role=\"status\"]'),\n      };\n      this._signupSections.set(normalized, section);\n      this._setSectionStatus(normalized, \"\");\n    });\n  }\n\n  _getSignupSection(type) {\n    if (!type) {\n      return null;\n    }\n    return this._signupSections.get(type.toLowerCase()) || null;\n  }\n\n  _setSignupCount(type, count) {\n    const section = this._getSignupSection(type);\n    if (!section || !section.countEl) {\n      return;\n    }\n    const value = Number.isFinite(count) ? count : 0;\n    section.countEl.textContent = String(value);\n    if (this._activeDetailType === type && this._detailActiveCount) {\n      this._detailActiveCount.textContent = String(value);\n    }\n  }\n\n  _setSectionStatus(type, message, variant = \"info\") {\n    const section = this._getSignupSection(type);\n    if (!section || !section.statusEl) {\n      return;\n    }\n    const statusEl = section.statusEl;\n    const text = message || \"\";\n    statusEl.textContent = text;\n    statusEl.classList.remove(\n      \"text-grey-60\",\n      \"dark:text-grey-40\",\n      \"text-green-600\",\n      \"dark:text-green-400\",\n      \"text-red-600\",\n      \"dark:text-red-400\",\n    );\n\n    if (!text) {\n      statusEl.classList.add(\"text-grey-60\", \"dark:text-grey-40\");\n      return;\n    }\n\n    if (variant === \"success\") {\n      statusEl.classList.add(\"text-green-600\", \"dark:text-green-400\");\n    } else if (variant === \"error\") {\n      statusEl.classList.add(\"text-red-600\", \"dark:text-red-400\");\n    } else {\n      statusEl.classList.add(\"text-grey-60\", \"dark:text-grey-40\");\n    }\n  }\n\n  _setDetailStatus(message, variant = \"info\") {\n    if (!this._detailStatusEl) {\n      return;\n    }\n    const baseClass = \"text-sm flex items-center gap-2 min-h-[1.25rem]\";\n    this._detailStatusEl.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n\n    if (this._detailStatusText) {\n      this._detailStatusText.textContent = message || \"\";\n    } else {\n      this._detailStatusEl.textContent = message || \"\";\n    }\n\n    if (this._detailStatusIcon) {\n      this._detailStatusIcon.className = \"hidden\";\n    }\n\n    if (!message) {\n      return;\n    }\n\n    let iconClass = \"ri-information-line text-grey-60 dark:text-grey-40\";\n    if (variant === \"success\") {\n      this._detailStatusEl.className = `${baseClass} text-green-600 dark:text-green-400`;\n      iconClass = \"ri-check-line text-green-600 dark:text-green-400\";\n    } else if (variant === \"error\") {\n      this._detailStatusEl.className = `${baseClass} text-red-600 dark:text-red-400`;\n      iconClass = \"ri-error-warning-line text-red-600 dark:text-red-400\";\n    }\n\n    if (this._detailStatusIcon) {\n      this._detailStatusIcon.className = iconClass;\n    }\n  }\n\n  _setSectionLoading(section, isLoading) {\n    if (!section) {\n      return;\n    }\n    const disabled = Boolean(isLoading);\n    if (section.generateButton) {\n      section.generateButton.disabled = disabled;\n      section.generateButton.classList.toggle(\"opacity-60\", disabled);\n    }\n    if (section.revokeButton) {\n      section.revokeButton.disabled = disabled;\n      section.revokeButton.classList.toggle(\"opacity-60\", disabled);\n    }\n  }\n\n  _showSignupDetail(type, link, expiresAtSeconds) {\n    if (!this._signupDetail || !this._signupOverview) {\n      return;\n    }\n\n    this._activeDetailType = type;\n    this._activeDetailExpiresAt = expiresAtSeconds || null;\n\n    const headingKey =\n      type === \"admin\"\n        ? \"settingsUsersDetailHeadingAdmin\"\n        : \"settingsUsersDetailHeadingUser\";\n    if (this._detailHeading) {\n      this._detailHeading.textContent = translate(headingKey);\n    }\n\n    const expiresText = this._formatExpiry(expiresAtSeconds);\n    if (this._detailDescription) {\n      this._detailDescription.textContent = translate(\n        \"settingsUsersDetailDescription\",\n        {\n          date: expiresText,\n        },\n      );\n    }\n\n    if (this._detailActiveCount) {\n      const section = this._getSignupSection(type);\n      const count = section?.countEl\n        ? Number(section.countEl.textContent || 0)\n        : 0;\n      this._detailActiveCount.textContent = String(count);\n    }\n\n    if (this._detailFootnote) {\n      this._detailFootnote.textContent = translate(\n        \"settingsUsersDetailFootnote\",\n      );\n    }\n\n    this._setDetailStatus(\"\");\n\n    if (this._detailLinkInput) {\n      this._detailLinkInput.value = link || \"\";\n      requestAnimationFrame(() => {\n        this._detailLinkInput.select();\n        this._detailLinkInput.focus();\n      });\n    }\n\n    if (this._detailQrContainer) {\n      this._renderQRCode(this._detailQrContainer, link);\n    }\n\n    if (this._detailCopyIcon) {\n      const original =\n        this._detailCopyIcon.dataset.originalClass ||\n        this._detailCopyIcon.className;\n      this._detailCopyIcon.dataset.originalClass = original;\n      this._detailCopyIcon.className = original;\n    }\n\n    this._signupOverview.classList.add(\"hidden\");\n    this._signupDetail.classList.remove(\"hidden\");\n    if (this._usersHeader) {\n      this._usersHeader.classList.add(\"hidden\");\n    }\n    if (this._usersListSection) {\n      this._usersListSection.classList.add(\"hidden\");\n    }\n  }\n\n  _clearSignupDetail() {\n    if (!this._signupDetail || !this._signupOverview) {\n      return;\n    }\n    this._activeDetailType = null;\n    this._activeDetailExpiresAt = null;\n    if (this._detailLinkInput) {\n      this._detailLinkInput.value = \"\";\n    }\n    if (this._detailQrContainer) {\n      this._detailQrContainer.innerHTML = \"\";\n    }\n    if (this._detailCopyIcon && this._detailCopyIcon.dataset.originalClass) {\n      this._detailCopyIcon.className =\n        this._detailCopyIcon.dataset.originalClass;\n    }\n    this._setDetailStatus(\"\");\n    this._signupDetail.classList.add(\"hidden\");\n    this._signupOverview.classList.remove(\"hidden\");\n    if (this._usersHeader) {\n      this._usersHeader.classList.remove(\"hidden\");\n    }\n    if (this._usersListSection) {\n      this._usersListSection.classList.remove(\"hidden\");\n    }\n  }\n\n  _renderQRCode(container, value) {\n    if (!container) {\n      return;\n    }\n    if (!value) {\n      container.innerHTML = \"\";\n      return;\n    }\n    try {\n      const qr = qrcode(0, \"L\");\n      qr.addData(value);\n      qr.make();\n      container.innerHTML = qr.createSvgTag({\n        scalable: true,\n        cellSize: 4,\n        margin: 4,\n      });\n      const svgEl = container.querySelector(\"svg\");\n      if (svgEl) {\n        svgEl.style.maxWidth = \"200px\";\n        svgEl.style.height = \"auto\";\n      }\n    } catch (error) {\n      console.error(\"[SettingsLayout] QR generation failed\", error);\n      container.innerHTML = `<p class=\"text-sm text-grey-60 dark:text-grey-40 text-center\">${translate(\"settingsUsersQrError\")}</p>`;\n    }\n  }\n\n  _setUsersStatus(message, variant = \"info\") {\n    if (!this._usersListStatus) {\n      return;\n    }\n    const baseClass = \"text-sm flex items-center gap-2 min-h-[1.25rem]\";\n    this._usersListStatus.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n\n    if (this._usersStatusText) {\n      this._usersStatusText.textContent = message || \"\";\n    } else {\n      this._usersListStatus.textContent = message || \"\";\n    }\n\n    if (this._usersStatusIcon) {\n      this._usersStatusIcon.className = \"hidden\";\n    }\n\n    if (!message) {\n      return;\n    }\n\n    let iconClass = \"ri-information-line text-grey-60 dark:text-grey-40\";\n    if (variant === \"success\") {\n      this._usersListStatus.className = `${baseClass} text-green-600 dark:text-green-400`;\n      iconClass = \"ri-check-line text-green-600 dark:text-green-400\";\n    } else if (variant === \"error\") {\n      this._usersListStatus.className = `${baseClass} text-red-600 dark:text-red-400`;\n      iconClass = \"ri-error-warning-line text-red-600 dark:text-red-400\";\n    }\n\n    if (this._usersStatusIcon) {\n      this._usersStatusIcon.className = iconClass;\n    }\n  }\n\n  async _handleUploadLinksSubmit(event) {\n    event.preventDefault();\n    if (!this._isAdmin || this._uploadLinksSubmitting) {\n      return;\n    }\n\n    const label = (this._uploadLinksLabelInput?.value || \"\").trim();\n    const description = (this._uploadLinksDescriptionInput?.value || \"\").trim();\n\n    if (!label) {\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusLabelRequired\"),\n        \"error\",\n      );\n      return;\n    }\n\n    this._uploadLinksSubmitting = true;\n    if (this._uploadLinksSubmitButton) {\n      this._uploadLinksSubmitButton.disabled = true;\n      this._uploadLinksSubmitButton.classList.add(\"opacity-60\");\n    }\n    this._setUploadLinksStatus(\n      translate(\"settingsUploadLinksStatusCreating\"),\n      \"info\",\n    );\n\n    try {\n      const response = await fetch(\"/api/admin/upload-links\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          label,\n          description,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`upload_link_create_failed_${response.status}`);\n      }\n\n      const payload = await response.json();\n      const linkURL = payload?.link || \"\";\n\n      if (this._uploadLinksLabelInput) {\n        this._uploadLinksLabelInput.value = \"\";\n      }\n      if (this._uploadLinksDescriptionInput) {\n        this._uploadLinksDescriptionInput.value = \"\";\n      }\n\n      const normalized = {\n        id: Number.parseInt(payload?.id, 10) || payload?.id || Date.now(),\n        label: payload?.label || label,\n        description: payload?.description || description,\n        preview: payload?.preview || \"\",\n        active: payload?.active !== undefined ? Boolean(payload.active) : true,\n        created:\n          Number.parseInt(payload?.created, 10) ||\n          Math.floor(Date.now() / 1000),\n        created_by:\n          Number.parseInt(payload?.created_by, 10) ||\n          payload?.created_by ||\n          null,\n      };\n\n      this._uploadLinks = [\n        normalized,\n        ...this._uploadLinks.filter((item) => item.id !== normalized.id),\n      ].sort((a, b) => (b.created || 0) - (a.created || 0));\n      this._renderUploadLinks();\n      this._showUploadLinkDetail(normalized, linkURL);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusCreated\"),\n        \"success\",\n      );\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to create upload link\", error);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusError\"),\n        \"error\",\n      );\n    } finally {\n      this._uploadLinksSubmitting = false;\n      if (this._uploadLinksSubmitButton) {\n        this._uploadLinksSubmitButton.disabled = false;\n        this._uploadLinksSubmitButton.classList.remove(\"opacity-60\");\n      }\n    }\n  }\n\n  _handleUploadLinksAction(event) {\n    if (!this._isAdmin) {\n      return;\n    }\n    const button = event.target.closest(\"button[data-action]\");\n    if (!button) {\n      return;\n    }\n    const action = button.dataset.action;\n    const tokenId = Number.parseInt(button.dataset.tokenId, 10);\n    if (!Number.isFinite(tokenId) || tokenId <= 0) {\n      return;\n    }\n\n    if (action === \"revoke\") {\n      this._revokeUploadLink(tokenId, button);\n    }\n  }\n\n  async _revokeUploadLink(tokenId, button) {\n    if (!this._isAdmin) {\n      return;\n    }\n    if (button) {\n      button.disabled = true;\n      button.classList.add(\"opacity-60\");\n    }\n    this._setUploadLinksStatus(\n      translate(\"settingsUploadLinksStatusRevoking\"),\n      \"info\",\n    );\n\n    try {\n      const response = await fetch(`/api/admin/upload-links/${tokenId}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        throw new Error(`upload_link_revoke_failed_${response.status}`);\n      }\n\n      this._uploadLinks = this._uploadLinks.map((item) =>\n        item.id === tokenId ? { ...item, active: false } : item,\n      );\n      this._renderUploadLinks();\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusRevoked\"),\n        \"success\",\n      );\n      if (this._uploadLinksDetailLinkId === tokenId) {\n        this._hideUploadLinkDetail();\n      }\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to revoke upload link\", error);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusRevokeError\"),\n        \"error\",\n      );\n    } finally {\n      if (button && document.body.contains(button)) {\n        button.disabled = false;\n        button.classList.remove(\"opacity-60\");\n      }\n    }\n  }\n\n  _showUploadLinkDetail(link, linkURL) {\n    if (!this._uploadLinksDetail || !this._uploadLinksDetailInput) {\n      return;\n    }\n    if (this._uploadLinksCopyResetTimeout) {\n      clearTimeout(this._uploadLinksCopyResetTimeout);\n      this._uploadLinksCopyResetTimeout = null;\n    }\n\n    const label = link?.label || translate(\"settingsUploadLinksLabelFallback\");\n    if (this._uploadLinksDetailLabel) {\n      this._uploadLinksDetailLabel.textContent = label;\n    }\n\n    this._uploadLinksDetailInput.value = linkURL || \"\";\n    this._uploadLinksDetailLinkId = link?.id ?? null;\n    this._uploadLinksDetail.classList.remove(\"hidden\");\n    if (this._uploadLinksDetailCopyIcon) {\n      const original =\n        this._uploadLinksDetailCopyIcon.dataset.originalClass ||\n        this._uploadLinksDetailCopyIcon.className;\n      this._uploadLinksDetailCopyIcon.dataset.originalClass = original;\n      this._uploadLinksDetailCopyIcon.className = original;\n    }\n    this._setUploadLinkDetailStatus(\n      linkURL ? translate(\"settingsUploadLinksDetailHint\") : \"\",\n      \"info\",\n    );\n  }\n\n  _hideUploadLinkDetail() {\n    if (!this._uploadLinksDetail) {\n      return;\n    }\n    this._uploadLinksDetail.classList.add(\"hidden\");\n    this._uploadLinksDetailLinkId = null;\n    if (this._uploadLinksDetailInput) {\n      this._uploadLinksDetailInput.value = \"\";\n    }\n    if (this._uploadLinksDetailLabel) {\n      this._uploadLinksDetailLabel.textContent = \"\u2014\";\n    }\n    this._setUploadLinkDetailStatus(\"\", \"info\");\n    if (\n      this._uploadLinksDetailCopyIcon &&\n      this._uploadLinksDetailCopyIcon.dataset.originalClass\n    ) {\n      this._uploadLinksDetailCopyIcon.className =\n        this._uploadLinksDetailCopyIcon.dataset.originalClass;\n    }\n  }\n\n  _setUploadLinkDetailStatus(message, variant = \"info\") {\n    if (!this._uploadLinksDetailStatus) {\n      return;\n    }\n    const baseClass = \"text-sm min-h-[1.25rem]\";\n    this._uploadLinksDetailStatus.className = `${baseClass} text-grey-60 dark:text-grey-30`;\n    this._uploadLinksDetailStatus.textContent = message || \"\";\n\n    if (!message) {\n      return;\n    }\n\n    if (variant === \"success\") {\n      this._uploadLinksDetailStatus.className = `${baseClass} text-green-600 dark:text-green-400`;\n    } else if (variant === \"error\") {\n      this._uploadLinksDetailStatus.className = `${baseClass} text-red-600 dark:text-red-400`;\n    }\n  }\n\n  _handleUploadLinksCopy(event) {\n    event.preventDefault();\n    if (!this._uploadLinksDetailInput) {\n      return;\n    }\n    const value = this._uploadLinksDetailInput.value || \"\";\n    if (!value) {\n      this._setUploadLinkDetailStatus(\n        translate(\"settingsUploadLinksCopyError\"),\n        \"error\",\n      );\n      return;\n    }\n\n    try {\n      const ok = copyToClipboard(value);\n      if (!ok) {\n        throw new Error(\"clipboard_failed\");\n      }\n      this._setUploadLinkDetailStatus(\n        translate(\"settingsUploadLinksCopySuccess\"),\n        \"success\",\n      );\n      if (this._uploadLinksDetailCopyIcon) {\n        const original =\n          this._uploadLinksDetailCopyIcon.dataset.originalClass ||\n          this._uploadLinksDetailCopyIcon.className;\n        this._uploadLinksDetailCopyIcon.dataset.originalClass = original;\n        this._uploadLinksDetailCopyIcon.className =\n          \"ri-check-line text-base leading-4 text-green-600 dark:text-green-400\";\n        if (this._uploadLinksCopyResetTimeout) {\n          clearTimeout(this._uploadLinksCopyResetTimeout);\n        }\n        this._uploadLinksCopyResetTimeout = setTimeout(() => {\n          if (\n            this._uploadLinksDetailCopyIcon &&\n            this._uploadLinksDetailCopyIcon.dataset.originalClass\n          ) {\n            this._uploadLinksDetailCopyIcon.className =\n              this._uploadLinksDetailCopyIcon.dataset.originalClass;\n          }\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to copy upload link\", error);\n      this._setUploadLinkDetailStatus(\n        translate(\"settingsUploadLinksCopyError\"),\n        \"error\",\n      );\n      if (\n        this._uploadLinksDetailCopyIcon &&\n        this._uploadLinksDetailCopyIcon.dataset.originalClass\n      ) {\n        this._uploadLinksDetailCopyIcon.className =\n          this._uploadLinksDetailCopyIcon.dataset.originalClass;\n      }\n    }\n  }\n\n  _setUploadLinksStatus(message, variant = \"info\") {\n    if (!this._uploadLinksStatusEl) {\n      return;\n    }\n    const baseClass = \"text-sm min-h-[1.5rem] flex items-center gap-2\";\n    this._uploadLinksStatusEl.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n\n    if (this._uploadLinksStatusText) {\n      this._uploadLinksStatusText.textContent = message || \"\";\n    } else {\n      this._uploadLinksStatusEl.textContent = message || \"\";\n    }\n\n    if (this._uploadLinksStatusIcon) {\n      this._uploadLinksStatusIcon.className = \"hidden\";\n    }\n\n    if (!message) {\n      return;\n    }\n\n    let iconClass = \"ri-information-line text-grey-60 dark:text-grey-40\";\n    if (variant === \"success\") {\n      this._uploadLinksStatusEl.className = `${baseClass} text-green-600 dark:text-green-400`;\n      iconClass = \"ri-check-line text-green-600 dark:text-green-400\";\n    } else if (variant === \"error\") {\n      this._uploadLinksStatusEl.className = `${baseClass} text-red-600 dark:text-red-400`;\n      iconClass = \"ri-error-warning-line text-red-600 dark:text-red-400\";\n    }\n\n    if (this._uploadLinksStatusIcon) {\n      this._uploadLinksStatusIcon.className = iconClass;\n    }\n  }\n\n  async _loadUploadLinks() {\n    if (!this._isAdmin || this._uploadLinksLoading) {\n      return;\n    }\n    this._uploadLinksLoading = true;\n    this._setUploadLinksStatus(\n      translate(\"settingsUploadLinksStatusLoading\"),\n      \"info\",\n    );\n\n    try {\n      const response = await fetch(\"/api/admin/upload-links\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`upload_link_list_failed_${response.status}`);\n      }\n\n      const payload = await response.json();\n      const list = Array.isArray(payload?.links) ? payload.links : [];\n      this._uploadLinks = list\n        .map((item) => ({\n          id: Number.parseInt(item.id, 10) || item.id,\n          label: item.label || \"\",\n          description: item.description || \"\",\n          preview: item.preview || \"\",\n          active: Boolean(item.active),\n          created: Number.parseInt(item.created, 10) || 0,\n          created_by:\n            Number.parseInt(item.created_by, 10) || item.created_by || null,\n        }))\n        .sort((a, b) => (b.created || 0) - (a.created || 0));\n      this._renderUploadLinks();\n      this._setUploadLinksStatus(\"\", \"info\");\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to load upload links\", error);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusLoadingError\"),\n        \"error\",\n      );\n    } finally {\n      this._uploadLinksLoading = false;\n    }\n  }\n\n  _renderUploadLinks() {\n    if (!this._uploadLinksTableBody) {\n      return;\n    }\n\n    if (!Array.isArray(this._uploadLinks) || this._uploadLinks.length === 0) {\n      this._uploadLinksTableBody.innerHTML = \"\";\n      if (this._uploadLinksEmpty) {\n        this._uploadLinksEmpty.classList.remove(\"hidden\");\n      }\n      return;\n    }\n\n    if (this._uploadLinksEmpty) {\n      this._uploadLinksEmpty.classList.add(\"hidden\");\n    }\n\n    this._uploadLinksTableBody.innerHTML = \"\";\n    this._uploadLinks.forEach((link) => {\n      const row = this._createUploadLinkRow(link);\n      if (row) {\n        this._uploadLinksTableBody.appendChild(row);\n      }\n    });\n\n    if (\n      this._uploadLinksDetailLinkId !== null &&\n      !this._uploadLinks.some(\n        (link) => link.id === this._uploadLinksDetailLinkId && link.active,\n      )\n    ) {\n      this._hideUploadLinkDetail();\n    }\n  }\n\n  _createUploadLinkRow(link) {\n    const template = document.getElementById(\"settings-upload-link-item\");\n    if (!template) {\n      console.error(\"Template #settings-upload-link-item not found\");\n      return null;\n    }\n\n    const fragment = template.content.cloneNode(true);\n    const row = fragment.querySelector('[data-role=\"upload-link-row\"]');\n    if (!row) {\n      return null;\n    }\n\n    row.dataset.tokenId = String(link.id);\n\n    // Label\n    const labelEl = row.querySelector('[data-role=\"label\"]');\n    if (labelEl) {\n      labelEl.textContent =\n        link.label || translate(\"settingsUploadLinksLabelFallback\");\n    }\n\n    // Description (optional)\n    const descriptionEl = row.querySelector('[data-role=\"description\"]');\n    if (descriptionEl) {\n      const description = (link.description || \"\").trim();\n      if (description) {\n        descriptionEl.textContent = description;\n        descriptionEl.classList.remove(\"hidden\");\n      } else {\n        descriptionEl.classList.add(\"hidden\");\n      }\n    }\n\n    // Preview (use template elements instead of createElement)\n    const previewBadge = row.querySelector('[data-role=\"preview-badge\"]');\n    const previewNone = row.querySelector('[data-role=\"preview-none\"]');\n    if (previewBadge && previewNone) {\n      const previewValue = (link.preview || \"\").trim();\n      if (previewValue) {\n        previewBadge.textContent = previewValue;\n        previewBadge.classList.remove(\"hidden\");\n        previewNone.classList.add(\"hidden\");\n      } else {\n        previewBadge.classList.add(\"hidden\");\n        previewNone.classList.remove(\"hidden\");\n      }\n    }\n\n    // Status (active vs revoked)\n    const statusWrapper = row.querySelector('[data-role=\"status\"]');\n    const statusIcon = statusWrapper?.querySelector('[data-role=\"status-icon\"]');\n    const statusText = statusWrapper?.querySelector('[data-role=\"status-text\"]');\n    if (statusWrapper && statusIcon && statusText) {\n      const baseClass = \"inline-flex items-center gap-2 text-xs font-medium\";\n      if (link.active) {\n        statusWrapper.className = `${baseClass} text-green-600 dark:text-green-400`;\n        statusIcon.className = \"ri-shield-check-line text-sm leading-4\";\n        statusText.textContent = translate(\"settingsUploadLinksStatusActive\");\n      } else {\n        statusWrapper.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n        statusIcon.className = \"ri-forbid-2-line text-sm leading-4\";\n        statusText.textContent = translate(\"settingsUploadLinksStatusRevokedLabel\");\n      }\n    }\n\n    // Created date\n    const createdEl = row.querySelector('[data-role=\"created\"]');\n    if (createdEl) {\n      createdEl.textContent = this._formatUploadLinkTimestamp(link.created);\n    }\n\n    // Revoke button / Revoked indicator\n    const revokeButton = row.querySelector('[data-role=\"revoke-button\"]');\n    const revokedBadge = row.querySelector('[data-role=\"revoked-indicator\"]');\n    if (revokeButton && revokedBadge) {\n      revokeButton.dataset.action = \"revoke\";\n      revokeButton.dataset.tokenId = String(link.id);\n\n      // Show only the appropriate element based on active status\n      if (link.active) {\n        // Active link: show revoke button\n        revokeButton.classList.remove(\"hidden\");\n        // Keep badge hidden\n      } else {\n        // Revoked link: hide button, show badge\n        revokeButton.remove();\n        revokedBadge.classList.remove(\"hidden\");\n      }\n    }\n\n    return row;\n  }\n\n  _formatUploadLinkTimestamp(timestamp) {\n    const value = Number(timestamp);\n    if (!Number.isFinite(value) || value <= 0) {\n      return translate(\"settingsUploadLinksCreatedUnknown\");\n    }\n    try {\n      return new Date(value * 1000).toLocaleString(undefined, {\n        dateStyle: \"medium\",\n        timeStyle: \"short\",\n      });\n    } catch (err) {\n      return translate(\"settingsUploadLinksCreatedUnknown\");\n    }\n  }\n\n  async _loadUsers() {\n    if (!this._isAdmin || !this._usersListSection) {\n      return;\n    }\n    if (this._usersLoading) {\n      return;\n    }\n\n    this._usersLoading = true;\n    this._setUsersStatus(translate(\"settingsUsersListLoading\"), \"info\");\n\n    try {\n      const response = await fetch(\"/api/admin/users\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`users_list_failed_${response.status}`);\n      }\n\n      const payload = await response.json();\n      const list = Array.isArray(payload?.users) ? payload.users : [];\n      this._usersData = list.map((user) => ({\n        id: Number.parseInt(user.id, 10) || user.id,\n        name: user.name || \"\",\n        email: user.email || \"\",\n        role: user.role || \"\",\n        active: Boolean(user.active),\n        public_key: user.public_key || \"\",\n        encryption_public_key: user.encryption_public_key || \"\",\n        active_sessions: Number.isFinite(user.active_sessions)\n          ? user.active_sessions\n          : Number.parseInt(user.active_sessions ?? 0, 10) || 0,\n        is_current_user: Boolean(user.is_current_user),\n        created: user.created || 0,\n        updated: user.updated || 0,\n      }));\n\n      this._renderUsers();\n      this._setUsersStatus(\"\", \"info\");\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to load users\", error);\n      this._setUsersStatus(translate(\"settingsUsersListError\"), \"error\");\n    } finally {\n      this._usersLoading = false;\n    }\n  }\n\n  _renderUsers() {\n    if (!this._usersTableBody) {\n      return;\n    }\n\n    if (!Array.isArray(this._usersData) || !this._usersData.length) {\n      this._usersTableBody.innerHTML = \"\";\n      if (this._usersListEmpty) {\n        this._usersListEmpty.classList.remove(\"hidden\");\n      }\n      return;\n    }\n\n    if (this._usersListEmpty) {\n      this._usersListEmpty.classList.add(\"hidden\");\n    }\n\n    // Clear existing rows\n    this._usersTableBody.innerHTML = \"\";\n\n    // Create and append rows from template\n    for (const user of this._usersData) {\n      const row = this._createUserRow(user);\n      if (row) {\n        this._usersTableBody.appendChild(row);\n      }\n    }\n  }\n\n  _createUserRow(user) {\n    const template = document.getElementById(\"settings-user-item\");\n    if (!template) {\n      console.error(\"Template #settings-user-item not found\");\n      return null;\n    }\n\n    const fragment = template.content.cloneNode(true);\n    const row = fragment.querySelector('[data-role=\"user-row\"]');\n    if (!row) {\n      return null;\n    }\n\n    row.dataset.userId = String(user.id);\n\n    // Name\n    const nameEl = row.querySelector('[data-role=\"user-name\"]');\n    if (nameEl) {\n      nameEl.textContent = this._getDisplayName(user);\n    }\n\n    // \"You\" badge (shown for current user only)\n    const youBadge = row.querySelector('[data-role=\"you-badge\"]');\n    if (youBadge) {\n      if (user.is_current_user) {\n        youBadge.classList.remove(\"hidden\");\n      } else {\n        youBadge.remove();\n      }\n    }\n\n    // Meta (role & status)\n    const roleLabel = row.querySelector('[data-role=\"role-label\"]');\n    const statusLabel = row.querySelector('[data-role=\"status-label\"]');\n    const metaSeparator = row.querySelector('[data-role=\"meta-separator\"]');\n\n    const roleLabelText = this._formatUserRole(user.role);\n    const statusLabelText = this._formatUserStatus(user.active);\n\n    if (roleLabel && roleLabelText) {\n      roleLabel.textContent = roleLabelText;\n    }\n\n    if (statusLabel && statusLabelText) {\n      statusLabel.textContent = statusLabelText;\n      const statusClass = user.active\n        ? \"text-green-600 dark:text-green-400\"\n        : \"text-red-600 dark:text-red-400\";\n      statusLabel.className = statusClass;\n\n      if (metaSeparator) {\n        metaSeparator.classList.remove(\"hidden\");\n      }\n    }\n\n    // Email\n    const emailEl = row.querySelector('[data-role=\"user-email\"]');\n    if (emailEl) {\n      const emailText = user.email?.trim() || \"\";\n      emailEl.textContent = emailText || \"\u2014\";\n    }\n\n    // Public Keys\n    const signingKeyEl = row.querySelector('[data-role=\"signing-key\"]');\n    const signingKeyTitle = (user.public_key || \"\").trim();\n    const signingKey = this._formatKey(signingKeyTitle);\n    if (signingKeyEl) {\n      signingKeyEl.textContent = signingKey;\n      if (signingKeyTitle) {\n        signingKeyEl.title = signingKeyTitle;\n      }\n    }\n\n    const encryptionKeyEl = row.querySelector('[data-role=\"encryption-key\"]');\n    const encryptionKeyTitle = (user.encryption_public_key || \"\").trim();\n    const encryptionKey = this._formatKey(encryptionKeyTitle);\n    if (encryptionKeyEl) {\n      encryptionKeyEl.textContent = encryptionKey;\n      if (encryptionKeyTitle) {\n        encryptionKeyEl.title = encryptionKeyTitle;\n      }\n    }\n\n    // Copy buttons for keys\n    const copySigningBtn = row.querySelector('[data-role=\"copy-signing-key\"]');\n    if (copySigningBtn) {\n      if (signingKeyTitle) {\n        copySigningBtn.dataset.userId = String(user.id);\n        copySigningBtn.dataset.keyValue = signingKeyTitle;\n        const copyActionLabel = translate(\"copyLinkButton\");\n        const signingCopyLabel = `${copyActionLabel} \u2013 ${translate(\"settingsUsersKeySigning\")}`;\n        copySigningBtn.setAttribute(\"aria-label\", signingCopyLabel);\n        copySigningBtn.title = signingCopyLabel;\n        const srLabel = copySigningBtn.querySelector(\".sr-only\");\n        if (srLabel) {\n          srLabel.textContent = signingCopyLabel;\n        }\n        copySigningBtn.classList.remove(\"hidden\");\n      }\n    }\n\n    const copyEncryptionBtn = row.querySelector('[data-role=\"copy-encryption-key\"]');\n    if (copyEncryptionBtn) {\n      if (encryptionKeyTitle) {\n        copyEncryptionBtn.dataset.userId = String(user.id);\n        copyEncryptionBtn.dataset.keyValue = encryptionKeyTitle;\n        const copyActionLabel = translate(\"copyLinkButton\");\n        const encryptionCopyLabel = `${copyActionLabel} \u2013 ${translate(\"settingsUsersKeyEncryption\")}`;\n        copyEncryptionBtn.setAttribute(\"aria-label\", encryptionCopyLabel);\n        copyEncryptionBtn.title = encryptionCopyLabel;\n        const srLabel = copyEncryptionBtn.querySelector(\".sr-only\");\n        if (srLabel) {\n          srLabel.textContent = encryptionCopyLabel;\n        }\n        copyEncryptionBtn.classList.remove(\"hidden\");\n      }\n    }\n\n    // Sessions count\n    const sessionsEl = row.querySelector('[data-role=\"sessions-count\"]');\n    if (sessionsEl) {\n      sessionsEl.textContent = Number.isFinite(user.active_sessions) ? String(user.active_sessions) : \"0\";\n    }\n\n    // Action buttons\n    const toggleButton = row.querySelector('[data-role=\"toggle-button\"]');\n    if (toggleButton) {\n      const toggleAction = user.active ? \"deactivate\" : \"activate\";\n      const toggleIcon = user.active ? \"ri-user-unfollow-line\" : \"ri-user-follow-line\";\n      const toggleButtonLabel = user.active\n        ? translate(\"settingsUsersActionDeactivate\")\n        : translate(\"settingsUsersActionActivate\");\n      const baseButtonClass = \"inline-flex items-center justify-center px-3 py-1.5 text-xs font-medium rounded border transition cursor-pointer disabled:opacity-40 disabled:cursor-not-allowed\";\n      const deactivateButtonClass = `${baseButtonClass} text-yellow-700 dark:text-yellow-300 border-yellow-200 dark:border-yellow-400/40 bg-yellow-50/60 dark:bg-yellow-900/20 hover:bg-yellow-50 dark:hover:bg-yellow-900/30`;\n      const activateButtonClass = `${baseButtonClass} text-green-700 dark:text-green-300 border-green-200 dark:border-green-400/40 bg-green-50/60 dark:bg-green-900/20 hover:bg-green-50 dark:hover:bg-green-900/30`;\n\n      toggleButton.className = user.active ? deactivateButtonClass : activateButtonClass;\n      toggleButton.dataset.userAction = toggleAction;\n      toggleButton.dataset.userId = String(user.id);\n      toggleButton.setAttribute(\"aria-label\", toggleButtonLabel);\n\n      const toggleDisabled = user.active && user.is_current_user;\n      if (toggleDisabled) {\n        toggleButton.disabled = true;\n        toggleButton.title = translate(\"settingsUsersActionDeactivateSelfError\");\n      }\n\n      const toggleIconEl = toggleButton.querySelector('[data-role=\"toggle-icon\"]');\n      if (toggleIconEl) {\n        toggleIconEl.className = `${toggleIcon} text-base leading-4`;\n      }\n    }\n\n    const clearSessionsButton = row.querySelector('[data-role=\"clear-sessions-button\"]');\n    if (clearSessionsButton) {\n      const clearDisabled = user.active_sessions === 0;\n      clearSessionsButton.dataset.userId = String(user.id);\n      clearSessionsButton.setAttribute(\"aria-label\", translate(\"settingsUsersActionClearSessions\"));\n\n      if (clearDisabled) {\n        clearSessionsButton.disabled = true;\n        clearSessionsButton.title = translate(\"settingsUsersActionClearDisabledTooltip\");\n      }\n    }\n\n    const deleteButton = row.querySelector('[data-role=\"delete-button\"]');\n    if (deleteButton) {\n      const deleteDisabled = user.is_current_user;\n      deleteButton.dataset.userId = String(user.id);\n      deleteButton.setAttribute(\"aria-label\", translate(\"settingsUsersActionDelete\"));\n\n      if (deleteDisabled) {\n        deleteButton.disabled = true;\n        deleteButton.title = translate(\"settingsUsersActionDeleteSelfTooltip\");\n      }\n    }\n\n    return row;\n  }\n\n  _getDisplayName(user) {\n    if (!user) {\n      return translate(\"settingsUsersNameFallback\");\n    }\n    const name = user.name?.trim();\n    if (name) {\n      return name;\n    }\n    const email = user.email?.trim();\n    if (email) {\n      return email;\n    }\n    return translate(\"settingsUsersNameFallback\");\n  }\n\n  _formatUserRole(role) {\n    const normalized = (role || \"\").toString().toLowerCase();\n    if (normalized === \"admin\") {\n      return translate(\"settingsUsersRoleAdmin\");\n    }\n    if (normalized === \"user\") {\n      return translate(\"settingsUsersRoleUser\");\n    }\n    if (normalized === \"guest\") {\n      return translate(\"settingsUsersRoleGuest\");\n    }\n    return translate(\"settingsUsersRoleUnknown\");\n  }\n\n  _formatUserStatus(active) {\n    return active\n      ? translate(\"settingsUsersStatusActive\")\n      : translate(\"settingsUsersStatusInactive\");\n  }\n\n  _formatKey(key) {\n    const value = (key || \"\").trim();\n    if (!value) {\n      return translate(\"settingsUsersKeyMissing\");\n    }\n    if (value.length <= 36) {\n      return value;\n    }\n    return `${value.slice(0, 20)}\u2026${value.slice(-10)}`;\n  }\n\n  async _handleUserAction(event) {\n    const button = event.target.closest(\"[data-user-action]\");\n    if (!button || button.disabled) {\n      return;\n    }\n\n    const action = button.getAttribute(\"data-user-action\");\n    const idAttr = button.getAttribute(\"data-user-id\");\n    const userID = Number.parseInt(idAttr || \"\", 10);\n\n    if (!Number.isFinite(userID)) {\n      return;\n    }\n\n    const user = this._usersData.find((item) => item.id === userID);\n    if (!user) {\n      return;\n    }\n\n    if (action === \"copy-key\") {\n      event.preventDefault();\n      const value = button.getAttribute(\"data-key-value\") || \"\";\n      if (!value) {\n        this._setUsersStatus(translate(\"settingsUsersCopyError\"), \"error\");\n        return;\n      }\n      const success = copyToClipboard(value);\n      if (success) {\n        this._setUsersStatus(translate(\"settingsUsersCopySuccess\"), \"success\");\n        const icon = button.querySelector(\"i\");\n        if (icon) {\n          const original = icon.dataset.originalClass || icon.className;\n          icon.dataset.originalClass = original;\n          icon.className = \"ri-check-line text-base leading-4\";\n          setTimeout(() => {\n            if (icon && icon.dataset.originalClass) {\n              icon.className = icon.dataset.originalClass;\n            }\n          }, 2000);\n        }\n      } else {\n        this._setUsersStatus(translate(\"settingsUsersCopyError\"), \"error\");\n      }\n      return;\n    }\n\n    const displayName = this._getDisplayName(user);\n\n    if (action === \"deactivate\") {\n      if (user.is_current_user) {\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeactivateSelfError\"),\n          \"error\",\n        );\n        return;\n      }\n\n      this._setUsersStatus(\n        translate(\"settingsUsersActionDeactivateWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionDeactivateWorking\"),\n      );\n\n      try {\n        const response = await fetch(`/api/admin/users/${userID}/deactivate`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`deactivate_user_failed_${response.status}`);\n        }\n\n        succeeded = true;\n        await this._loadUsers();\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeactivateSuccess\", {\n            name: displayName,\n          }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsLayout] Failed to deactivate user\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeactivateError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n\n      return;\n    }\n\n    if (action === \"activate\") {\n      this._setUsersStatus(\n        translate(\"settingsUsersActionActivateWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionActivateWorking\"),\n      );\n\n      try {\n        const response = await fetch(`/api/admin/users/${userID}/activate`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`activate_user_failed_${response.status}`);\n        }\n\n        succeeded = true;\n        await this._loadUsers();\n        this._setUsersStatus(\n          translate(\"settingsUsersActionActivateSuccess\", {\n            name: displayName,\n          }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsLayout] Failed to activate user\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionActivateError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n\n      return;\n    }\n\n    if (action === \"clear-sessions\") {\n      if (user.active_sessions === 0) {\n        return;\n      }\n\n      this._setUsersStatus(\n        translate(\"settingsUsersActionClearWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionClearWorking\"),\n      );\n\n      try {\n        const response = await fetch(\n          `/api/admin/users/${userID}/clear-sessions`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          },\n        );\n\n        if (!response.ok) {\n          throw new Error(`clear_sessions_failed_${response.status}`);\n        }\n\n        user.active_sessions = 0;\n        succeeded = true;\n        await this._loadUsers();\n        if (user.is_current_user) {\n          window.location.assign(\"/login\");\n          return;\n        }\n        this._setUsersStatus(\n          translate(\"settingsUsersActionClearSuccess\", { name: displayName }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsLayout] Failed to clear sessions\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionClearError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n\n      return;\n    }\n\n    if (action === \"delete\") {\n      if (user.is_current_user) {\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeleteSelfError\"),\n          \"error\",\n        );\n        return;\n      }\n\n      const confirmed = window.confirm(\n        translate(\"settingsUsersActionDeleteConfirm\", { name: displayName }),\n      );\n      if (!confirmed) {\n        return;\n      }\n\n      this._setUsersStatus(\n        translate(\"settingsUsersActionDeleteWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionDeleteWorking\"),\n      );\n\n      try {\n        const response = await fetch(`/api/admin/users/${userID}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`delete_user_failed_${response.status}`);\n        }\n\n        succeeded = true;\n        await this._loadUsers();\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeleteSuccess\", { name: displayName }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsLayout] Failed to delete user\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeleteError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n    }\n  }\n\n  _setButtonLoading(button, iconClass, text) {\n    if (!button) {\n      return;\n    }\n    if (!button.dataset.originalContent) {\n      button.dataset.originalContent = button.innerHTML;\n    }\n    if (!button.dataset.originalAriaLabel) {\n      button.dataset.originalAriaLabel =\n        button.getAttribute(\"aria-label\") || \"\";\n    }\n    const icon = iconClass\n      ? `<i class=\"${iconClass} text-base leading-4 animate-spin\" aria-hidden=\"true\"></i>`\n      : \"\";\n    button.innerHTML = icon || \"\";\n    if (text) {\n      button.setAttribute(\"aria-label\", text);\n    }\n    button.setAttribute(\"aria-busy\", \"true\");\n    button.disabled = true;\n    button.classList.add(\"opacity-60\");\n  }\n\n  _restoreButton(button) {\n    if (!button || !button.dataset.originalContent) {\n      return;\n    }\n    button.innerHTML = button.dataset.originalContent;\n    if (button.dataset.originalAriaLabel !== undefined) {\n      if (button.dataset.originalAriaLabel) {\n        button.setAttribute(\"aria-label\", button.dataset.originalAriaLabel);\n      } else {\n        button.removeAttribute(\"aria-label\");\n      }\n      delete button.dataset.originalAriaLabel;\n    }\n    button.removeAttribute(\"aria-busy\");\n    button.disabled = false;\n    button.classList.remove(\"opacity-60\");\n    delete button.dataset.originalContent;\n  }\n\n  async _handleGenerateClick(event) {\n    event.preventDefault();\n    const button = event.currentTarget;\n    const type =\n      button?.getAttribute(\"data-token-type\")?.toLowerCase() || \"admin\";\n    const section = this._getSignupSection(type);\n    if (!section) {\n      return;\n    }\n\n    this._setSectionStatus(type, translate(\"settingsUsersGenerating\"), \"info\");\n    this._setSectionLoading(section, true);\n\n    try {\n      const response = await fetch(\"/api/admin/signup-links\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ type }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`generate_failed_${response.status}`);\n      }\n\n      const data = await response.json();\n      if (typeof data.active_count === \"number\") {\n        this._setSignupCount(type, data.active_count);\n      }\n      const expiresAt =\n        typeof data.expires_at === \"number\"\n          ? data.expires_at\n          : Number(data.expires_at || 0);\n      if (typeof data.link === \"string\") {\n        this._showSignupDetail(type, data.link, expiresAt);\n        this._setDetailStatus(\n          translate(\"settingsUsersGenerateSuccess\"),\n          \"success\",\n        );\n      }\n      this._setSectionStatus(\n        type,\n        translate(\"settingsUsersGenerateSuccess\"),\n        \"success\",\n      );\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to create signup link\", error);\n      this._setSectionStatus(\n        type,\n        translate(\"settingsUsersGenerateError\"),\n        \"error\",\n      );\n      if (this._activeDetailType === type) {\n        this._setDetailStatus(translate(\"settingsUsersGenerateError\"), \"error\");\n      }\n    } finally {\n      this._setSectionLoading(section, false);\n    }\n  }\n\n  async _handleRevokeClick(event) {\n    event.preventDefault();\n    const button = event.currentTarget;\n    const type =\n      button?.getAttribute(\"data-token-type\")?.toLowerCase() || \"admin\";\n    const section = this._getSignupSection(type);\n    if (!section) {\n      return;\n    }\n\n    this._setSectionStatus(type, translate(\"settingsUsersRevoking\"), \"info\");\n    this._setSectionLoading(section, true);\n\n    try {\n      const response = await fetch(\n        `/api/admin/signup-links?type=${encodeURIComponent(type)}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        },\n      );\n\n      if (!response.ok) {\n        throw new Error(`revoke_failed_${response.status}`);\n      }\n\n      const data = await response.json();\n      if (typeof data.active_count === \"number\") {\n        this._setSignupCount(type, data.active_count);\n      } else {\n        this._setSignupCount(type, 0);\n      }\n      if (this._activeDetailType === type) {\n        this._clearSignupDetail();\n      }\n      this._setSectionStatus(\n        type,\n        translate(\"settingsUsersRevokeSuccess\"),\n        \"success\",\n      );\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to revoke signup links\", error);\n      this._setSectionStatus(\n        type,\n        translate(\"settingsUsersRevokeError\"),\n        \"error\",\n      );\n      if (this._activeDetailType === type) {\n        this._setDetailStatus(translate(\"settingsUsersRevokeError\"), \"error\");\n      }\n    } finally {\n      this._setSectionLoading(section, false);\n    }\n  }\n\n  _handleDetailBack(event) {\n    event.preventDefault();\n    this._clearSignupDetail();\n  }\n\n  _handleDetailCopy(event) {\n    event.preventDefault();\n    if (!this._detailLinkInput) {\n      return;\n    }\n    const value = this._detailLinkInput.value;\n    if (!value) {\n      return;\n    }\n\n    const success = copyToClipboard(value);\n    if (success) {\n      this._setDetailStatus(\n        translate(\"settingsUsersDetailCopySuccess\"),\n        \"success\",\n      );\n      if (this._detailCopyIcon) {\n        const original =\n          this._detailCopyIcon.dataset.originalClass ||\n          this._detailCopyIcon.className;\n        this._detailCopyIcon.dataset.originalClass = original;\n        this._detailCopyIcon.className = \"ri-check-line text-lg leading-4\";\n        setTimeout(() => {\n          if (this._detailCopyIcon) {\n            this._detailCopyIcon.className =\n              this._detailCopyIcon.dataset.originalClass || original;\n          }\n        }, 2000);\n      }\n    } else {\n      this._setDetailStatus(translate(\"settingsUsersDetailCopyError\"), \"error\");\n    }\n  }\n\n  _handleDetailLinkFocus(event) {\n    const input = event.currentTarget;\n    if (input && typeof input.select === \"function\") {\n      input.select();\n    }\n  }\n\n  _formatExpiry(expiresAtSeconds) {\n    if (!expiresAtSeconds) {\n      return translate(\"settingsUsersDetailExpiresUnknown\");\n    }\n\n    const millis = Number(expiresAtSeconds) * 1000;\n    const date = new Date(millis);\n    if (Number.isNaN(date.getTime())) {\n      return translate(\"settingsUsersDetailExpiresUnknown\");\n    }\n\n    const locale = document.documentElement.lang || navigator.language || \"en\";\n    return new Intl.DateTimeFormat(locale, {\n      dateStyle: \"medium\",\n      timeStyle: \"short\",\n    }).format(date);\n  }\n\n  async _loadSignupOverview() {\n    try {\n      const response = await fetch(\"/api/admin/signup-links\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`overview_failed_${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data?.admin && typeof data.admin.active_count === \"number\") {\n        this._setSignupCount(\"admin\", data.admin.active_count);\n      }\n      if (data?.user && typeof data.user.active_count === \"number\") {\n        this._setSignupCount(\"user\", data.user.active_count);\n      }\n      this._setSectionStatus(\"admin\", \"\");\n      this._setSectionStatus(\"user\", \"\");\n      if (this._activeDetailType && this._detailActiveCount) {\n        const section = this._getSignupSection(this._activeDetailType);\n        const countText = section?.countEl\n          ? section.countEl.textContent || \"0\"\n          : \"0\";\n        this._detailActiveCount.textContent = countText;\n      }\n    } catch (error) {\n      console.error(\"[SettingsLayout] Failed to load signup overview\", error);\n      this._setSignupCount(\"admin\", 0);\n      this._setSignupCount(\"user\", 0);\n      this._setSectionStatus(\n        \"admin\",\n        translate(\"settingsUsersOverviewError\"),\n        \"error\",\n      );\n      this._setSectionStatus(\n        \"user\",\n        translate(\"settingsUsersOverviewError\"),\n        \"error\",\n      );\n      if (this._activeDetailType) {\n        this._setDetailStatus(translate(\"settingsUsersOverviewError\"), \"error\");\n      }\n    }\n  }\n\n  _handleCategoryClick(event) {\n    const category = event.currentTarget.getAttribute(\"data-category\");\n    if (category) {\n      this._selectCategory(category);\n    }\n  }\n\n  _selectCategory(category) {\n    this._activeCategory = category;\n    this._updateCategoryStyles();\n    this._updatePanels();\n  }\n\n  _updateCategoryStyles() {\n    this._categoryButtons.forEach((button) => {\n      const isActive =\n        button.getAttribute(\"data-category\") === this._activeCategory;\n\n      button.classList.toggle(\"border-primary\", isActive);\n      button.classList.toggle(\"bg-primary/10\", isActive);\n      button.classList.toggle(\"text-primary\", isActive);\n      button.classList.toggle(\"text-grey-70\", !isActive);\n      button.classList.toggle(\"dark:text-grey-30\", !isActive);\n      button.classList.toggle(\"border-transparent\", !isActive);\n    });\n  }\n\n  _updatePanels() {\n    this._panels.forEach((panel, key) => {\n      if (key === this._activeCategory) {\n        panel.classList.remove(\"hidden\");\n      } else {\n        panel.classList.add(\"hidden\");\n      }\n    });\n  }\n\n  _setProfileStatus(type, message) {\n    if (!this._profileStatus) {\n      return;\n    }\n    if (this._profileStatusText) {\n      this._profileStatusText.textContent = message || \"\";\n    }\n    this._profileStatus.className =\n      \"text-sm flex items-center gap-2 min-h-[1.25rem]\";\n    if (this._profileStatusIcon) {\n      this._profileStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._profileStatus.classList.add(\"text-red-600\", \"dark:text-red-400\");\n      if (this._profileStatusIcon) {\n        this._profileStatusIcon.classList.remove(\"hidden\");\n        this._profileStatusIcon.classList.add(\n          \"ri-close-circle-fill\",\n          \"text-red-600\",\n          \"dark:text-red-400\",\n        );\n      }\n    } else if (type === \"success\") {\n      this._profileStatus.classList.add(\n        \"text-green-600\",\n        \"dark:text-green-400\",\n      );\n      if (this._profileStatusIcon) {\n        this._profileStatusIcon.classList.remove(\"hidden\");\n        this._profileStatusIcon.classList.add(\n          \"ri-check-line\",\n          \"text-green-600\",\n          \"dark:text-green-400\",\n        );\n      }\n    } else {\n      this._profileStatus.classList.add(\"text-grey-70\", \"dark:text-grey-40\");\n      if (this._profileStatusIcon) {\n        this._profileStatusIcon.classList.remove(\"hidden\");\n        this._profileStatusIcon.classList.add(\n          \"ri-information-line\",\n          \"text-grey-60\",\n          \"dark:text-grey-40\",\n        );\n      }\n    }\n  }\n\n  _setKeyStatus(type, message) {\n    if (!this._accountKeyStatus) {\n      return;\n    }\n    if (this._accountKeyStatusText) {\n      this._accountKeyStatusText.textContent = message || \"\";\n    }\n    this._accountKeyStatus.className =\n      \"text-xs flex items-center gap-2 min-h-[1.25rem] text-amber-900/80 dark:text-amber-200/80\";\n    if (this._accountKeyStatusIcon) {\n      this._accountKeyStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._accountKeyStatus.className =\n        \"text-xs flex items-center gap-2 min-h-[1.25rem] text-red-600 dark:text-red-300\";\n      if (this._accountKeyStatusIcon) {\n        this._accountKeyStatusIcon.classList.remove(\"hidden\");\n        this._accountKeyStatusIcon.className =\n          \"ri-close-circle-fill text-red-600 dark:text-red-300\";\n      }\n    } else if (type === \"success\") {\n      this._accountKeyStatus.className =\n        \"text-xs flex items-center gap-2 min-h-[1.25rem] text-green-700 dark:text-green-300\";\n      if (this._accountKeyStatusIcon) {\n        this._accountKeyStatusIcon.classList.remove(\"hidden\");\n        this._accountKeyStatusIcon.className =\n          \"ri-check-line text-green-700 dark:text-green-300\";\n      }\n    } else {\n      if (this._accountKeyStatusIcon) {\n        this._accountKeyStatusIcon.classList.remove(\"hidden\");\n        this._accountKeyStatusIcon.className =\n          \"ri-information-line text-amber-700 dark:text-amber-200\";\n      }\n    }\n  }\n\n  _setAccountStatus(type, message) {\n    if (!this._accountStatus) {\n      return;\n    }\n    if (this._accountStatusText) {\n      this._accountStatusText.textContent = message || \"\";\n    }\n    this._accountStatus.className =\n      \"text-xs flex items-center gap-2 min-h-[1.25rem]\";\n    if (this._accountStatusIcon) {\n      this._accountStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._accountStatus.classList.add(\"text-red-600\", \"dark:text-red-400\");\n      if (this._accountStatusIcon) {\n        this._accountStatusIcon.classList.remove(\"hidden\");\n        this._accountStatusIcon.classList.add(\n          \"ri-close-circle-fill\",\n          \"text-red-600\",\n          \"dark:text-red-400\",\n        );\n      }\n    } else if (type === \"success\") {\n      this._accountStatus.classList.add(\n        \"text-green-600\",\n        \"dark:text-green-400\",\n      );\n      if (this._accountStatusIcon) {\n        this._accountStatusIcon.classList.remove(\"hidden\");\n        this._accountStatusIcon.classList.add(\n          \"ri-check-line\",\n          \"text-green-600\",\n          \"dark:text-green-400\",\n        );\n      }\n    } else {\n      this._accountStatus.classList.add(\"text-grey-70\", \"dark:text-grey-40\");\n      if (this._accountStatusIcon) {\n        this._accountStatusIcon.classList.remove(\"hidden\");\n        this._accountStatusIcon.classList.add(\n          \"ri-information-line\",\n          \"text-grey-60\",\n          \"dark:text-grey-40\",\n        );\n      }\n    }\n  }\n\n  _handleAccountKeyCopy(event) {\n    event.preventDefault();\n    if (!this._accountKeyCopyButton) {\n      return;\n    }\n    const value =\n      this._accountKeyCopyButton.getAttribute(\"data-key-value\") || \"\";\n    if (!value) {\n      this._setKeyStatus(\n        \"error\",\n        translate(\"settingsAccountKeyStatusUnavailable\"),\n      );\n      return;\n    }\n    const success = copyToClipboard(value);\n    if (success) {\n      this._setKeyStatus(\n        \"success\",\n        translate(\"settingsAccountKeyStatusCopied\"),\n      );\n      const icon = this._accountKeyCopyButton.querySelector(\"i\");\n      if (icon) {\n        const original = icon.dataset.originalClass || icon.className;\n        icon.dataset.originalClass = original;\n        icon.className = \"ri-check-line text-base leading-4\";\n        setTimeout(() => {\n          if (icon && icon.dataset.originalClass) {\n            icon.className = icon.dataset.originalClass;\n          }\n        }, 2000);\n      }\n    } else {\n      this._setKeyStatus(\"error\", translate(\"settingsAccountKeyStatusError\"));\n    }\n  }\n\n  _setPasswordStatus(type, message) {\n    if (!this._passwordStatus) {\n      return;\n    }\n    if (this._passwordStatusText) {\n      this._passwordStatusText.textContent = message || \"\";\n    }\n    this._passwordStatus.className = \"text-sm mt-4 flex items-center gap-2\";\n    if (this._passwordStatusIcon) {\n      this._passwordStatusIcon.className = \"hidden\";\n    }\n    if (!message) {\n      return;\n    }\n    if (type === \"error\") {\n      this._passwordStatus.classList.add(\"text-red-600\", \"dark:text-red-400\");\n      if (this._passwordStatusIcon) {\n        this._passwordStatusIcon.classList.remove(\"hidden\");\n        this._passwordStatusIcon.classList.add(\n          \"ri-close-circle-fill\",\n          \"text-red-600\",\n          \"dark:text-red-400\",\n        );\n      }\n    } else if (type === \"success\") {\n      this._passwordStatus.classList.add(\n        \"text-green-600\",\n        \"dark:text-green-400\",\n      );\n      if (this._passwordStatusIcon) {\n        this._passwordStatusIcon.classList.remove(\"hidden\");\n        this._passwordStatusIcon.classList.add(\n          \"ri-check-line\",\n          \"text-green-600\",\n          \"dark:text-green-400\",\n        );\n      }\n    } else {\n      this._passwordStatus.classList.add(\"text-grey-70\", \"dark:text-grey-40\");\n      if (this._passwordStatusIcon) {\n        this._passwordStatusIcon.classList.remove(\"hidden\");\n        this._passwordStatusIcon.classList.add(\n          \"ri-information-line\",\n          \"text-grey-60\",\n          \"dark:text-grey-40\",\n        );\n      }\n    }\n  }\n\n  _isValidEmail(value) {\n    if (!value) {\n      return false;\n    }\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n  }\n\n  _mapProfileError(code, status) {\n    switch (code) {\n      case \"invalid_name\":\n        return translate(\"settingsAccountProfileStatusNameRequired\");\n      case \"invalid_email\":\n        return translate(\"settingsAccountProfileStatusEmailInvalid\");\n      case \"email_required\":\n        return translate(\"settingsAccountProfileStatusEmailRequired\");\n      case \"name_required\":\n        return translate(\"settingsAccountProfileStatusNameRequired\");\n      case \"email_in_use\":\n        return translate(\"settingsAccountProfileStatusEmailInUse\");\n      case \"not_active\":\n        return translate(\"settingsAccountDangerStatusNotActive\");\n      case \"forbidden\":\n        return translate(\"settingsAccountProfileStatusError\");\n      default:\n        break;\n    }\n    if (status === 409) {\n      return translate(\"settingsAccountProfileStatusEmailInUse\");\n    }\n    return translate(\"settingsAccountProfileStatusError\");\n  }\n\n  _mapAccountActionError(code) {\n    switch (code) {\n      case \"not_active\":\n        return translate(\"settingsAccountDangerStatusNotActive\");\n      case \"forbidden\":\n        return translate(\"settingsAccountDangerStatusError\");\n      default:\n        return translate(\"settingsAccountDangerStatusError\");\n    }\n  }\n\n  async _handleProfileSubmit(event) {\n    event.preventDefault();\n    if (!this._profileForm) {\n      return;\n    }\n\n    const nameInput = this._profileForm.querySelector(\"#settings-account-name\");\n    const emailInput = this._profileForm.querySelector(\n      \"#settings-account-email\",\n    );\n    const name = nameInput?.value.trim() || \"\";\n    const email = emailInput?.value.trim() || \"\";\n\n    if (!name) {\n      this._setProfileStatus(\n        \"error\",\n        translate(\"settingsAccountProfileStatusNameRequired\"),\n      );\n      return;\n    }\n    if (!email) {\n      this._setProfileStatus(\n        \"error\",\n        translate(\"settingsAccountProfileStatusEmailRequired\"),\n      );\n      return;\n    }\n    if (!this._isValidEmail(email)) {\n      this._setProfileStatus(\n        \"error\",\n        translate(\"settingsAccountProfileStatusEmailInvalid\"),\n      );\n      return;\n    }\n\n    this._setProfileStatus(\n      \"info\",\n      translate(\"settingsAccountProfileStatusSaving\"),\n    );\n    if (this._profileSubmitButton) {\n      this._profileSubmitButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/me/profile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name, email }),\n      });\n\n      if (!response.ok) {\n        let errorCode = \"\";\n        try {\n          const payload = await response.json();\n          if (payload && typeof payload.error === \"string\") {\n            errorCode = payload.error;\n          }\n        } catch {\n          // ignore parsing issues\n        }\n        const message = this._mapProfileError(errorCode, response.status);\n        throw new Error(message);\n      }\n\n      let data = null;\n      if (response.status !== 204) {\n        try {\n          data = await response.json();\n        } catch {\n          data = null;\n        }\n      }\n\n      const userSecrets = storage.user;\n      if (userSecrets) {\n        userSecrets.name = data?.name ?? name;\n        userSecrets.email = data?.email ?? email;\n        storage.setUser(userSecrets);\n      }\n      this._populateAccountForms();\n      this._setProfileStatus(\n        \"success\",\n        translate(\"settingsAccountProfileStatusSuccess\"),\n      );\n    } catch (error) {\n      const message =\n        error?.message || translate(\"settingsAccountProfileStatusError\");\n      this._setProfileStatus(\"error\", message);\n    } finally {\n      if (this._profileSubmitButton) {\n        this._profileSubmitButton.disabled = false;\n      }\n    }\n  }\n\n  async _handleClearSessions(event) {\n    event.preventDefault();\n    this._setAccountStatus(\n      \"info\",\n      translate(\"settingsAccountDangerStatusClearing\"),\n    );\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.disabled = true;\n    }\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/me/clear-sessions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        let errorCode = \"\";\n        try {\n          const payload = await response.json();\n          if (payload && typeof payload.error === \"string\") {\n            errorCode = payload.error;\n          }\n        } catch {\n          // ignore\n        }\n        const message = this._mapAccountActionError(errorCode);\n        throw new Error(message);\n      }\n\n      this._redirectToLogout();\n    } catch (error) {\n      const message =\n        error?.message || translate(\"settingsAccountDangerStatusError\");\n      this._setAccountStatus(\"error\", message);\n      if (this._clearSessionsButton) {\n        this._clearSessionsButton.disabled = false;\n      }\n      if (this._deactivateAccountButton) {\n        this._deactivateAccountButton.disabled = false;\n      }\n    }\n  }\n\n  async _handleDeactivateAccount(event) {\n    event.preventDefault();\n    const confirmed = window.confirm(\n      translate(\"settingsAccountDeactivateConfirm\"),\n    );\n    if (!confirmed) {\n      return;\n    }\n    this._setAccountStatus(\n      \"info\",\n      translate(\"settingsAccountDangerStatusDeactivating\"),\n    );\n    if (this._deactivateAccountButton) {\n      this._deactivateAccountButton.disabled = true;\n    }\n    if (this._clearSessionsButton) {\n      this._clearSessionsButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/me/deactivate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        let errorCode = \"\";\n        try {\n          const payload = await response.json();\n          if (payload && typeof payload.error === \"string\") {\n            errorCode = payload.error;\n          }\n        } catch {\n          // ignore\n        }\n        const message = this._mapAccountActionError(errorCode);\n        throw new Error(message);\n      }\n\n      this._redirectToLogout();\n    } catch (error) {\n      const message =\n        error?.message || translate(\"settingsAccountDangerStatusError\");\n      this._setAccountStatus(\"error\", message);\n      if (this._deactivateAccountButton) {\n        this._deactivateAccountButton.disabled = false;\n      }\n      if (this._clearSessionsButton) {\n        this._clearSessionsButton.disabled = false;\n      }\n    }\n  }\n\n  _redirectToLogout() {\n    try {\n      storage.clearUser();\n      storage.clearLocalFiles();\n    } catch (err) {\n      console.warn(\n        \"[SettingsLayout] Failed to clear local storage on logout\",\n        err,\n      );\n    }\n    window.location.href = \"/logout\";\n  }\n\n  async _handlePasswordSubmit(event) {\n    event.preventDefault();\n    if (!this._passwordForm) {\n      return;\n    }\n\n    const currentInput = this._passwordForm.querySelector(\n      \"#settings-current-password\",\n    );\n    const newInput = this._passwordForm.querySelector(\"#settings-new-password\");\n    const confirmInput = this._passwordForm.querySelector(\n      \"#settings-confirm-password\",\n    );\n\n    const currentPassword = currentInput?.value || \"\";\n    const newPassword = newInput?.value || \"\";\n    const confirmPassword = confirmInput?.value || \"\";\n\n    if (currentPassword.length < 10) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorCurrent\"),\n      );\n      return;\n    }\n    if (newPassword.length < 10) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorNewLength\"),\n      );\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorMismatch\"),\n      );\n      return;\n    }\n\n    const userSecrets = storage.user;\n    if (!userSecrets) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorNoSession\"),\n      );\n      return;\n    }\n\n    const saltBytes = userSecrets.getSaltBytes();\n    if (!saltBytes || !saltBytes.length) {\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorMissingKeys\"),\n      );\n      return;\n    }\n\n    const storedSettings = userSecrets.settings || {};\n    const kdfInput =\n      storedSettings.kdf || storedSettings || DEFAULT_KDF_SETTINGS;\n    const kdfSettings = normalizeKDFSettings(kdfInput);\n\n    let derivedCurrent = null;\n    let newMaterial = null;\n    const newSaltBytes = generateSalt(\n      kdfSettings.saltLength || DEFAULT_KDF_SETTINGS.saltLength,\n    );\n\n    try {\n      this._setPasswordStatus(\n        \"info\",\n        translate(\"settingsPasswordStatusInfoDeriving\"),\n      );\n      derivedCurrent = await deriveKeyMaterial(\n        currentPassword,\n        saltBytes,\n        kdfSettings,\n      );\n\n      const derivedCurrentPublic = x25519.scalarMultBase(\n        derivedCurrent.x25519Seed,\n      );\n      const storedPublic = userSecrets.getX25519PublicKey();\n      if (\n        storedPublic &&\n        arrayToB64(derivedCurrentPublic) !== arrayToB64(storedPublic)\n      ) {\n        this._setPasswordStatus(\n          \"error\",\n          translate(\"settingsPasswordStatusErrorIncorrect\"),\n        );\n        derivedCurrent.edSeed.fill(0);\n        derivedCurrent.x25519Seed.fill(0);\n        return;\n      }\n\n      this._setPasswordStatus(\n        \"info\",\n        translate(\"settingsPasswordStatusInfoPreparing\"),\n      );\n      newMaterial = await deriveKeyMaterial(\n        newPassword,\n        newSaltBytes,\n        kdfSettings,\n      );\n    } catch (err) {\n      console.error(\"[SettingsLayout] Failed to derive key material\", err);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorDerive\"),\n      );\n      return;\n    } finally {\n      if (derivedCurrent?.edSeed) derivedCurrent.edSeed.fill(0);\n      if (derivedCurrent?.x25519Seed) derivedCurrent.x25519Seed.fill(0);\n    }\n\n    let newEdPublic;\n    let newXPublic;\n    try {\n      newEdPublic = await getPublicKey(newMaterial.edSeed);\n      newXPublic = x25519.scalarMultBase(newMaterial.x25519Seed);\n    } catch (err) {\n      console.error(\"[SettingsLayout] Failed to compute public keys\", err);\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorPublicKeys\"),\n      );\n      return;\n    }\n\n    let newUserSecrets;\n    try {\n      newUserSecrets = UserSecrets.fromKeyMaterial({\n        email: userSecrets.email,\n        name: userSecrets.name,\n        role: userSecrets.role,\n        settings: storedSettings,\n        salt: encodeSalt(newSaltBytes),\n        x25519Seed: newMaterial.x25519Seed,\n        x25519PublicKey: newXPublic,\n        version: userSecrets.version,\n      });\n    } catch (err) {\n      console.error(\"[SettingsLayout] Failed to prepare new user secrets\", err);\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorUserSecrets\"),\n      );\n      return;\n    }\n\n    const fileUpdates = [];\n    try {\n      const files = storage.files || [];\n      for (const ownedFile of files) {\n        if (!ownedFile?.id || !ownedFile.keychain?.rawSecret) {\n          continue;\n        }\n        const wrap = await newUserSecrets.wrapSecret(\n          ownedFile.keychain.rawSecret,\n        );\n        fileUpdates.push({\n          id: ownedFile.id,\n          ciphertext: wrap.ciphertext,\n          nonce: wrap.nonce,\n          ephemeral_pub: wrap.ephemeralPublicKey,\n          version: wrap.version || OWNER_SECRET_VERSION,\n        });\n      }\n    } catch (err) {\n      console.error(\"[SettingsLayout] Failed to re-wrap secrets\", err);\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      this._setPasswordStatus(\n        \"error\",\n        translate(\"settingsPasswordStatusErrorWrap\"),\n      );\n      return;\n    }\n\n    const payload = {\n      current_password: currentPassword,\n      new_salt: encodeSalt(newSaltBytes),\n      new_public_key: encodePublicKey(newEdPublic),\n      new_encryption_public_key: arrayToB64(newXPublic),\n      files: fileUpdates,\n      kdf: serializeKDFSettings(kdfSettings),\n    };\n\n    this._setPasswordStatus(\n      \"info\",\n      translate(\"settingsPasswordStatusInfoUpdating\"),\n    );\n    if (this._passwordSubmitButton) {\n      this._passwordSubmitButton.disabled = true;\n    }\n\n    try {\n      const response = await fetch(\"/api/passwordreset\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        let serverError = \"\";\n        try {\n          serverError = await response.text();\n        } catch {\n          // ignore parsing errors\n        }\n        console.error(\n          \"[SettingsLayout] Password reset failed\",\n          response.status,\n          serverError,\n        );\n        const message =\n          serverError || translate(\"settingsPasswordStatusErrorRequest\");\n        throw new Error(message);\n      }\n\n      storage.setUser(newUserSecrets);\n      this._setPasswordStatus(\n        \"success\",\n        translate(\"settingsPasswordStatusSuccess\"),\n      );\n      if (currentInput) currentInput.value = \"\";\n      if (newInput) newInput.value = \"\";\n      if (confirmInput) confirmInput.value = \"\";\n    } catch (err) {\n      const fallback = translate(\"settingsPasswordStatusErrorGeneric\");\n      const message = err?.message || fallback;\n      this._setPasswordStatus(\"error\", message);\n    } finally {\n      if (newMaterial?.edSeed) newMaterial.edSeed.fill(0);\n      if (newMaterial?.x25519Seed) newMaterial.x25519Seed.fill(0);\n      if (this._passwordSubmitButton) {\n        this._passwordSubmitButton.disabled = false;\n      }\n    }\n  }\n}\n\ncustomElements.define(\"settings-layout\", SettingsLayout);\n"],
  "mappings": "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",
  "names": []
}
