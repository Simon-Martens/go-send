{
  "version": 3,
  "sources": ["../../src/ui/settings-layout.mjs"],
  "sourcesContent": ["import storage from \"../storage.mjs\";\nimport { USER_ROLES } from \"../userSecrets.mjs\";\nimport { translateElement } from \"../utils.mjs\";\n\n/**\n * Settings Layout Controller\n *\n * Lightweight controller that manages:\n * - Category navigation (sidebar)\n * - Panel mounting/unmounting\n * - Admin access control\n *\n * All panel-specific logic is now in separate components:\n * - settings-account-panel\n * - settings-upload-links-panel\n * - settings-users-panel\n */\nclass SettingsLayout extends HTMLElement {\n  constructor() {\n    super();\n    this._templateMounted = false;\n    this._activeCategory = null; // Set to null initially, will be set on first mount\n    this._currentPanel = null;\n    this._isAdmin = false;\n\n    // Element refs\n    this._categoryButtons = [];\n    this._contentArea = null;\n    this._uploadLinksNavItem = null;\n    this._usersNavItem = null;\n\n    // Bound handlers\n    this._boundCategoryClick = this._handleCategoryClick.bind(this);\n  }\n\n  connectedCallback() {\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"settings-layout\");\n      if (!template) {\n        console.error(\"Template #settings-layout not found\");\n        return;\n      }\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    this._isAdmin = this._checkIsAdmin();\n    this._cacheElements();\n    this._configureAccess();\n    translateElement(this);\n    this._attachListeners();\n\n    // Mount initial panel (account is always visible)\n    this._selectCategory(\"account\");\n  }\n\n  disconnectedCallback() {\n    this._detachListeners();\n    this._unmountCurrentPanel();\n    this._categoryButtons = [];\n    this._contentArea = null;\n    this._uploadLinksNavItem = null;\n    this._usersNavItem = null;\n  }\n\n  _checkIsAdmin() {\n    const user = storage.user;\n    if (!user || user.role === undefined || user.role === null) {\n      return false;\n    }\n    const role = user.role;\n    if (typeof role === \"number\") {\n      return role === USER_ROLES.ADMIN;\n    }\n    if (typeof role === \"string\") {\n      const trimmed = role.trim();\n      if (!trimmed) {\n        return false;\n      }\n      const asNumber = Number.parseInt(trimmed, 10);\n      if (!Number.isNaN(asNumber)) {\n        return asNumber === USER_ROLES.ADMIN;\n      }\n      return trimmed.toLowerCase() === \"admin\";\n    }\n    return false;\n  }\n\n  _cacheElements() {\n    this._contentArea = this.querySelector('[data-role=\"content-area\"]');\n    this._uploadLinksNavItem = this.querySelector('[data-role=\"upload-links-nav\"]');\n    this._usersNavItem = this.querySelector('[data-role=\"users-nav\"]');\n\n    // Cache all category buttons\n    const categoryList = this.querySelector('[data-role=\"category-list\"]');\n    if (categoryList) {\n      this._categoryButtons = Array.from(\n        categoryList.querySelectorAll(\"button[data-category]\"),\n      );\n    }\n  }\n\n  _configureAccess() {\n    // Show/hide upload links nav for admins\n    if (this._uploadLinksNavItem) {\n      this._uploadLinksNavItem.classList.toggle(\"hidden\", !this._isAdmin);\n    }\n\n    // Show/hide users nav for admins\n    if (this._usersNavItem) {\n      this._usersNavItem.classList.toggle(\"hidden\", !this._isAdmin);\n    }\n  }\n\n  _attachListeners() {\n    this._categoryButtons.forEach((button) => {\n      button.addEventListener(\"click\", this._boundCategoryClick);\n    });\n  }\n\n  _detachListeners() {\n    this._categoryButtons.forEach((button) => {\n      button.removeEventListener(\"click\", this._boundCategoryClick);\n    });\n  }\n\n  _handleCategoryClick(event) {\n    const button = event.currentTarget;\n    const category = button.getAttribute(\"data-category\");\n    if (!category) {\n      return;\n    }\n    this._selectCategory(category);\n  }\n\n  _selectCategory(category) {\n    if (this._activeCategory === category) {\n      return; // Already on this category\n    }\n\n    // Check admin access for protected categories\n    if (!this._isAdmin && (category === \"users\" || category === \"upload-links\")) {\n      console.warn(`[SettingsLayout] Non-admin attempted to access ${category}`);\n      return;\n    }\n\n    this._activeCategory = category;\n    this._updateCategoryStyles();\n    this._mountPanel(category);\n  }\n\n  _updateCategoryStyles() {\n    this._categoryButtons.forEach((button) => {\n      const category = button.getAttribute(\"data-category\");\n      const isActive = category === this._activeCategory;\n\n      // Update button styling\n      if (isActive) {\n        button.classList.add(\"border-primary\", \"bg-primary/5\", \"text-primary\", \"dark:text-primary\");\n        button.classList.remove(\"border-transparent\", \"text-grey-70\", \"dark:text-grey-30\");\n      } else {\n        button.classList.remove(\"border-primary\", \"bg-primary/5\", \"text-primary\", \"dark:text-primary\");\n        button.classList.add(\"border-transparent\", \"text-grey-70\", \"dark:text-grey-30\");\n      }\n    });\n  }\n\n  _mountPanel(category) {\n    // Unmount current panel if exists\n    this._unmountCurrentPanel();\n\n    if (!this._contentArea) {\n      console.error(\"[SettingsLayout] Content area not found\");\n      return;\n    }\n\n    // Create and mount the appropriate panel component\n    let panelElement;\n    switch (category) {\n      case \"account\":\n        panelElement = document.createElement(\"settings-account-panel\");\n        break;\n      case \"upload-links\":\n        if (!this._isAdmin) return;\n        panelElement = document.createElement(\"settings-upload-links-panel\");\n        break;\n      case \"users\":\n        if (!this._isAdmin) return;\n        panelElement = document.createElement(\"settings-users-panel\");\n        break;\n      default:\n        console.warn(`[SettingsLayout] Unknown category: ${category}`);\n        return;\n    }\n\n    this._currentPanel = panelElement;\n    this._contentArea.appendChild(panelElement);\n  }\n\n  _unmountCurrentPanel() {\n    if (this._currentPanel) {\n      this._currentPanel.remove();\n      this._currentPanel = null;\n    }\n\n    // Clear content area\n    if (this._contentArea) {\n      this._contentArea.innerHTML = \"\";\n    }\n  }\n}\n\ncustomElements.define(\"settings-layout\", SettingsLayout);\n"],
  "mappings": "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",
  "names": []
}
