{
  "version": 3,
  "sources": ["../../src/ui/settings-upload-links-panel.mjs"],
  "sourcesContent": ["import storage from \"../storage.mjs\";\nimport { USER_ROLES } from \"../userSecrets.mjs\";\nimport { translate, translateElement, copyToClipboard } from \"../utils.mjs\";\n\nclass SettingsUploadLinksPanel extends HTMLElement {\n  constructor() {\n    super();\n    this._templateMounted = false;\n    this._isAdmin = false;\n\n    // Element refs\n    this._uploadLinksAdminSection = null;\n    this._uploadLinksPlaceholder = null;\n    this._uploadLinksForm = null;\n    this._uploadLinksLabelInput = null;\n    this._uploadLinksDescriptionInput = null;\n    this._uploadLinksGeneralCheckbox = null;\n    this._uploadLinksGeneralOption = null; // Container for general option (admin-only)\n    this._uploadLinksSubmitButton = null;\n    this._uploadLinksStatusEl = null;\n    this._uploadLinksStatusIcon = null;\n    this._uploadLinksStatusText = null;\n    this._uploadLinksDetail = null;\n    this._uploadLinksDetailLabel = null;\n    this._uploadLinksDetailInput = null;\n    this._uploadLinksDetailCopyButton = null;\n    this._uploadLinksDetailCopyIcon = null;\n    this._uploadLinksDetailStatus = null;\n    this._uploadLinksTableBody = null;\n    this._uploadLinksEmpty = null;\n\n    // State\n    this._uploadLinks = [];\n    this._uploadLinksLoading = false;\n    this._uploadLinksSubmitting = false;\n    this._uploadLinksCopyResetTimeout = null;\n    this._uploadLinksDetailLinkId = null;\n\n    // Bound handlers\n    this._boundUploadLinksSubmit = this._handleUploadLinksSubmit.bind(this);\n    this._boundUploadLinksAction = this._handleUploadLinksAction.bind(this);\n    this._boundUploadLinksCopy = this._handleUploadLinksCopy.bind(this);\n  }\n\n  connectedCallback() {\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"settings-upload-links-panel\");\n      if (!template) {\n        console.error(\"Template #settings-upload-links-panel not found\");\n        return;\n      }\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    this._isAdmin = this._checkIsAdmin();\n    this._cacheElements();\n    this._configureAccess();\n    translateElement(this);\n    this._attachListeners();\n\n    // Load data (both admins and regular users can now access this)\n    this._loadUploadLinks();\n  }\n\n  disconnectedCallback() {\n    this._detachListeners();\n    if (this._uploadLinksCopyResetTimeout) {\n      clearTimeout(this._uploadLinksCopyResetTimeout);\n      this._uploadLinksCopyResetTimeout = null;\n    }\n    // Clear refs\n    this._uploadLinksAdminSection = null;\n    this._uploadLinksPlaceholder = null;\n    this._uploadLinksForm = null;\n    this._uploadLinksLabelInput = null;\n    this._uploadLinksDescriptionInput = null;\n    this._uploadLinksGeneralCheckbox = null;\n    this._uploadLinksSubmitButton = null;\n    this._uploadLinksStatusEl = null;\n    this._uploadLinksStatusIcon = null;\n    this._uploadLinksStatusText = null;\n    this._uploadLinksDetail = null;\n    this._uploadLinksDetailLabel = null;\n    this._uploadLinksDetailInput = null;\n    this._uploadLinksDetailCopyButton = null;\n    this._uploadLinksDetailCopyIcon = null;\n    this._uploadLinksDetailStatus = null;\n    this._uploadLinksTableBody = null;\n    this._uploadLinksEmpty = null;\n  }\n\n  _checkIsAdmin() {\n    const user = storage.user;\n    if (!user || user.role === undefined || user.role === null) {\n      return false;\n    }\n    const role = user.role;\n    if (typeof role === \"number\") {\n      return role === USER_ROLES.ADMIN;\n    }\n    if (typeof role === \"string\") {\n      const trimmed = role.trim();\n      if (!trimmed) {\n        return false;\n      }\n      const asNumber = Number.parseInt(trimmed, 10);\n      if (!Number.isNaN(asNumber)) {\n        return asNumber === USER_ROLES.ADMIN;\n      }\n      return trimmed.toLowerCase() === \"admin\";\n    }\n    return false;\n  }\n\n  _cacheElements() {\n    this._uploadLinksAdminSection = this.querySelector(\n      '[data-role=\"upload-links-admin\"]',\n    );\n    this._uploadLinksPlaceholder = this.querySelector(\n      '[data-role=\"upload-links-placeholder\"]',\n    );\n    this._uploadLinksForm = this.querySelector('[data-role=\"upload-links-form\"]');\n    this._uploadLinksLabelInput = this.querySelector(\n      '[data-role=\"upload-links-label\"]',\n    );\n    this._uploadLinksDescriptionInput = this.querySelector(\n      '[data-role=\"upload-links-description\"]',\n    );\n    this._uploadLinksGeneralCheckbox = this.querySelector(\n      '[data-role=\"upload-links-general\"]',\n    );\n    this._uploadLinksGeneralOption = this.querySelector(\n      '[data-role=\"general-option\"]',\n    );\n    this._uploadLinksSubmitButton = this.querySelector(\n      '[data-role=\"upload-links-submit\"]',\n    );\n    this._uploadLinksStatusEl = this.querySelector(\n      '[data-role=\"upload-links-status\"]',\n    );\n    this._uploadLinksStatusIcon = this.querySelector(\n      '[data-role=\"upload-links-status-icon\"]',\n    );\n    this._uploadLinksStatusText = this.querySelector(\n      '[data-role=\"upload-links-status-text\"]',\n    );\n    this._uploadLinksDetail = this.querySelector(\n      '[data-role=\"upload-links-detail\"]',\n    );\n    this._uploadLinksDetailLabel = this.querySelector(\n      '[data-role=\"upload-links-detail-label\"]',\n    );\n    this._uploadLinksDetailInput = this.querySelector(\n      '[data-role=\"upload-links-detail-input\"]',\n    );\n    this._uploadLinksDetailCopyButton = this.querySelector(\n      '[data-role=\"upload-links-copy\"]',\n    );\n    this._uploadLinksDetailCopyIcon = this.querySelector(\n      '[data-role=\"upload-links-copy-icon\"]',\n    );\n    this._uploadLinksDetailStatus = this.querySelector(\n      '[data-role=\"upload-links-detail-status\"]',\n    );\n    this._uploadLinksTableBody = this.querySelector(\n      '[data-role=\"upload-links-table\"]',\n    );\n    this._uploadLinksEmpty = this.querySelector(\n      '[data-role=\"upload-links-empty\"]',\n    );\n  }\n\n  _configureAccess() {\n    // Always show the form section for non-guest users (both admins and regular users)\n    if (this._uploadLinksAdminSection) {\n      this._uploadLinksAdminSection.classList.remove(\"hidden\");\n    }\n    if (this._uploadLinksPlaceholder) {\n      this._uploadLinksPlaceholder.classList.add(\"hidden\");\n    }\n\n    // Only show the general upload link option for admins\n    if (this._uploadLinksGeneralOption) {\n      if (this._isAdmin) {\n        this._uploadLinksGeneralOption.classList.remove(\"hidden\");\n      } else {\n        this._uploadLinksGeneralOption.classList.add(\"hidden\");\n      }\n    }\n  }\n\n  _attachListeners() {\n    if (this._uploadLinksForm) {\n      this._uploadLinksForm.addEventListener(\n        \"submit\",\n        this._boundUploadLinksSubmit,\n      );\n    }\n    if (this._uploadLinksTableBody) {\n      this._uploadLinksTableBody.addEventListener(\n        \"click\",\n        this._boundUploadLinksAction,\n      );\n    }\n    if (this._uploadLinksDetailCopyButton) {\n      this._uploadLinksDetailCopyButton.addEventListener(\n        \"click\",\n        this._boundUploadLinksCopy,\n      );\n    }\n  }\n\n  _detachListeners() {\n    if (this._uploadLinksForm) {\n      this._uploadLinksForm.removeEventListener(\n        \"submit\",\n        this._boundUploadLinksSubmit,\n      );\n    }\n    if (this._uploadLinksTableBody) {\n      this._uploadLinksTableBody.removeEventListener(\n        \"click\",\n        this._boundUploadLinksAction,\n      );\n    }\n    if (this._uploadLinksDetailCopyButton) {\n      this._uploadLinksDetailCopyButton.removeEventListener(\n        \"click\",\n        this._boundUploadLinksCopy,\n      );\n    }\n  }\n\n  async _handleUploadLinksSubmit(event) {\n    event.preventDefault();\n    if (this._uploadLinksSubmitting) {\n      return;\n    }\n\n    const label = (this._uploadLinksLabelInput?.value || \"\").trim();\n    const description = (this._uploadLinksDescriptionInput?.value || \"\").trim();\n    // Only admins can create general links, so if the checkbox is hidden (non-admin) always use type 3\n    const isGeneral = this._isAdmin && (this._uploadLinksGeneralCheckbox?.checked || false);\n    const type = isGeneral ? 2 : 3; // Type 2 = general, Type 3 = user-specific\n\n    if (!label) {\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusLabelRequired\"),\n        \"error\",\n      );\n      return;\n    }\n\n    this._uploadLinksSubmitting = true;\n    if (this._uploadLinksSubmitButton) {\n      this._uploadLinksSubmitButton.disabled = true;\n      this._uploadLinksSubmitButton.classList.add(\"opacity-60\");\n    }\n    this._setUploadLinksStatus(\n      translate(\"settingsUploadLinksStatusCreating\"),\n      \"info\",\n    );\n\n    try {\n      const response = await fetch(\"/api/upload-links\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          label,\n          description,\n          type,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`upload_link_create_failed_${response.status}`);\n      }\n\n      const payload = await response.json();\n      const linkURL = payload?.link || \"\";\n\n      if (this._uploadLinksLabelInput) {\n        this._uploadLinksLabelInput.value = \"\";\n      }\n      if (this._uploadLinksDescriptionInput) {\n        this._uploadLinksDescriptionInput.value = \"\";\n      }\n      if (this._uploadLinksGeneralCheckbox) {\n        this._uploadLinksGeneralCheckbox.checked = false;\n      }\n\n      const normalized = {\n        id: Number.parseInt(payload?.id, 10) || payload?.id || Date.now(),\n        label: payload?.label || label,\n        description: payload?.description || description,\n        preview: payload?.preview || \"\",\n        active: payload?.active !== undefined ? Boolean(payload.active) : true,\n        type: Number.parseInt(payload?.type, 10) || type,\n        user_name: payload?.user_name || \"\",\n        created:\n          Number.parseInt(payload?.created, 10) ||\n          Math.floor(Date.now() / 1000),\n        created_by:\n          Number.parseInt(payload?.created_by, 10) ||\n          payload?.created_by ||\n          null,\n      };\n\n      this._uploadLinks = [\n        normalized,\n        ...this._uploadLinks.filter((item) => item.id !== normalized.id),\n      ].sort((a, b) => (b.created || 0) - (a.created || 0));\n      this._renderUploadLinks();\n      this._showUploadLinkDetail(normalized, linkURL);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusCreated\"),\n        \"success\",\n      );\n    } catch (error) {\n      console.error(\"[SettingsUploadLinksPanel] Failed to create upload link\", error);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusError\"),\n        \"error\",\n      );\n    } finally {\n      this._uploadLinksSubmitting = false;\n      if (this._uploadLinksSubmitButton) {\n        this._uploadLinksSubmitButton.disabled = false;\n        this._uploadLinksSubmitButton.classList.remove(\"opacity-60\");\n      }\n    }\n  }\n\n  _handleUploadLinksAction(event) {\n    const button = event.target.closest(\"button[data-action]\");\n    if (!button) {\n      return;\n    }\n    const action = button.dataset.action;\n    const tokenId = Number.parseInt(button.dataset.tokenId, 10);\n    if (!Number.isFinite(tokenId) || tokenId <= 0) {\n      return;\n    }\n\n    if (action === \"revoke\") {\n      this._revokeUploadLink(tokenId, button);\n    }\n  }\n\n  async _revokeUploadLink(tokenId, button) {\n    if (button) {\n      button.disabled = true;\n      button.classList.add(\"opacity-60\");\n    }\n    this._setUploadLinksStatus(\n      translate(\"settingsUploadLinksStatusRevoking\"),\n      \"info\",\n    );\n\n    try {\n      const response = await fetch(`/api/upload-links/${tokenId}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        throw new Error(`upload_link_revoke_failed_${response.status}`);\n      }\n\n      this._uploadLinks = this._uploadLinks.map((item) =>\n        item.id === tokenId ? { ...item, active: false } : item,\n      );\n      this._renderUploadLinks();\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusRevoked\"),\n        \"success\",\n      );\n      if (this._uploadLinksDetailLinkId === tokenId) {\n        this._hideUploadLinkDetail();\n      }\n    } catch (error) {\n      console.error(\"[SettingsUploadLinksPanel] Failed to revoke upload link\", error);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusRevokeError\"),\n        \"error\",\n      );\n    } finally {\n      if (button && document.body.contains(button)) {\n        button.disabled = false;\n        button.classList.remove(\"opacity-60\");\n      }\n    }\n  }\n\n  _showUploadLinkDetail(link, linkURL) {\n    if (!this._uploadLinksDetail || !this._uploadLinksDetailInput) {\n      return;\n    }\n    if (this._uploadLinksCopyResetTimeout) {\n      clearTimeout(this._uploadLinksCopyResetTimeout);\n      this._uploadLinksCopyResetTimeout = null;\n    }\n\n    const label = link?.label || translate(\"settingsUploadLinksLabelFallback\");\n    if (this._uploadLinksDetailLabel) {\n      this._uploadLinksDetailLabel.textContent = label;\n    }\n\n    this._uploadLinksDetailInput.value = linkURL || \"\";\n    this._uploadLinksDetailLinkId = link?.id ?? null;\n    this._uploadLinksDetail.classList.remove(\"hidden\");\n    if (this._uploadLinksDetailCopyIcon) {\n      const original =\n        this._uploadLinksDetailCopyIcon.dataset.originalClass ||\n        this._uploadLinksDetailCopyIcon.className;\n      this._uploadLinksDetailCopyIcon.dataset.originalClass = original;\n      this._uploadLinksDetailCopyIcon.className = original;\n    }\n    this._setUploadLinkDetailStatus(\n      linkURL ? translate(\"settingsUploadLinksDetailHint\") : \"\",\n      \"info\",\n    );\n  }\n\n  _hideUploadLinkDetail() {\n    if (!this._uploadLinksDetail) {\n      return;\n    }\n    this._uploadLinksDetail.classList.add(\"hidden\");\n    this._uploadLinksDetailLinkId = null;\n    if (this._uploadLinksDetailInput) {\n      this._uploadLinksDetailInput.value = \"\";\n    }\n    if (this._uploadLinksDetailLabel) {\n      this._uploadLinksDetailLabel.textContent = \"\u2014\";\n    }\n    this._setUploadLinkDetailStatus(\"\", \"info\");\n    if (\n      this._uploadLinksDetailCopyIcon &&\n      this._uploadLinksDetailCopyIcon.dataset.originalClass\n    ) {\n      this._uploadLinksDetailCopyIcon.className =\n        this._uploadLinksDetailCopyIcon.dataset.originalClass;\n    }\n  }\n\n  _setUploadLinkDetailStatus(message, variant = \"info\") {\n    if (!this._uploadLinksDetailStatus) {\n      return;\n    }\n    const baseClass = \"text-sm min-h-[1.25rem]\";\n    this._uploadLinksDetailStatus.className = `${baseClass} text-grey-60 dark:text-grey-30`;\n    this._uploadLinksDetailStatus.textContent = message || \"\";\n\n    if (!message) {\n      return;\n    }\n\n    if (variant === \"success\") {\n      this._uploadLinksDetailStatus.className = `${baseClass} text-green-600 dark:text-green-400`;\n    } else if (variant === \"error\") {\n      this._uploadLinksDetailStatus.className = `${baseClass} text-red-600 dark:text-red-400`;\n    }\n  }\n\n  _handleUploadLinksCopy(event) {\n    event.preventDefault();\n    if (!this._uploadLinksDetailInput) {\n      return;\n    }\n    const value = this._uploadLinksDetailInput.value || \"\";\n    if (!value) {\n      this._setUploadLinkDetailStatus(\n        translate(\"settingsUploadLinksCopyError\"),\n        \"error\",\n      );\n      return;\n    }\n\n    try {\n      const ok = copyToClipboard(value);\n      if (!ok) {\n        throw new Error(\"clipboard_failed\");\n      }\n      this._setUploadLinkDetailStatus(\n        translate(\"settingsUploadLinksCopySuccess\"),\n        \"success\",\n      );\n      if (this._uploadLinksDetailCopyIcon) {\n        const original =\n          this._uploadLinksDetailCopyIcon.dataset.originalClass ||\n          this._uploadLinksDetailCopyIcon.className;\n        this._uploadLinksDetailCopyIcon.dataset.originalClass = original;\n        this._uploadLinksDetailCopyIcon.className =\n          \"ri-check-line text-base leading-4 text-green-600 dark:text-green-400\";\n        if (this._uploadLinksCopyResetTimeout) {\n          clearTimeout(this._uploadLinksCopyResetTimeout);\n        }\n        this._uploadLinksCopyResetTimeout = setTimeout(() => {\n          if (\n            this._uploadLinksDetailCopyIcon &&\n            this._uploadLinksDetailCopyIcon.dataset.originalClass\n          ) {\n            this._uploadLinksDetailCopyIcon.className =\n              this._uploadLinksDetailCopyIcon.dataset.originalClass;\n          }\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(\"[SettingsUploadLinksPanel] Failed to copy upload link\", error);\n      this._setUploadLinkDetailStatus(\n        translate(\"settingsUploadLinksCopyError\"),\n        \"error\",\n      );\n      if (\n        this._uploadLinksDetailCopyIcon &&\n        this._uploadLinksDetailCopyIcon.dataset.originalClass\n      ) {\n        this._uploadLinksDetailCopyIcon.className =\n          this._uploadLinksDetailCopyIcon.dataset.originalClass;\n      }\n    }\n  }\n\n  _setUploadLinksStatus(message, variant = \"info\") {\n    if (!this._uploadLinksStatusEl) {\n      return;\n    }\n    const baseClass = \"text-sm min-h-[1.5rem] flex items-center gap-2\";\n    this._uploadLinksStatusEl.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n\n    if (this._uploadLinksStatusText) {\n      this._uploadLinksStatusText.textContent = message || \"\";\n    } else {\n      this._uploadLinksStatusEl.textContent = message || \"\";\n    }\n\n    if (this._uploadLinksStatusIcon) {\n      this._uploadLinksStatusIcon.className = \"hidden\";\n    }\n\n    if (!message) {\n      return;\n    }\n\n    let iconClass = \"ri-information-line text-grey-60 dark:text-grey-40\";\n    if (variant === \"success\") {\n      this._uploadLinksStatusEl.className = `${baseClass} text-green-600 dark:text-green-400`;\n      iconClass = \"ri-check-line text-green-600 dark:text-green-400\";\n    } else if (variant === \"error\") {\n      this._uploadLinksStatusEl.className = `${baseClass} text-red-600 dark:text-red-400`;\n      iconClass = \"ri-error-warning-line text-red-600 dark:text-red-400\";\n    }\n\n    if (this._uploadLinksStatusIcon) {\n      this._uploadLinksStatusIcon.className = iconClass;\n    }\n  }\n\n  async _loadUploadLinks() {\n    if (this._uploadLinksLoading) {\n      return;\n    }\n    this._uploadLinksLoading = true;\n    this._setUploadLinksStatus(\n      translate(\"settingsUploadLinksStatusLoading\"),\n      \"info\",\n    );\n\n    try {\n      const response = await fetch(\"/api/upload-links\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`upload_link_list_failed_${response.status}`);\n      }\n\n      const payload = await response.json();\n      const list = Array.isArray(payload?.links) ? payload.links : [];\n      this._uploadLinks = list\n        .map((item) => ({\n          id: Number.parseInt(item.id, 10) || item.id,\n          label: item.label || \"\",\n          description: item.description || \"\",\n          preview: item.preview || \"\",\n          active: Boolean(item.active),\n          type: Number.parseInt(item.type, 10) || 0,\n          user_name: item.user_name || \"\",\n          created: Number.parseInt(item.created, 10) || 0,\n          created_by:\n            Number.parseInt(item.created_by, 10) || item.created_by || null,\n        }))\n        .sort((a, b) => (b.created || 0) - (a.created || 0));\n      this._renderUploadLinks();\n      this._setUploadLinksStatus(\"\", \"info\");\n    } catch (error) {\n      console.error(\"[SettingsUploadLinksPanel] Failed to load upload links\", error);\n      this._setUploadLinksStatus(\n        translate(\"settingsUploadLinksStatusLoadingError\"),\n        \"error\",\n      );\n    } finally {\n      this._uploadLinksLoading = false;\n    }\n  }\n\n  _renderUploadLinks() {\n    if (!this._uploadLinksTableBody) {\n      return;\n    }\n\n    if (!Array.isArray(this._uploadLinks) || this._uploadLinks.length === 0) {\n      this._uploadLinksTableBody.innerHTML = \"\";\n      if (this._uploadLinksEmpty) {\n        this._uploadLinksEmpty.classList.remove(\"hidden\");\n      }\n      return;\n    }\n\n    if (this._uploadLinksEmpty) {\n      this._uploadLinksEmpty.classList.add(\"hidden\");\n    }\n\n    this._uploadLinksTableBody.innerHTML = \"\";\n    this._uploadLinks.forEach((link) => {\n      const row = this._createUploadLinkRow(link);\n      if (row) {\n        this._uploadLinksTableBody.appendChild(row);\n      }\n    });\n\n    if (\n      this._uploadLinksDetailLinkId !== null &&\n      !this._uploadLinks.some(\n        (link) => link.id === this._uploadLinksDetailLinkId && link.active,\n      )\n    ) {\n      this._hideUploadLinkDetail();\n    }\n  }\n\n  _createUploadLinkRow(link) {\n    const template = document.getElementById(\"settings-upload-link-item\");\n    if (!template) {\n      console.error(\"Template #settings-upload-link-item not found\");\n      return null;\n    }\n\n    const fragment = template.content.cloneNode(true);\n    const row = fragment.querySelector('[data-role=\"upload-link-row\"]');\n    if (!row) {\n      return null;\n    }\n\n    row.dataset.tokenId = String(link.id);\n\n    // Label\n    const labelEl = row.querySelector('[data-role=\"label\"]');\n    if (labelEl) {\n      labelEl.textContent =\n        link.label || translate(\"settingsUploadLinksLabelFallback\");\n    }\n\n    // Description (optional)\n    const descriptionEl = row.querySelector('[data-role=\"description\"]');\n    if (descriptionEl) {\n      const description = (link.description || \"\").trim();\n      if (description) {\n        descriptionEl.textContent = description;\n        descriptionEl.classList.remove(\"hidden\");\n      } else {\n        descriptionEl.classList.add(\"hidden\");\n      }\n    }\n\n    // Preview (use template elements instead of createElement)\n    const previewBadge = row.querySelector('[data-role=\"preview-badge\"]');\n    const previewNone = row.querySelector('[data-role=\"preview-none\"]');\n    if (previewBadge && previewNone) {\n      const previewValue = (link.preview || \"\").trim();\n      if (previewValue) {\n        previewBadge.textContent = previewValue;\n        previewBadge.classList.remove(\"hidden\");\n        previewNone.classList.add(\"hidden\");\n      } else {\n        previewBadge.classList.add(\"hidden\");\n        previewNone.classList.remove(\"hidden\");\n      }\n    }\n\n    // Type/User\n    const typeUserEl = row.querySelector('[data-role=\"type-user\"]');\n    if (typeUserEl) {\n      const linkType = link.type || 0;\n      const userName = (link.user_name || \"\").trim();\n\n      if (linkType === 2) {\n        // General upload link\n        typeUserEl.textContent = translate(\"settingsUploadLinksTypeGeneral\");\n      } else if (linkType === 3) {\n        // User-specific upload link\n        typeUserEl.textContent = userName || translate(\"settingsUploadLinksTypeUserFallback\");\n      } else {\n        // Unknown type (fallback)\n        typeUserEl.textContent = \"\u2014\";\n      }\n    }\n\n    // Status (active vs revoked)\n    const statusWrapper = row.querySelector('[data-role=\"status\"]');\n    const statusIcon = statusWrapper?.querySelector('[data-role=\"status-icon\"]');\n    const statusText = statusWrapper?.querySelector('[data-role=\"status-text\"]');\n    if (statusWrapper && statusIcon && statusText) {\n      const baseClass = \"inline-flex items-center gap-2 text-xs font-medium\";\n      if (link.active) {\n        statusWrapper.className = `${baseClass} text-green-600 dark:text-green-400`;\n        statusIcon.className = \"ri-shield-check-line text-sm leading-4\";\n        statusText.textContent = translate(\"settingsUploadLinksStatusActive\");\n      } else {\n        statusWrapper.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n        statusIcon.className = \"ri-forbid-2-line text-sm leading-4\";\n        statusText.textContent = translate(\"settingsUploadLinksStatusRevokedLabel\");\n      }\n    }\n\n    // Created date\n    const createdEl = row.querySelector('[data-role=\"created\"]');\n    if (createdEl) {\n      createdEl.textContent = this._formatUploadLinkTimestamp(link.created);\n    }\n\n    // Revoke button / Revoked indicator\n    const revokeButton = row.querySelector('[data-role=\"revoke-button\"]');\n    const revokedBadge = row.querySelector('[data-role=\"revoked-indicator\"]');\n    if (revokeButton && revokedBadge) {\n      revokeButton.dataset.action = \"revoke\";\n      revokeButton.dataset.tokenId = String(link.id);\n\n      // Show only the appropriate element based on active status\n      if (link.active) {\n        // Active link: show revoke button\n        revokeButton.classList.remove(\"hidden\");\n        // Keep badge hidden\n      } else {\n        // Revoked link: hide button, show badge\n        revokeButton.remove();\n        revokedBadge.classList.remove(\"hidden\");\n      }\n    }\n\n    // Translate the row elements\n    translateElement(row);\n\n    return row;\n  }\n\n  _formatUploadLinkTimestamp(timestamp) {\n    const value = Number(timestamp);\n    if (!Number.isFinite(value) || value <= 0) {\n      return translate(\"settingsUploadLinksCreatedUnknown\");\n    }\n    try {\n      return new Date(value * 1000).toLocaleString(undefined, {\n        dateStyle: \"medium\",\n        timeStyle: \"short\",\n      });\n    } catch (err) {\n      return translate(\"settingsUploadLinksCreatedUnknown\");\n    }\n  }\n}\n\ncustomElements.define(\"settings-upload-links-panel\", SettingsUploadLinksPanel);\n"],
  "mappings": "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",
  "names": []
}
