{
  "version": 3,
  "sources": ["../../src/tooltip.mjs"],
  "sourcesContent": ["/**\n * Tooltip System\n *\n * Simple tooltip helper that manages hover tooltips with smart delay logic.\n * Only one tooltip can be open at a time (excluding default-open tooltips).\n *\n * Usage:\n *   tooltip(element, \"Your text here\", { position: \"top\", default: \"closed\" })\n */\n\n// Track the currently open tooltip (non-default tooltips only)\nlet currentOpenTooltip = null;\nlet closeDelayTimeoutId = null;\n\n// Track all visible tooltips with their elements and positions for repositioning\nconst visibleTooltips = new Map(); // Map<tooltipEl, {element, position}>\n\n// Setup global scroll/resize listeners once\nlet globalListenersInitialized = false;\nfunction initGlobalListeners() {\n  if (globalListenersInitialized) return;\n  globalListenersInitialized = true;\n\n  const repositionAll = () => {\n    visibleTooltips.forEach(({ element, position }, tooltipEl) => {\n      if (element.isConnected && !tooltipEl.classList.contains(\"hidden\")) {\n        positionTooltip(tooltipEl, element, position);\n      }\n    });\n  };\n\n  window.addEventListener(\"scroll\", repositionAll, { passive: true });\n  window.addEventListener(\"resize\", repositionAll, { passive: true });\n}\n\n/**\n * Initialize a tooltip for an element\n * @param {HTMLElement} element - The element to attach the tooltip to\n * @param {string} text - The text to display in the tooltip\n * @param {Object} options - Configuration options\n * @param {string} options.position - \"top\", \"left\", \"right\", or \"bottom\" (default: \"top\")\n * @param {string} options.default - \"open\" or \"closed\" (default: \"closed\")\n */\nexport function tooltip(element, text, options = {}) {\n  const position = options.position || \"top\";\n  const isDefaultOpen = options.default === \"open\";\n\n  // Initialize global listeners on first tooltip\n  initGlobalListeners();\n\n  // Get the tooltip template\n  const template = document.getElementById(\"_template_tooltip\");\n  if (!template) {\n    console.warn(\"Tooltip template #_template_tooltip not found\");\n    return;\n  }\n\n  // Clone the template\n  const tooltipEl = template.content\n    .cloneNode(true)\n    .querySelector(\"[data-role='tooltip']\");\n  if (!tooltipEl) {\n    console.warn(\"Tooltip template missing [data-role='tooltip']\");\n    return;\n  }\n\n  // Set the text content\n  const contentEl = tooltipEl.querySelector(\"[data-role='tooltip-content']\");\n  if (contentEl) {\n    contentEl.textContent = text;\n  }\n\n  const positionClasses = getPositionClasses();\n  tooltipEl.className = `${tooltipEl.className} ${positionClasses}`;\n\n  // Set pointer positioning based on position option\n  const pointerEl = tooltipEl.querySelector(\"[data-role='tooltip-pointer']\");\n  if (pointerEl) {\n    const pointerClasses = getPointerClasses(position);\n    pointerEl.className = pointerClasses;\n  }\n\n  // Append tooltip to body to escape overflow clipping, but position relative to element\n  document.body.appendChild(tooltipEl);\n\n  // If default-open, show it immediately (after a frame to ensure element is rendered)\n  if (isDefaultOpen) {\n    requestAnimationFrame(() => {\n      if (element.isConnected) {\n        showTooltip(tooltipEl, element, position);\n      }\n    });\n  }\n\n  // Setup hover handlers (only for closed tooltips)\n  if (!isDefaultOpen) {\n    let openTimeoutId = null;\n\n    element.addEventListener(\"mouseenter\", () => {\n      // Clear any pending close\n      if (closeDelayTimeoutId) {\n        clearTimeout(closeDelayTimeoutId);\n        closeDelayTimeoutId = null;\n      }\n\n      // If another tooltip is open, open this one instantly and close the old one\n      if (currentOpenTooltip && currentOpenTooltip !== tooltipEl) {\n        hideTooltip(currentOpenTooltip);\n        openTimeoutId = null; // Clear any pending open since we're opening now\n        showTooltip(tooltipEl, element, position);\n        currentOpenTooltip = tooltipEl;\n      } else if (!currentOpenTooltip) {\n        // No tooltip open, schedule with 80ms delay\n        if (openTimeoutId) clearTimeout(openTimeoutId);\n        openTimeoutId = setTimeout(() => {\n          showTooltip(tooltipEl, element, position);\n          currentOpenTooltip = tooltipEl;\n          openTimeoutId = null;\n        }, 80);\n      }\n    });\n\n    element.addEventListener(\"mouseleave\", () => {\n      if (openTimeoutId) {\n        clearTimeout(openTimeoutId);\n        openTimeoutId = null;\n      }\n\n      if (closeDelayTimeoutId) clearTimeout(closeDelayTimeoutId);\n      closeDelayTimeoutId = setTimeout(() => {\n        if (currentOpenTooltip === tooltipEl) {\n          hideTooltip(tooltipEl);\n          currentOpenTooltip = null;\n        }\n        closeDelayTimeoutId = null;\n      }, 450);\n    });\n  }\n}\n\n/**\n * Show a tooltip element with smooth fade-in\n * Calculates position based on element bounds\n */\nfunction showTooltip(tooltipEl, element, position) {\n  // Use absolute positioning (relative to body which is positioned relative)\n  tooltipEl.style.position = \"absolute\";\n\n  // Show first to get dimensions\n  tooltipEl.classList.remove(\"hidden\");\n\n  // Track this tooltip for repositioning\n  visibleTooltips.set(tooltipEl, { element, position });\n\n  // Use requestAnimationFrame to ensure element is rendered before measuring\n  requestAnimationFrame(() => {\n    positionTooltip(tooltipEl, element, position);\n\n    // Apply fade-in after positioning\n    tooltipEl.classList.remove(\"opacity-0\");\n    tooltipEl.classList.add(\"opacity-100\");\n  });\n}\n\n/**\n * Position (or reposition) a tooltip based on its element\n */\nfunction positionTooltip(tooltipEl, element, position) {\n  const rect = element.getBoundingClientRect();\n  const tooltipRect = tooltipEl.getBoundingClientRect();\n  const offset = 8; // 8px gap from element\n\n  // Account for page scroll\n  const scrollTop = window.scrollY || document.documentElement.scrollTop;\n  const scrollLeft = window.scrollX || document.documentElement.scrollLeft;\n\n  let top, left;\n\n  switch (position) {\n    case \"bottom\":\n      top = rect.bottom + offset + scrollTop;\n      left = rect.left + rect.width / 2 - tooltipRect.width / 2 + scrollLeft;\n      break;\n    case \"left\":\n      top = rect.top + rect.height / 2 - tooltipRect.height / 2 + scrollTop;\n      left = rect.left - tooltipRect.width - offset + scrollLeft;\n      break;\n    case \"right\":\n      top = rect.top + rect.height / 2 - tooltipRect.height / 2 + scrollTop;\n      left = rect.right + offset + scrollLeft;\n      break;\n    case \"top\":\n    default:\n      top = rect.top - tooltipRect.height - offset + scrollTop;\n      left = rect.left + rect.width / 2 - tooltipRect.width / 2 + scrollLeft;\n  }\n\n  tooltipEl.style.top = top + \"px\";\n  tooltipEl.style.left = left + \"px\";\n}\n\n/**\n * Hide a tooltip element with smooth fade-out\n */\nfunction hideTooltip(tooltipEl) {\n  tooltipEl.classList.remove(\"visible\", \"opacity-100\");\n  tooltipEl.classList.add(\"hidden\", \"opacity-0\");\n\n  // Stop tracking this tooltip\n  visibleTooltips.delete(tooltipEl);\n}\n\n/**\n * Get position classes based on position option\n * (Position is calculated via JavaScript)\n */\nfunction getPositionClasses() {\n  return \"absolute px-2 py-1 text-xs rounded-lg shadow-lg z-[9999] transition-opacity duration-200 block max-w-sm\";\n}\n\n/**\n * Get pointer positioning classes based on position option\n * (Pointer is positioned at the edge of the tooltip)\n */\nfunction getPointerClasses(position) {\n  const baseClasses = \"absolute w-0 h-0\";\n\n  switch (position) {\n    case \"bottom\":\n      // Tooltip below element, pointer points up (at top of tooltip)\n      return `${baseClasses} -top-2 left-1/2 -translate-x-1/2 border-l-8 border-r-8 border-b-8 border-l-transparent border-r-transparent border-b-orange-700`;\n    case \"left\":\n      // Tooltip left of element, pointer points right (at right of tooltip)\n      return `${baseClasses} -right-2 top-1/2 -translate-y-1/2 border-t-8 border-b-8 border-l-8 border-t-transparent border-b-transparent border-l-orange-700`;\n    case \"right\":\n      // Tooltip right of element, pointer points left (at left of tooltip)\n      return `${baseClasses} -left-2 top-1/2 -translate-y-1/2 border-t-8 border-b-8 border-r-8 border-t-transparent border-b-transparent border-r-orange-700`;\n    case \"top\":\n    default:\n      // Tooltip above element, pointer points down (at bottom of tooltip)\n      return `${baseClasses} -bottom-2 left-1/2 -translate-x-1/2 border-l-8 border-r-8 border-t-8 border-l-transparent border-r-transparent border-t-orange-700`;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
