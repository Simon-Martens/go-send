{
  "version": 3,
  "sources": ["../../src/ui/settings-users-panel.mjs"],
  "sourcesContent": ["import storage from \"../storage.mjs\";\nimport { USER_ROLES } from \"../userSecrets.mjs\";\nimport { translate, translateElement, copyToClipboard } from \"../utils.mjs\";\nimport qrcode from \"../qrcode.mjs\";\n\n/**\n * Settings Users Panel\n * Manages signup links (admin/user) and user administration\n */\nclass SettingsUsersPanel extends HTMLElement {\n  constructor() {\n    super();\n    this._templateMounted = false;\n    this._isAdmin = false;\n\n    // Element refs - signup sections\n    this._signupSections = new Map();\n    this._signupOverview = null;\n    this._signupDetail = null;\n    this._detailHeading = null;\n    this._detailDescription = null;\n    this._detailStatusEl = null;\n    this._detailStatusIcon = null;\n    this._detailStatusText = null;\n    this._detailQrContainer = null;\n    this._detailLinkInput = null;\n    this._detailCopyButton = null;\n    this._detailCopyIcon = null;\n    this._detailBackButton = null;\n    this._activeDetailType = null;\n    this._activeDetailExpiresAt = null;\n\n    // Element refs - users list\n    this._usersHeader = null;\n    this._usersListSection = null;\n    this._usersListStatus = null;\n    this._usersListEmpty = null;\n    this._usersTableBody = null;\n    this._usersStatusIcon = null;\n    this._usersStatusText = null;\n\n    // State\n    this._usersData = [];\n    this._usersLoading = false;\n\n    // Bound handlers\n    this._boundGenerateClick = this._handleGenerateClick.bind(this);\n    this._boundRevokeClick = this._handleRevokeClick.bind(this);\n    this._boundDetailBack = this._handleDetailBack.bind(this);\n    this._boundDetailCopy = this._handleDetailCopy.bind(this);\n    this._boundDetailLinkFocus = this._handleDetailLinkFocus.bind(this);\n    this._boundUserAction = this._handleUserAction.bind(this);\n  }\n\n  connectedCallback() {\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"settings-users-panel\");\n      if (!template) {\n        console.error(\"Template #settings-users-panel not found\");\n        return;\n      }\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n    }\n\n    this._isAdmin = this._checkIsAdmin();\n\n    if (!this._isAdmin) {\n      console.warn(\"[SettingsUsersPanel] User is not admin, panel should not be visible\");\n      return;\n    }\n\n    this._cacheElements();\n    translateElement(this);\n    this._attachListeners();\n    this._initSignupSections();\n\n    // Load data\n    this._loadSignupOverview();\n    this._loadUsers();\n  }\n\n  disconnectedCallback() {\n    this._detachListeners();\n    // Clear all refs\n    this._signupSections.clear();\n    this._signupOverview = null;\n    this._signupDetail = null;\n    this._detailHeading = null;\n    this._detailDescription = null;\n    this._detailStatusEl = null;\n    this._detailStatusIcon = null;\n    this._detailStatusText = null;\n    this._detailQrContainer = null;\n    this._detailLinkInput = null;\n    this._detailCopyButton = null;\n    this._detailCopyIcon = null;\n    this._detailBackButton = null;\n    this._activeDetailType = null;\n    this._activeDetailExpiresAt = null;\n    this._usersHeader = null;\n    this._usersListSection = null;\n    this._usersListStatus = null;\n    this._usersListEmpty = null;\n    this._usersTableBody = null;\n    this._usersStatusIcon = null;\n    this._usersStatusText = null;\n    this._usersData = [];\n  }\n\n  _checkIsAdmin() {\n    const user = storage.user;\n    if (!user || user.role === undefined || user.role === null) {\n      return false;\n    }\n    const role = user.role;\n    if (typeof role === \"number\") {\n      return role === USER_ROLES.ADMIN;\n    }\n    if (typeof role === \"string\") {\n      const trimmed = role.trim();\n      if (!trimmed) {\n        return false;\n      }\n      const asNumber = Number.parseInt(trimmed, 10);\n      if (!Number.isNaN(asNumber)) {\n        return asNumber === USER_ROLES.ADMIN;\n      }\n      return trimmed.toLowerCase() === \"admin\";\n    }\n    return false;\n  }\n\n  _cacheElements() {\n    // Signup overview/detail\n    this._signupOverview = this.querySelector('[data-role=\"signup-overview\"]');\n    this._signupDetail = this.querySelector('[data-role=\"signup-detail\"]');\n    this._detailHeading = this.querySelector('[data-role=\"detail-heading\"]');\n    this._detailDescription = this.querySelector('[data-role=\"detail-description\"]');\n    this._detailStatusEl = this.querySelector('[data-role=\"detail-status\"]');\n    this._detailStatusIcon = this.querySelector('[data-role=\"detail-status-icon\"]');\n    this._detailStatusText = this.querySelector('[data-role=\"detail-status-text\"]');\n    this._detailQrContainer = this.querySelector('[data-role=\"detail-qr\"]');\n    this._detailLinkInput = this.querySelector('[data-role=\"detail-link\"]');\n    this._detailCopyButton = this.querySelector('[data-role=\"detail-copy\"]');\n    this._detailCopyIcon = this.querySelector('[data-role=\"detail-copy-icon\"]');\n    this._detailBackButton = this.querySelector('[data-role=\"detail-back\"]');\n\n    // Users list\n    this._usersHeader = this.querySelector('[data-role=\"users-header\"]');\n    this._usersListSection = this.querySelector('[data-role=\"users-list\"]');\n    this._usersListStatus = this.querySelector('[data-role=\"users-list-status\"]');\n    this._usersStatusIcon = this.querySelector('[data-role=\"users-list-status-icon\"]');\n    this._usersStatusText = this.querySelector('[data-role=\"users-list-status-text\"]');\n    this._usersListEmpty = this.querySelector('[data-role=\"users-list-empty\"]');\n    this._usersTableBody = this.querySelector('[data-role=\"users-table-body\"]');\n  }\n\n  _attachListeners() {\n    // Signup cards\n    const generateButtons = this.querySelectorAll('[data-role=\"generate\"]');\n    generateButtons.forEach((btn) => {\n      btn.addEventListener(\"click\", this._boundGenerateClick);\n    });\n\n    const revokeButtons = this.querySelectorAll('[data-role=\"revoke\"]');\n    revokeButtons.forEach((btn) => {\n      btn.addEventListener(\"click\", this._boundRevokeClick);\n    });\n\n    // Detail view\n    if (this._detailBackButton) {\n      this._detailBackButton.addEventListener(\"click\", this._boundDetailBack);\n    }\n    if (this._detailCopyButton) {\n      this._detailCopyButton.addEventListener(\"click\", this._boundDetailCopy);\n    }\n    if (this._detailLinkInput) {\n      this._detailLinkInput.addEventListener(\"focus\", this._boundDetailLinkFocus);\n    }\n\n    // Users table\n    if (this._usersTableBody) {\n      this._usersTableBody.addEventListener(\"click\", this._boundUserAction);\n    }\n  }\n\n  _detachListeners() {\n    const generateButtons = this.querySelectorAll('[data-role=\"generate\"]');\n    generateButtons.forEach((btn) => {\n      btn.removeEventListener(\"click\", this._boundGenerateClick);\n    });\n\n    const revokeButtons = this.querySelectorAll('[data-role=\"revoke\"]');\n    revokeButtons.forEach((btn) => {\n      btn.removeEventListener(\"click\", this._boundRevokeClick);\n    });\n\n    if (this._detailBackButton) {\n      this._detailBackButton.removeEventListener(\"click\", this._boundDetailBack);\n    }\n    if (this._detailCopyButton) {\n      this._detailCopyButton.removeEventListener(\"click\", this._boundDetailCopy);\n    }\n    if (this._detailLinkInput) {\n      this._detailLinkInput.removeEventListener(\"focus\", this._boundDetailLinkFocus);\n    }\n    if (this._usersTableBody) {\n      this._usersTableBody.removeEventListener(\"click\", this._boundUserAction);\n    }\n  }\n\n  _initSignupSections() {\n    this._signupSections.clear();\n    const cards = this.querySelectorAll('[data-role=\"signup-card\"]');\n    cards.forEach((card) => {\n      const type = card.getAttribute(\"data-token-type\");\n      if (!type) {\n        return;\n      }\n      const normalized = type.toLowerCase();\n      const section = {\n        container: card,\n        countEl: card.querySelector('[data-role=\"active-count\"]'),\n        generateButton: card.querySelector('[data-role=\"generate\"]'),\n        revokeButton: card.querySelector('[data-role=\"revoke\"]'),\n      };\n      this._signupSections.set(normalized, section);\n    });\n  }\n\n  _getSignupSection(type) {\n    if (!type) {\n      return null;\n    }\n    return this._signupSections.get(type.toLowerCase()) || null;\n  }\n\n  _setSignupCount(type, count) {\n    const section = this._getSignupSection(type);\n    if (!section || !section.countEl) {\n      return;\n    }\n    const value = Number.isFinite(count) ? count : 0;\n    section.countEl.textContent = String(value);\n  }\n\n  _setSectionLoading(section, isLoading) {\n    if (!section) {\n      return;\n    }\n    const disabled = Boolean(isLoading);\n    if (section.generateButton) {\n      section.generateButton.disabled = disabled;\n      section.generateButton.classList.toggle(\"opacity-60\", disabled);\n    }\n    if (section.revokeButton) {\n      section.revokeButton.disabled = disabled;\n      section.revokeButton.classList.toggle(\"opacity-60\", disabled);\n    }\n  }\n\n  _setDetailStatus(message, variant = \"info\") {\n    if (!this._detailStatusEl) {\n      return;\n    }\n    const baseClass = \"text-sm flex items-center gap-2 min-h-[1.25rem]\";\n    this._detailStatusEl.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n\n    if (this._detailStatusText) {\n      this._detailStatusText.textContent = message || \"\";\n    } else {\n      this._detailStatusEl.textContent = message || \"\";\n    }\n\n    if (this._detailStatusIcon) {\n      this._detailStatusIcon.className = \"hidden\";\n    }\n\n    if (!message) {\n      return;\n    }\n\n    let iconClass = \"ri-information-line text-grey-60 dark:text-grey-40\";\n    if (variant === \"success\") {\n      this._detailStatusEl.className = `${baseClass} text-green-600 dark:text-green-400`;\n      iconClass = \"ri-check-line text-green-600 dark:text-green-400\";\n    } else if (variant === \"error\") {\n      this._detailStatusEl.className = `${baseClass} text-red-600 dark:text-red-400`;\n      iconClass = \"ri-error-warning-line text-red-600 dark:text-red-400\";\n    }\n\n    if (this._detailStatusIcon) {\n      this._detailStatusIcon.className = iconClass;\n    }\n  }\n\n  _showSignupDetail(type, link, expiresAtSeconds) {\n    if (!this._signupDetail || !this._signupOverview) {\n      return;\n    }\n\n    this._activeDetailType = type;\n    this._activeDetailExpiresAt = expiresAtSeconds || null;\n\n    const headingKey =\n      type === \"admin\"\n        ? \"settingsUsersDetailHeadingAdmin\"\n        : \"settingsUsersDetailHeadingUser\";\n    if (this._detailHeading) {\n      this._detailHeading.textContent = translate(headingKey);\n    }\n\n    const expiresText = this._formatExpiry(expiresAtSeconds);\n    if (this._detailDescription) {\n      this._detailDescription.textContent = translate(\n        \"settingsUsersDetailDescription\",\n        {\n          date: expiresText,\n        },\n      );\n    }\n\n    this._setDetailStatus(\"\");\n\n    if (this._detailLinkInput) {\n      this._detailLinkInput.value = link || \"\";\n      requestAnimationFrame(() => {\n        this._detailLinkInput.select();\n        this._detailLinkInput.focus();\n      });\n    }\n\n    if (this._detailQrContainer) {\n      this._renderQRCode(this._detailQrContainer, link);\n    }\n\n    if (this._detailCopyIcon) {\n      const original =\n        this._detailCopyIcon.dataset.originalClass ||\n        this._detailCopyIcon.className;\n      this._detailCopyIcon.dataset.originalClass = original;\n      this._detailCopyIcon.className = original;\n    }\n\n    this._signupOverview.classList.add(\"hidden\");\n    this._signupDetail.classList.remove(\"hidden\");\n    if (this._usersHeader) {\n      this._usersHeader.classList.add(\"hidden\");\n    }\n    if (this._usersListSection) {\n      this._usersListSection.classList.add(\"hidden\");\n    }\n  }\n\n  _clearSignupDetail() {\n    if (!this._signupDetail || !this._signupOverview) {\n      return;\n    }\n    this._activeDetailType = null;\n    this._activeDetailExpiresAt = null;\n    if (this._detailLinkInput) {\n      this._detailLinkInput.value = \"\";\n    }\n    if (this._detailQrContainer) {\n      this._detailQrContainer.innerHTML = \"\";\n    }\n    if (this._detailCopyIcon && this._detailCopyIcon.dataset.originalClass) {\n      this._detailCopyIcon.className =\n        this._detailCopyIcon.dataset.originalClass;\n    }\n    this._setDetailStatus(\"\");\n    this._signupDetail.classList.add(\"hidden\");\n    this._signupOverview.classList.remove(\"hidden\");\n    if (this._usersHeader) {\n      this._usersHeader.classList.remove(\"hidden\");\n    }\n    if (this._usersListSection) {\n      this._usersListSection.classList.remove(\"hidden\");\n    }\n  }\n\n  _renderQRCode(container, value) {\n    if (!container) {\n      return;\n    }\n    if (!value) {\n      container.innerHTML = \"\";\n      return;\n    }\n    try {\n      const qr = qrcode(0, \"L\");\n      qr.addData(value);\n      qr.make();\n      container.innerHTML = qr.createSvgTag({\n        scalable: true,\n        cellSize: 4,\n        margin: 4,\n      });\n      const svgEl = container.querySelector(\"svg\");\n      if (svgEl) {\n        svgEl.style.maxWidth = \"200px\";\n        svgEl.style.height = \"auto\";\n      }\n    } catch (error) {\n      console.error(\"[SettingsUsersPanel] QR generation failed\", error);\n      container.innerHTML = `<p class=\"text-sm text-grey-60 dark:text-grey-40 text-center\">${translate(\"settingsUsersQrError\")}</p>`;\n    }\n  }\n\n  _setUsersStatus(message, variant = \"info\") {\n    if (!this._usersListStatus) {\n      return;\n    }\n    const baseClass = \"text-sm flex items-center gap-2 min-h-[1.25rem]\";\n    this._usersListStatus.className = `${baseClass} text-grey-60 dark:text-grey-40`;\n\n    if (this._usersStatusText) {\n      this._usersStatusText.textContent = message || \"\";\n    } else {\n      this._usersListStatus.textContent = message || \"\";\n    }\n\n    if (this._usersStatusIcon) {\n      this._usersStatusIcon.className = \"hidden\";\n    }\n\n    if (!message) {\n      return;\n    }\n\n    let iconClass = \"ri-information-line text-grey-60 dark:text-grey-40\";\n    if (variant === \"success\") {\n      this._usersListStatus.className = `${baseClass} text-green-600 dark:text-green-400`;\n      iconClass = \"ri-check-line text-green-600 dark:text-green-400\";\n    } else if (variant === \"error\") {\n      this._usersListStatus.className = `${baseClass} text-red-600 dark:text-red-400`;\n      iconClass = \"ri-error-warning-line text-red-600 dark:text-red-400\";\n    }\n\n    if (this._usersStatusIcon) {\n      this._usersStatusIcon.className = iconClass;\n    }\n  }\n\n  async _handleGenerateClick(event) {\n    event.preventDefault();\n    const button = event.currentTarget;\n    const type =\n      button?.getAttribute(\"data-token-type\")?.toLowerCase() || \"admin\";\n    const section = this._getSignupSection(type);\n    if (!section) {\n      return;\n    }\n\n    this._setSectionLoading(section, true);\n\n    try {\n      const response = await fetch(\"/api/admin/signup-links\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ type }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`generate_failed_${response.status}`);\n      }\n\n      const data = await response.json();\n      if (typeof data.active_count === \"number\") {\n        this._setSignupCount(type, data.active_count);\n      }\n      const expiresAt =\n        typeof data.expires_at === \"number\"\n          ? data.expires_at\n          : Number(data.expires_at || 0);\n      if (typeof data.link === \"string\") {\n        this._showSignupDetail(type, data.link, expiresAt);\n        this._setDetailStatus(\n          translate(\"settingsUsersGenerateSuccess\"),\n          \"success\",\n        );\n      }\n    } catch (error) {\n      console.error(\"[SettingsUsersPanel] Failed to create signup link\", error);\n      if (this._activeDetailType === type) {\n        this._setDetailStatus(translate(\"settingsUsersGenerateError\"), \"error\");\n      }\n    } finally {\n      this._setSectionLoading(section, false);\n    }\n  }\n\n  async _handleRevokeClick(event) {\n    event.preventDefault();\n    const button = event.currentTarget;\n    const type =\n      button?.getAttribute(\"data-token-type\")?.toLowerCase() || \"admin\";\n    const section = this._getSignupSection(type);\n    if (!section) {\n      return;\n    }\n\n    this._setSectionLoading(section, true);\n\n    try {\n      const response = await fetch(\n        `/api/admin/signup-links?type=${encodeURIComponent(type)}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        },\n      );\n\n      if (!response.ok) {\n        throw new Error(`revoke_failed_${response.status}`);\n      }\n\n      const data = await response.json();\n      if (typeof data.active_count === \"number\") {\n        this._setSignupCount(type, data.active_count);\n      } else {\n        this._setSignupCount(type, 0);\n      }\n      if (this._activeDetailType === type) {\n        this._clearSignupDetail();\n      }\n    } catch (error) {\n      console.error(\"[SettingsUsersPanel] Failed to revoke signup links\", error);\n      if (this._activeDetailType === type) {\n        this._setDetailStatus(translate(\"settingsUsersRevokeError\"), \"error\");\n      }\n    } finally {\n      this._setSectionLoading(section, false);\n    }\n  }\n\n  _handleDetailBack(event) {\n    event.preventDefault();\n    this._clearSignupDetail();\n  }\n\n  _handleDetailCopy(event) {\n    event.preventDefault();\n    if (!this._detailLinkInput) {\n      return;\n    }\n    const value = this._detailLinkInput.value;\n    if (!value) {\n      return;\n    }\n\n    const success = copyToClipboard(value);\n    if (success) {\n      this._setDetailStatus(\n        translate(\"settingsUsersDetailCopySuccess\"),\n        \"success\",\n      );\n      if (this._detailCopyIcon) {\n        const original =\n          this._detailCopyIcon.dataset.originalClass ||\n          this._detailCopyIcon.className;\n        this._detailCopyIcon.dataset.originalClass = original;\n        this._detailCopyIcon.className = \"ri-check-line text-lg leading-4\";\n        setTimeout(() => {\n          if (this._detailCopyIcon) {\n            this._detailCopyIcon.className =\n              this._detailCopyIcon.dataset.originalClass || original;\n          }\n        }, 2000);\n      }\n    } else {\n      this._setDetailStatus(translate(\"settingsUsersDetailCopyError\"), \"error\");\n    }\n  }\n\n  _handleDetailLinkFocus(event) {\n    const input = event.currentTarget;\n    if (input && typeof input.select === \"function\") {\n      input.select();\n    }\n  }\n\n  _formatExpiry(expiresAtSeconds) {\n    if (!expiresAtSeconds) {\n      return translate(\"settingsUsersDetailExpiresUnknown\");\n    }\n\n    const millis = Number(expiresAtSeconds) * 1000;\n    const date = new Date(millis);\n    if (Number.isNaN(date.getTime())) {\n      return translate(\"settingsUsersDetailExpiresUnknown\");\n    }\n\n    const locale = document.documentElement.lang || navigator.language || \"en\";\n    return new Intl.DateTimeFormat(locale, {\n      dateStyle: \"medium\",\n      timeStyle: \"short\",\n    }).format(date);\n  }\n\n  async _loadSignupOverview() {\n    try {\n      const response = await fetch(\"/api/admin/signup-links\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`overview_failed_${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data?.admin && typeof data.admin.active_count === \"number\") {\n        this._setSignupCount(\"admin\", data.admin.active_count);\n      }\n      if (data?.user && typeof data.user.active_count === \"number\") {\n        this._setSignupCount(\"user\", data.user.active_count);\n      }\n    } catch (error) {\n      console.error(\"[SettingsUsersPanel] Failed to load signup overview\", error);\n      this._setSignupCount(\"admin\", 0);\n      this._setSignupCount(\"user\", 0);\n      if (this._activeDetailType) {\n        this._setDetailStatus(translate(\"settingsUsersOverviewError\"), \"error\");\n      }\n    }\n  }\n\n  async _loadUsers() {\n    if (!this._usersListSection) {\n      return;\n    }\n    if (this._usersLoading) {\n      return;\n    }\n\n    this._usersLoading = true;\n    this._setUsersStatus(translate(\"settingsUsersListLoading\"), \"info\");\n\n    try {\n      const response = await fetch(\"/api/admin/users\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`users_list_failed_${response.status}`);\n      }\n\n      const payload = await response.json();\n      const list = Array.isArray(payload?.users) ? payload.users : [];\n      this._usersData = list.map((user) => ({\n        id: Number.parseInt(user.id, 10) || user.id,\n        name: user.name || \"\",\n        email: user.email || \"\",\n        role: user.role || \"\",\n        active: Boolean(user.active),\n        public_key: user.public_key || \"\",\n        encryption_public_key: user.encryption_public_key || \"\",\n        active_sessions: Number.isFinite(user.active_sessions)\n          ? user.active_sessions\n          : Number.parseInt(user.active_sessions ?? 0, 10) || 0,\n        is_current_user: Boolean(user.is_current_user),\n        created: user.created || 0,\n        updated: user.updated || 0,\n      }));\n\n      this._renderUsers();\n      this._setUsersStatus(\"\", \"info\");\n    } catch (error) {\n      console.error(\"[SettingsUsersPanel] Failed to load users\", error);\n      this._setUsersStatus(translate(\"settingsUsersListError\"), \"error\");\n    } finally {\n      this._usersLoading = false;\n    }\n  }\n\n  _renderUsers() {\n    if (!this._usersTableBody) {\n      return;\n    }\n\n    if (!Array.isArray(this._usersData) || !this._usersData.length) {\n      this._usersTableBody.innerHTML = \"\";\n      if (this._usersListEmpty) {\n        this._usersListEmpty.classList.remove(\"hidden\");\n      }\n      return;\n    }\n\n    if (this._usersListEmpty) {\n      this._usersListEmpty.classList.add(\"hidden\");\n    }\n\n    // Clear existing rows\n    this._usersTableBody.innerHTML = \"\";\n\n    // Create and append rows from template\n    for (const user of this._usersData) {\n      const row = this._createUserRow(user);\n      if (row) {\n        this._usersTableBody.appendChild(row);\n      }\n    }\n  }\n\n  _createUserRow(user) {\n    const template = document.getElementById(\"settings-user-item\");\n    if (!template) {\n      console.error(\"Template #settings-user-item not found\");\n      return null;\n    }\n\n    const fragment = template.content.cloneNode(true);\n    const row = fragment.querySelector('[data-role=\"user-row\"]');\n    if (!row) {\n      return null;\n    }\n\n    row.dataset.userId = String(user.id);\n\n    // Name\n    const nameEl = row.querySelector('[data-role=\"user-name\"]');\n    if (nameEl) {\n      nameEl.textContent = this._getDisplayName(user);\n    }\n\n    // \"You\" badge (shown for current user only)\n    const youBadge = row.querySelector('[data-role=\"you-badge\"]');\n    if (youBadge) {\n      if (user.is_current_user) {\n        youBadge.classList.remove(\"hidden\");\n      } else {\n        youBadge.remove();\n      }\n    }\n\n    // Meta (role & status)\n    const roleLabel = row.querySelector('[data-role=\"role-label\"]');\n    const statusLabel = row.querySelector('[data-role=\"status-label\"]');\n    const metaSeparator = row.querySelector('[data-role=\"meta-separator\"]');\n\n    const roleLabelText = this._formatUserRole(user.role);\n    const statusLabelText = this._formatUserStatus(user.active);\n\n    if (roleLabel && roleLabelText) {\n      roleLabel.textContent = roleLabelText;\n    }\n\n    if (statusLabel && statusLabelText) {\n      statusLabel.textContent = statusLabelText;\n      const statusClass = user.active\n        ? \"text-green-600 dark:text-green-400\"\n        : \"text-red-600 dark:text-red-400\";\n      statusLabel.className = statusClass;\n\n      if (metaSeparator) {\n        metaSeparator.classList.remove(\"hidden\");\n      }\n    }\n\n    // Email\n    const emailEl = row.querySelector('[data-role=\"user-email\"]');\n    if (emailEl) {\n      const emailText = user.email?.trim() || \"\";\n      emailEl.textContent = emailText || \"\u2014\";\n    }\n\n    // Public Keys\n    const signingKeyEl = row.querySelector('[data-role=\"signing-key\"]');\n    const signingKeyTitle = (user.public_key || \"\").trim();\n    const signingKey = this._formatKey(signingKeyTitle);\n    if (signingKeyEl) {\n      signingKeyEl.textContent = signingKey;\n      if (signingKeyTitle) {\n        signingKeyEl.title = signingKeyTitle;\n      }\n    }\n\n    const encryptionKeyEl = row.querySelector('[data-role=\"encryption-key\"]');\n    const encryptionKeyTitle = (user.encryption_public_key || \"\").trim();\n    const encryptionKey = this._formatKey(encryptionKeyTitle);\n    if (encryptionKeyEl) {\n      encryptionKeyEl.textContent = encryptionKey;\n      if (encryptionKeyTitle) {\n        encryptionKeyEl.title = encryptionKeyTitle;\n      }\n    }\n\n    // Copy buttons for keys\n    const copySigningBtn = row.querySelector('[data-role=\"copy-signing-key\"]');\n    if (copySigningBtn) {\n      if (signingKeyTitle) {\n        copySigningBtn.dataset.userAction = \"copy-key\";\n        copySigningBtn.dataset.userId = String(user.id);\n        copySigningBtn.dataset.keyValue = signingKeyTitle;\n        const copyActionLabel = translate(\"copyLinkButton\");\n        const signingCopyLabel = `${copyActionLabel} \u2013 ${translate(\"settingsUsersKeySigning\")}`;\n        copySigningBtn.setAttribute(\"aria-label\", signingCopyLabel);\n        copySigningBtn.title = signingCopyLabel;\n        const srLabel = copySigningBtn.querySelector(\".sr-only\");\n        if (srLabel) {\n          srLabel.textContent = signingCopyLabel;\n        }\n        copySigningBtn.classList.remove(\"hidden\");\n      }\n    }\n\n    const copyEncryptionBtn = row.querySelector('[data-role=\"copy-encryption-key\"]');\n    if (copyEncryptionBtn) {\n      if (encryptionKeyTitle) {\n        copyEncryptionBtn.dataset.userAction = \"copy-key\";\n        copyEncryptionBtn.dataset.userId = String(user.id);\n        copyEncryptionBtn.dataset.keyValue = encryptionKeyTitle;\n        const copyActionLabel = translate(\"copyLinkButton\");\n        const encryptionCopyLabel = `${copyActionLabel} \u2013 ${translate(\"settingsUsersKeyEncryption\")}`;\n        copyEncryptionBtn.setAttribute(\"aria-label\", encryptionCopyLabel);\n        copyEncryptionBtn.title = encryptionCopyLabel;\n        const srLabel = copyEncryptionBtn.querySelector(\".sr-only\");\n        if (srLabel) {\n          srLabel.textContent = encryptionCopyLabel;\n        }\n        copyEncryptionBtn.classList.remove(\"hidden\");\n      }\n    }\n\n    // Sessions count\n    const sessionsEl = row.querySelector('[data-role=\"sessions-count\"]');\n    if (sessionsEl) {\n      sessionsEl.textContent = Number.isFinite(user.active_sessions) ? String(user.active_sessions) : \"0\";\n    }\n\n    // Action buttons\n    const toggleButton = row.querySelector('[data-role=\"toggle-button\"]');\n    if (toggleButton) {\n      const toggleAction = user.active ? \"deactivate\" : \"activate\";\n      const toggleIcon = user.active ? \"ri-user-unfollow-line\" : \"ri-user-follow-line\";\n      const toggleButtonLabel = user.active\n        ? translate(\"settingsUsersActionDeactivate\")\n        : translate(\"settingsUsersActionActivate\");\n      const baseButtonClass = \"inline-flex items-center justify-center px-3 py-1.5 text-xs font-medium rounded border transition cursor-pointer disabled:opacity-40 disabled:cursor-not-allowed\";\n      const deactivateButtonClass = `${baseButtonClass} text-yellow-700 dark:text-yellow-300 border-yellow-200 dark:border-yellow-400/40 bg-yellow-50/60 dark:bg-yellow-900/20 hover:bg-yellow-50 dark:hover:bg-yellow-900/30`;\n      const activateButtonClass = `${baseButtonClass} text-green-700 dark:text-green-300 border-green-200 dark:border-green-400/40 bg-green-50/60 dark:bg-green-900/20 hover:bg-green-50 dark:hover:bg-green-900/30`;\n\n      toggleButton.className = user.active ? deactivateButtonClass : activateButtonClass;\n      toggleButton.dataset.userAction = toggleAction;\n      toggleButton.dataset.userId = String(user.id);\n      toggleButton.setAttribute(\"aria-label\", toggleButtonLabel);\n\n      const toggleDisabled = user.active && user.is_current_user;\n      if (toggleDisabled) {\n        toggleButton.disabled = true;\n        toggleButton.title = translate(\"settingsUsersActionDeactivateSelfError\");\n      }\n\n      const toggleIconEl = toggleButton.querySelector('[data-role=\"toggle-icon\"]');\n      if (toggleIconEl) {\n        toggleIconEl.className = `${toggleIcon} text-base leading-4`;\n      }\n    }\n\n    const clearSessionsButton = row.querySelector('[data-role=\"clear-sessions-button\"]');\n    if (clearSessionsButton) {\n      const clearDisabled = user.active_sessions === 0;\n      clearSessionsButton.dataset.userAction = \"clear-sessions\";\n      clearSessionsButton.dataset.userId = String(user.id);\n      clearSessionsButton.setAttribute(\"aria-label\", translate(\"settingsUsersActionClearSessions\"));\n\n      if (clearDisabled) {\n        clearSessionsButton.disabled = true;\n        clearSessionsButton.title = translate(\"settingsUsersActionClearDisabledTooltip\");\n      }\n    }\n\n    const deleteButton = row.querySelector('[data-role=\"delete-button\"]');\n    if (deleteButton) {\n      const deleteDisabled = user.is_current_user;\n      deleteButton.dataset.userAction = \"delete\";\n      deleteButton.dataset.userId = String(user.id);\n      deleteButton.setAttribute(\"aria-label\", translate(\"settingsUsersActionDelete\"));\n\n      if (deleteDisabled) {\n        deleteButton.disabled = true;\n        deleteButton.title = translate(\"settingsUsersActionDeleteSelfTooltip\");\n      }\n    }\n\n    // Translate the row elements\n    translateElement(row);\n\n    return row;\n  }\n\n  _getDisplayName(user) {\n    if (!user) {\n      return translate(\"settingsUsersNameFallback\");\n    }\n    const name = user.name?.trim();\n    if (name) {\n      return name;\n    }\n    const email = user.email?.trim();\n    if (email) {\n      return email;\n    }\n    return translate(\"settingsUsersNameFallback\");\n  }\n\n  _formatUserRole(role) {\n    const normalized = (role || \"\").toString().toLowerCase();\n    if (normalized === \"admin\") {\n      return translate(\"settingsUsersRoleAdmin\");\n    }\n    if (normalized === \"user\") {\n      return translate(\"settingsUsersRoleUser\");\n    }\n    if (normalized === \"guest\") {\n      return translate(\"settingsUsersRoleGuest\");\n    }\n    return translate(\"settingsUsersRoleUnknown\");\n  }\n\n  _formatUserStatus(active) {\n    return active\n      ? translate(\"settingsUsersStatusActive\")\n      : translate(\"settingsUsersStatusInactive\");\n  }\n\n  _formatKey(key) {\n    const value = (key || \"\").trim();\n    if (!value) {\n      return translate(\"settingsUsersKeyMissing\");\n    }\n    if (value.length <= 36) {\n      return value;\n    }\n    return `${value.slice(0, 20)}\u2026${value.slice(-10)}`;\n  }\n\n  async _handleUserAction(event) {\n    const button = event.target.closest(\"[data-user-action]\");\n    if (!button || button.disabled) {\n      return;\n    }\n\n    const action = button.getAttribute(\"data-user-action\");\n    const idAttr = button.getAttribute(\"data-user-id\");\n    const userID = Number.parseInt(idAttr || \"\", 10);\n\n    if (!Number.isFinite(userID)) {\n      return;\n    }\n\n    const user = this._usersData.find((item) => item.id === userID);\n    if (!user) {\n      return;\n    }\n\n    if (action === \"copy-key\") {\n      event.preventDefault();\n      const value = button.getAttribute(\"data-key-value\") || \"\";\n      if (!value) {\n        this._setUsersStatus(translate(\"settingsUsersCopyError\"), \"error\");\n        return;\n      }\n      const success = copyToClipboard(value);\n      if (success) {\n        this._setUsersStatus(translate(\"settingsUsersCopySuccess\"), \"success\");\n        const icon = button.querySelector(\"i\");\n        if (icon) {\n          const original = icon.dataset.originalClass || icon.className;\n          icon.dataset.originalClass = original;\n          icon.className = \"ri-check-line text-base leading-4\";\n          setTimeout(() => {\n            if (icon && icon.dataset.originalClass) {\n              icon.className = icon.dataset.originalClass;\n            }\n          }, 2000);\n        }\n      } else {\n        this._setUsersStatus(translate(\"settingsUsersCopyError\"), \"error\");\n      }\n      return;\n    }\n\n    const displayName = this._getDisplayName(user);\n\n    if (action === \"deactivate\") {\n      if (user.is_current_user) {\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeactivateSelfError\"),\n          \"error\",\n        );\n        return;\n      }\n\n      this._setUsersStatus(\n        translate(\"settingsUsersActionDeactivateWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionDeactivateWorking\"),\n      );\n\n      try {\n        const response = await fetch(`/api/admin/users/${userID}/deactivate`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`deactivate_user_failed_${response.status}`);\n        }\n\n        succeeded = true;\n        await this._loadUsers();\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeactivateSuccess\", {\n            name: displayName,\n          }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsUsersPanel] Failed to deactivate user\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeactivateError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n\n      return;\n    }\n\n    if (action === \"activate\") {\n      this._setUsersStatus(\n        translate(\"settingsUsersActionActivateWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionActivateWorking\"),\n      );\n\n      try {\n        const response = await fetch(`/api/admin/users/${userID}/activate`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`activate_user_failed_${response.status}`);\n        }\n\n        succeeded = true;\n        await this._loadUsers();\n        this._setUsersStatus(\n          translate(\"settingsUsersActionActivateSuccess\", {\n            name: displayName,\n          }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsUsersPanel] Failed to activate user\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionActivateError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n\n      return;\n    }\n\n    if (action === \"clear-sessions\") {\n      if (user.active_sessions === 0) {\n        return;\n      }\n\n      this._setUsersStatus(\n        translate(\"settingsUsersActionClearWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionClearWorking\"),\n      );\n\n      try {\n        const response = await fetch(\n          `/api/admin/users/${userID}/clear-sessions`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          },\n        );\n\n        if (!response.ok) {\n          throw new Error(`clear_sessions_failed_${response.status}`);\n        }\n\n        user.active_sessions = 0;\n        succeeded = true;\n        await this._loadUsers();\n        if (user.is_current_user) {\n          window.location.assign(\"/login\");\n          return;\n        }\n        this._setUsersStatus(\n          translate(\"settingsUsersActionClearSuccess\", { name: displayName }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsUsersPanel] Failed to clear sessions\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionClearError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n\n      return;\n    }\n\n    if (action === \"delete\") {\n      if (user.is_current_user) {\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeleteSelfError\"),\n          \"error\",\n        );\n        return;\n      }\n\n      const confirmed = window.confirm(\n        translate(\"settingsUsersActionDeleteConfirm\", { name: displayName }),\n      );\n      if (!confirmed) {\n        return;\n      }\n\n      this._setUsersStatus(\n        translate(\"settingsUsersActionDeleteWorking\"),\n        \"info\",\n      );\n      let succeeded = false;\n      this._setButtonLoading(\n        button,\n        \"ri-loader-4-line\",\n        translate(\"settingsUsersActionDeleteWorking\"),\n      );\n\n      try {\n        const response = await fetch(`/api/admin/users/${userID}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`delete_user_failed_${response.status}`);\n        }\n\n        succeeded = true;\n        await this._loadUsers();\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeleteSuccess\", { name: displayName }),\n          \"success\",\n        );\n      } catch (error) {\n        console.error(\"[SettingsUsersPanel] Failed to delete user\", error);\n        this._setUsersStatus(\n          translate(\"settingsUsersActionDeleteError\"),\n          \"error\",\n        );\n      } finally {\n        if (!succeeded) {\n          this._restoreButton(button);\n        }\n      }\n    }\n  }\n\n  _setButtonLoading(button, iconClass, text) {\n    if (!button) {\n      return;\n    }\n    if (!button.dataset.originalContent) {\n      button.dataset.originalContent = button.innerHTML;\n    }\n    if (!button.dataset.originalAriaLabel) {\n      button.dataset.originalAriaLabel =\n        button.getAttribute(\"aria-label\") || \"\";\n    }\n    const icon = iconClass\n      ? `<i class=\"${iconClass} text-base leading-4 animate-spin\" aria-hidden=\"true\"></i>`\n      : \"\";\n    button.innerHTML = icon || \"\";\n    if (text) {\n      button.setAttribute(\"aria-label\", text);\n    }\n    button.setAttribute(\"aria-busy\", \"true\");\n    button.disabled = true;\n    button.classList.add(\"opacity-60\");\n  }\n\n  _restoreButton(button) {\n    if (!button || !button.dataset.originalContent) {\n      return;\n    }\n    button.innerHTML = button.dataset.originalContent;\n    if (button.dataset.originalAriaLabel !== undefined) {\n      if (button.dataset.originalAriaLabel) {\n        button.setAttribute(\"aria-label\", button.dataset.originalAriaLabel);\n      } else {\n        button.removeAttribute(\"aria-label\");\n      }\n      delete button.dataset.originalAriaLabel;\n    }\n    button.removeAttribute(\"aria-busy\");\n    button.disabled = false;\n    button.classList.remove(\"opacity-60\");\n    delete button.dataset.originalContent;\n  }\n}\n\ncustomElements.define(\"settings-users-panel\", SettingsUsersPanel);\n"],
  "mappings": "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",
  "names": []
}
