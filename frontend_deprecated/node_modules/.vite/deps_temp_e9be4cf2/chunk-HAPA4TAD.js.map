{
  "version": 3,
  "sources": ["../../remove-array-items/index.js", "../../nanobus/index.js"],
  "sourcesContent": ["'use strict'\n\n/**\n * Remove a range of items from an array\n *\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nmodule.exports = function removeItems (arr, startIdx, removeCount) {\n  var i, length = arr.length\n\n  if (startIdx >= length || removeCount === 0) {\n    return\n  }\n\n  removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount)\n\n  var len = length - removeCount\n\n  for (i = startIdx; i < len; ++i) {\n    arr[i] = arr[i + removeCount]\n  }\n\n  arr.length = len\n}\n", "var splice = require('remove-array-items')\nvar nanotiming = require('nanotiming')\nvar assert = require('assert')\n\nmodule.exports = Nanobus\n\nfunction Nanobus (name) {\n  if (!(this instanceof Nanobus)) return new Nanobus(name)\n\n  this._name = name || 'nanobus'\n  this._starListeners = []\n  this._listeners = {}\n}\n\nNanobus.prototype.emit = function (eventName) {\n  assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.emit: eventName should be type string or symbol')\n\n  var data = []\n  for (var i = 1, len = arguments.length; i < len; i++) {\n    data.push(arguments[i])\n  }\n\n  var emitTiming = nanotiming(this._name + \"('\" + eventName.toString() + \"')\")\n  var listeners = this._listeners[eventName]\n  if (listeners && listeners.length > 0) {\n    this._emit(this._listeners[eventName], data)\n  }\n\n  if (this._starListeners.length > 0) {\n    this._emit(this._starListeners, eventName, data, emitTiming.uuid)\n  }\n  emitTiming()\n\n  return this\n}\n\nNanobus.prototype.on = Nanobus.prototype.addListener = function (eventName, listener) {\n  assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.on: eventName should be type string or symbol')\n  assert.equal(typeof listener, 'function', 'nanobus.on: listener should be type function')\n\n  if (eventName === '*') {\n    this._starListeners.push(listener)\n  } else {\n    if (!this._listeners[eventName]) this._listeners[eventName] = []\n    this._listeners[eventName].push(listener)\n  }\n  return this\n}\n\nNanobus.prototype.prependListener = function (eventName, listener) {\n  assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.prependListener: eventName should be type string or symbol')\n  assert.equal(typeof listener, 'function', 'nanobus.prependListener: listener should be type function')\n\n  if (eventName === '*') {\n    this._starListeners.unshift(listener)\n  } else {\n    if (!this._listeners[eventName]) this._listeners[eventName] = []\n    this._listeners[eventName].unshift(listener)\n  }\n  return this\n}\n\nNanobus.prototype.once = function (eventName, listener) {\n  assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.once: eventName should be type string or symbol')\n  assert.equal(typeof listener, 'function', 'nanobus.once: listener should be type function')\n\n  var self = this\n  this.on(eventName, once)\n  function once () {\n    listener.apply(self, arguments)\n    self.removeListener(eventName, once)\n  }\n  return this\n}\n\nNanobus.prototype.prependOnceListener = function (eventName, listener) {\n  assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.prependOnceListener: eventName should be type string or symbol')\n  assert.equal(typeof listener, 'function', 'nanobus.prependOnceListener: listener should be type function')\n\n  var self = this\n  this.prependListener(eventName, once)\n  function once () {\n    listener.apply(self, arguments)\n    self.removeListener(eventName, once)\n  }\n  return this\n}\n\nNanobus.prototype.removeListener = function (eventName, listener) {\n  assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.removeListener: eventName should be type string or symbol')\n  assert.equal(typeof listener, 'function', 'nanobus.removeListener: listener should be type function')\n\n  if (eventName === '*') {\n    this._starListeners = this._starListeners.slice()\n    return remove(this._starListeners, listener)\n  } else {\n    if (typeof this._listeners[eventName] !== 'undefined') {\n      this._listeners[eventName] = this._listeners[eventName].slice()\n    }\n\n    return remove(this._listeners[eventName], listener)\n  }\n\n  function remove (arr, listener) {\n    if (!arr) return\n    var index = arr.indexOf(listener)\n    if (index !== -1) {\n      splice(arr, index, 1)\n      return true\n    }\n  }\n}\n\nNanobus.prototype.removeAllListeners = function (eventName) {\n  if (eventName) {\n    if (eventName === '*') {\n      this._starListeners = []\n    } else {\n      this._listeners[eventName] = []\n    }\n  } else {\n    this._starListeners = []\n    this._listeners = {}\n  }\n  return this\n}\n\nNanobus.prototype.listeners = function (eventName) {\n  var listeners = eventName !== '*'\n    ? this._listeners[eventName]\n    : this._starListeners\n\n  var ret = []\n  if (listeners) {\n    var ilength = listeners.length\n    for (var i = 0; i < ilength; i++) ret.push(listeners[i])\n  }\n  return ret\n}\n\nNanobus.prototype._emit = function (arr, eventName, data, uuid) {\n  if (typeof arr === 'undefined') return\n  if (arr.length === 0) return\n  if (data === undefined) {\n    data = eventName\n    eventName = null\n  }\n\n  if (eventName) {\n    if (uuid !== undefined) {\n      data = [eventName].concat(data, uuid)\n    } else {\n      data = [eventName].concat(data)\n    }\n  }\n\n  var length = arr.length\n  for (var i = 0; i < length; i++) {\n    var listener = arr[i]\n    listener.apply(listener, data)\n  }\n}\n"],
  "mappings": "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",
  "names": ["listener"]
}
