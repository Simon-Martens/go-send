{
  "version": 3,
  "sources": ["../../src/ui/file-downloading.mjs"],
  "sourcesContent": ["import { translateElement } from \"../utils.mjs\";\nimport { bytes } from \"../utils.mjs\";\n\n/**\n * <file-downloading-view> - Shows download progress\n *\n * Displays:\n * - File name and size\n * - Progress bar with animated stripes\n * - Progress percentage\n */\nclass FileDownloadingElement extends HTMLElement {\n  constructor() {\n    super();\n\n    this._templateMounted = false;\n    this._postMountFrame = null;\n    this._progressBar = null;\n    this._progressPercent = null;\n  }\n\n  connectedCallback() {\n    // Mount template first (synchronous)\n    if (!this._templateMounted) {\n      const template = document.getElementById(\"file-downloading-view\");\n      if (!template) {\n        console.error(\"Template #file-downloading-view not found\");\n        return;\n      }\n\n      const content = template.content.cloneNode(true);\n      this.appendChild(content);\n      this._templateMounted = true;\n\n      // Cache references to progress elements\n      this._progressBar = this.querySelector('[data-role=\"progress-bar\"]');\n      this._progressPercent = this.querySelector('[data-role=\"progress-percent\"]');\n    }\n\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n    }\n\n    // Schedule async initialization\n    this._postMountFrame = requestAnimationFrame(() => {\n      this._postMountFrame = null;\n      if (!this.isConnected) {\n        return;\n      }\n\n      translateElement(this);\n    });\n  }\n\n  disconnectedCallback() {\n    if (this._postMountFrame !== null) {\n      cancelAnimationFrame(this._postMountFrame);\n      this._postMountFrame = null;\n    }\n  }\n\n  /**\n   * Update download progress\n   * @param {number} ratio - Progress ratio from 0.0 to 1.0\n   * @param {number} bytesDownloaded - Bytes downloaded so far\n   * @param {number} totalBytes - Total bytes to download\n   */\n  updateProgress(ratio, bytesDownloaded, totalBytes) {\n    if (this._progressBar) {\n      this._progressBar.value = ratio;\n    }\n\n    if (this._progressPercent) {\n      const percent = Math.round(ratio * 100);\n      this._progressPercent.textContent = `${percent}%`;\n    }\n  }\n\n  /**\n   * Set file information\n   * @param {string} name - File name\n   * @param {number} size - File size in bytes\n   */\n  setFileInfo(name, size) {\n    const nameEl = this.querySelector('[data-role=\"file-name\"]');\n    const sizeEl = this.querySelector('[data-role=\"file-size\"]');\n\n    if (nameEl) {\n      nameEl.textContent = name;\n    }\n    if (sizeEl) {\n      sizeEl.textContent = bytes(size);\n    }\n  }\n}\n\n// Register the custom element\ncustomElements.define(\"file-downloading-view\", FileDownloadingElement);\n"],
  "mappings": ";;;;;;;AAWA,IAAM,yBAAN,cAAqC,YAAY;AAAA,EAC/C,cAAc;AACZ,UAAM;AAEN,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EAEA,oBAAoB;AAElB,QAAI,CAAC,KAAK,kBAAkB;AAC1B,YAAM,WAAW,SAAS,eAAe,uBAAuB;AAChE,UAAI,CAAC,UAAU;AACb,gBAAQ,MAAM,2CAA2C;AACzD;AAAA,MACF;AAEA,YAAM,UAAU,SAAS,QAAQ,UAAU,IAAI;AAC/C,WAAK,YAAY,OAAO;AACxB,WAAK,mBAAmB;AAGxB,WAAK,eAAe,KAAK,cAAc,4BAA4B;AACnE,WAAK,mBAAmB,KAAK,cAAc,gCAAgC;AAAA,IAC7E;AAEA,QAAI,KAAK,oBAAoB,MAAM;AACjC,2BAAqB,KAAK,eAAe;AAAA,IAC3C;AAGA,SAAK,kBAAkB,sBAAsB,MAAM;AACjD,WAAK,kBAAkB;AACvB,UAAI,CAAC,KAAK,aAAa;AACrB;AAAA,MACF;AAEA,uBAAiB,IAAI;AAAA,IACvB,CAAC;AAAA,EACH;AAAA,EAEA,uBAAuB;AACrB,QAAI,KAAK,oBAAoB,MAAM;AACjC,2BAAqB,KAAK,eAAe;AACzC,WAAK,kBAAkB;AAAA,IACzB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,eAAe,OAAO,iBAAiB,YAAY;AACjD,QAAI,KAAK,cAAc;AACrB,WAAK,aAAa,QAAQ;AAAA,IAC5B;AAEA,QAAI,KAAK,kBAAkB;AACzB,YAAM,UAAU,KAAK,MAAM,QAAQ,GAAG;AACtC,WAAK,iBAAiB,cAAc,GAAG,OAAO;AAAA,IAChD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,MAAM,MAAM;AACtB,UAAM,SAAS,KAAK,cAAc,yBAAyB;AAC3D,UAAM,SAAS,KAAK,cAAc,yBAAyB;AAE3D,QAAI,QAAQ;AACV,aAAO,cAAc;AAAA,IACvB;AACA,QAAI,QAAQ;AACV,aAAO,cAAc,MAAM,IAAI;AAAA,IACjC;AAAA,EACF;AACF;AAGA,eAAe,OAAO,yBAAyB,sBAAsB;",
  "names": []
}
